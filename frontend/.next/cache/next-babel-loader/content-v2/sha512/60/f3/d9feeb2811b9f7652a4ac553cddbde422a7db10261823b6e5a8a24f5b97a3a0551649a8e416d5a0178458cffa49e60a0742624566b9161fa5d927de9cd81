{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useRef } from \"react\";\nimport Graph from \"../components/Graph\";\nimport format from \"date-fns/format\";\nimport { parseISO } from \"date-fns\";\nimport axios from \"axios\";\nimport getConfig from \"next/config\";\nconst {\n  publicRuntimeConfig: publicConfig\n} = getConfig();\nexport default function Metric({\n  disconnected,\n  uuid,\n  socket,\n  type,\n  mtToken\n}) {\n  const graphReference = useRef();\n  useEffect(() => {\n    async function fetchMetrics() {\n      try {\n        const {\n          data: dataResult\n        } = await axios.get(`${publicConfig.api_url}/api/metrics/${uuid}/${type}`);\n        if (!graphReference.current) return;\n        const chart = graphReference.current;\n        const dataset = chart.data.datasets[0];\n        const data = chart.data;\n        const orderData = dataResult.reverse();\n\n        if (Array.isArray(orderData)) {\n          orderData.forEach(m => {\n            data.labels.push(format(parseISO(m.createdat), \"HH:mm:ss\"));\n            dataset.data.push(m.value);\n            chart.update(\"none\");\n            chart.update();\n          });\n        }\n      } catch (error) {\n        return;\n      }\n    }\n\n    fetchMetrics();\n\n    if (socket) {\n      socket.on(\"agent/message\", payload => {\n        if (payload.token !== mtToken) return;\n\n        if (payload.agent.uuid === uuid) {\n          const metric = payload.metrics.find(m => m.type === type);\n          if (!graphReference.current) return;\n          const chart = graphReference.current;\n          const data = chart.data.datasets[0].data;\n          const labels = chart.data.labels;\n\n          if (data.length >= 20) {\n            labels.shift();\n            data.shift();\n          }\n\n          const labelM = format(metric.createdat, \"HH:mm:ss\");\n          const dataM = metric.value;\n          labels.push(labelM);\n          data.push(dataM);\n          chart.update(\"active\");\n        }\n      });\n    }\n  }, [disconnected]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"border-gray-200 rounded-lg h-auto md:p-4\\t\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \" bg-gray-50 p-2\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"h-auto\",\n        children: /*#__PURE__*/_jsx(Graph, {\n          graphReference: graphReference\n        })\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}