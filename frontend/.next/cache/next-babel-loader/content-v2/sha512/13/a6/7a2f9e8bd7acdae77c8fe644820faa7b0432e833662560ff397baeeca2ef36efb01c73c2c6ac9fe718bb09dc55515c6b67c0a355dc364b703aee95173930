{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/media/darcdev/Archivos/Usuario/1-ESTUDIO/UNIVERSIDAD/V SEMESTRE/INGENIERIA DE SOFTWARE I/Proyecto/implementaci\\xF3n/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/media/darcdev/Archivos/Usuario/1-ESTUDIO/UNIVERSIDAD/V SEMESTRE/INGENIERIA DE SOFTWARE I/Proyecto/implementaci\\xF3n/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/media/darcdev/Archivos/Usuario/1-ESTUDIO/UNIVERSIDAD/V SEMESTRE/INGENIERIA DE SOFTWARE I/Proyecto/implementaci\\xF3n/frontend/components/Metric.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport Graph from \"../components/Graph\";\nimport format from \"date-fns/format\";\nimport { parseISO } from \"date-fns\";\nimport axios from \"axios\";\nimport getConfig from \"next/config\";\n\nvar _getConfig = getConfig(),\n    publicConfig = _getConfig.publicRuntimeConfig;\n\nexport default function Metric(_ref) {\n  _s();\n\n  var disconnected = _ref.disconnected,\n      uuid = _ref.uuid,\n      socket = _ref.socket,\n      type = _ref.type,\n      mtToken = _ref.mtToken;\n  var graphReference = useRef();\n  useEffect(function () {\n    function fetchMetrics() {\n      return _fetchMetrics.apply(this, arguments);\n    }\n\n    function _fetchMetrics() {\n      _fetchMetrics = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$axios$get, dataResult, chart, dataset, data, orderData;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"\".concat(publicConfig.api_url, \"/api/metrics/\").concat(uuid, \"/\").concat(type));\n\n              case 3:\n                _yield$axios$get = _context.sent;\n                dataResult = _yield$axios$get.data;\n\n                if (graphReference.current) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 7:\n                chart = graphReference.current;\n                dataset = chart.data.datasets[0];\n                data = chart.data;\n                orderData = dataResult.reverse();\n\n                if (Array.isArray(orderData)) {\n                  orderData.forEach(function (m) {\n                    data.labels.push(format(parseISO(m.createdat), \"HH:mm:ss\"));\n                    dataset.data.push(m.value);\n                    chart.update(\"none\");\n                    chart.update();\n                  });\n                }\n\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\");\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 14]]);\n      }));\n      return _fetchMetrics.apply(this, arguments);\n    }\n\n    fetchMetrics();\n\n    if (socket) {\n      socket.on(\"agent/message\", function (payload) {\n        if (payload.token !== mtToken) return;\n\n        if (payload.agent.uuid === uuid) {\n          var metric = payload.metrics.find(function (m) {\n            return m.type === type;\n          });\n          if (!graphReference.current) return;\n          var chart = graphReference.current;\n          var data = chart.data.datasets[0].data;\n          var labels = chart.data.labels;\n\n          if (data.length >= 20) {\n            labels.shift();\n            data.shift();\n          }\n\n          var labelM = format(metric.createdat, \"HH:mm:ss\");\n          var dataM = metric.value;\n          labels.push(labelM);\n          data.push(dataM);\n          chart.update(\"active\");\n        }\n      });\n    }\n  }, [disconnected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border-gray-200 rounded-lg h-auto md:p-4\\t\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" bg-gray-50 p-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-auto\",\n        children: /*#__PURE__*/_jsxDEV(Graph, {\n          graphReference: graphReference\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Metric, \"Ex/qdRPF5+Z4b3oT8/5Pu+LwRHo=\");\n\n_c = Metric;\n\nvar _c;\n\n$RefreshReg$(_c, \"Metric\");","map":{"version":3,"sources":["/media/darcdev/Archivos/Usuario/1-ESTUDIO/UNIVERSIDAD/V SEMESTRE/INGENIERIA DE SOFTWARE I/Proyecto/implementaciÃ³n/frontend/components/Metric.js"],"names":["useEffect","useRef","Graph","format","parseISO","axios","getConfig","publicConfig","publicRuntimeConfig","Metric","disconnected","uuid","socket","type","mtToken","graphReference","fetchMetrics","get","api_url","dataResult","data","current","chart","dataset","datasets","orderData","reverse","Array","isArray","forEach","m","labels","push","createdat","value","update","on","payload","token","agent","metric","metrics","find","length","shift","labelM","dataM"],"mappings":"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","sourcesContent":["import { useEffect, useRef } from \"react\";\nimport Graph from \"../components/Graph\";\nimport format from \"date-fns/format\";\nimport { parseISO } from \"date-fns\";\nimport axios from \"axios\";\nimport getConfig from \"next/config\";\nconst { publicRuntimeConfig: publicConfig } = getConfig();\n\nexport default function Metric({ disconnected, uuid, socket, type, mtToken }) {\n  const graphReference = useRef();\n\n  useEffect(() => {\n    async function fetchMetrics() {\n      try {\n        const { data: dataResult } = await axios.get(\n          `${publicConfig.api_url}/api/metrics/${uuid}/${type}`\n        );\n        if (!graphReference.current) return;\n\n        const chart = graphReference.current;\n        const dataset = chart.data.datasets[0];\n        const data = chart.data;\n\n        const orderData = dataResult.reverse();\n        if (Array.isArray(orderData)) {\n          orderData.forEach((m) => {\n            data.labels.push(format(parseISO(m.createdat), \"HH:mm:ss\"));\n            dataset.data.push(m.value);\n            chart.update(\"none\");\n            chart.update();\n          });\n        }\n      } catch (error) {\n        return;\n      }\n    }\n    fetchMetrics();\n\n    if (socket) {\n      socket.on(\"agent/message\", (payload) => {\n        if (payload.token !== mtToken) return;\n\n        if (payload.agent.uuid === uuid) {\n          const metric = payload.metrics.find((m) => m.type === type);\n\n          if (!graphReference.current) return;\n\n          const chart = graphReference.current;\n          const data = chart.data.datasets[0].data;\n          const labels = chart.data.labels;\n\n          if (data.length >= 20) {\n            labels.shift();\n            data.shift();\n          }\n\n          const labelM = format(metric.createdat, \"HH:mm:ss\");\n          const dataM = metric.value;\n          labels.push(labelM);\n          data.push(dataM);\n\n          chart.update(\"active\");\n        }\n      });\n    }\n  }, [disconnected]);\n\n  return (\n    <div className=\"border-gray-200 rounded-lg h-auto md:p-4\t\">\n      <div className=\" bg-gray-50 p-2\">\n        <div className=\"h-auto\">\n          <Graph graphReference={graphReference} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}