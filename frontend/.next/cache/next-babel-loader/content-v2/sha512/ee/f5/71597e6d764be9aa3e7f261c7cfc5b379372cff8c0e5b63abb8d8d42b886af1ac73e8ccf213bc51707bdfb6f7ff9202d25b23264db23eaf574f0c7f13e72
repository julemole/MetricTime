{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport Agent from \"./Agent\";\nimport axios from \"axios\";\nimport getConfig from \"next/config\";\nconst {\n  publicRuntimeConfig: publicConfig\n} = getConfig();\nexport default function Agents({\n  socket,\n  mtToken\n}) {\n  const {\n    0: agents,\n    1: setAgents\n  } = useState([]);\n  useEffect(() => {\n    async function fetchAgents() {\n      const {\n        data: savedAgents\n      } = await axios.get(`${publicConfig.api_url}/api/agents/${JSON.parse(localStorage.getItem(\"metrictimeUser\")).id}`);\n      setAgents(agents => [...savedAgents]);\n    }\n\n    fetchAgents();\n    socket.on(\"agent/connected\", payload => {\n      if (payload.token !== mtToken) return;\n      const {\n        uuid\n      } = payload;\n      const existAgent = agents.find(agent => agent.uuid === uuid);\n\n      if (!existAgent) {\n        setAgents(agents => [payload.agent, ...agents]);\n      }\n    });\n  }, []);\n\n  const removeAgent = uuid => {\n    setAgents(agents => [...agents.filter(agent => {\n      return agent.uuid !== uuid;\n    })]);\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"grid grid-cols-5 gap-x-2 grid-flow-row auto-rows-max \",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-span-5\",\n        children: [agents.length === 0 && /*#__PURE__*/_jsxs(\"div\", {\n          className: \"p-14 md:p-20 w-full flex flex-col items-center justify-center\\t\",\n          children: [/*#__PURE__*/_jsx(\"img\", {\n            alt: \"icon disconnected\",\n            className: \"w-16 md:w-18\",\n            src: \"https://img.icons8.com/fluent/96/000000/wi-fi-disconnected.png\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: \"text-center mt-6 font-bold\\ttext-lg\",\n            children: \"No hay agentes conectados\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: \"text-center mt-6 font-bold\\ttext-lg\\t\",\n            children: \"Envie Metricas desde un dispositivo electronico\"\n          })]\n        }), agents.length !== 0 && agents.map(agent => {\n          return /*#__PURE__*/_jsx(Agent, {\n            mtToken: mtToken,\n            uuid: agent.uuid,\n            socket: socket,\n            removeAgent: removeAgent\n          }, agent.uuid);\n        })]\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}