{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/media/darcdev/Archivos/Usuario/1-ESTUDIO/UNIVERSIDAD/V SEMESTRE/INGENIERIA DE SOFTWARE I/Proyecto/implementaci\\xF3n/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/media/darcdev/Archivos/Usuario/1-ESTUDIO/UNIVERSIDAD/V SEMESTRE/INGENIERIA DE SOFTWARE I/Proyecto/implementaci\\xF3n/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect, useRef } from \"react\";\nimport Graph from \"../components/Graph\";\nimport format from \"date-fns/format\";\nimport { parseISO } from \"date-fns\";\nimport axios from \"axios\";\nimport getConfig from \"next/config\";\n\nvar _getConfig = getConfig(),\n    publicConfig = _getConfig.publicRuntimeConfig;\n\nexport default function Metric(_ref) {\n  var disconnected = _ref.disconnected,\n      uuid = _ref.uuid,\n      socket = _ref.socket,\n      type = _ref.type,\n      mtToken = _ref.mtToken;\n  var graphReference = useRef();\n  useEffect(function () {\n    function fetchMetrics() {\n      return _fetchMetrics.apply(this, arguments);\n    }\n\n    function _fetchMetrics() {\n      _fetchMetrics = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$axios$get, dataResult, chart, dataset, data, orderData;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"\".concat(publicConfig.api_url, \"/api/metrics/\").concat(uuid, \"/\").concat(type));\n\n              case 3:\n                _yield$axios$get = _context.sent;\n                dataResult = _yield$axios$get.data;\n\n                if (graphReference.current) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 7:\n                chart = graphReference.current;\n                dataset = chart.data.datasets[0];\n                data = chart.data;\n                orderData = dataResult.reverse();\n\n                if (Array.isArray(orderData)) {\n                  orderData.forEach(function (m) {\n                    data.labels.push(format(parseISO(m.createdat), \"HH:mm:ss\"));\n                    dataset.data.push(m.value);\n                    chart.update(\"none\");\n                    chart.update();\n                  });\n                }\n\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\");\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 14]]);\n      }));\n      return _fetchMetrics.apply(this, arguments);\n    }\n\n    fetchMetrics();\n\n    if (socket) {\n      socket.on(\"agent/message\", function (payload) {\n        if (payload.token !== mtToken) return;\n\n        if (payload.agent.uuid === uuid) {\n          var metric = payload.metrics.find(function (m) {\n            return m.type === type;\n          });\n          if (!graphReference.current) return;\n          var chart = graphReference.current;\n          var data = chart.data.datasets[0].data;\n          var labels = chart.data.labels;\n\n          if (data.length >= 20) {\n            labels.shift();\n            data.shift();\n          }\n\n          var labelM = format(metric.createdat, \"HH:mm:ss\");\n          var dataM = metric.value;\n          labels.push(labelM);\n          data.push(dataM);\n          chart.update(\"active\");\n        }\n      });\n    }\n  }, [disconnected]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"border-gray-200 rounded-lg h-auto md:p-4\\t\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \" bg-gray-50 p-2\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"h-auto\",\n        children: /*#__PURE__*/_jsx(Graph, {\n          graphReference: graphReference\n        })\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}