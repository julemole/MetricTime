{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[6],{m0r1:function(t,e,i){\"use strict\";i.d(e,\"a\",(function(){return ne})),i.d(e,\"c\",(function(){return Ui}));var n=i(\"3T2N\");i.d(e,\"b\",(function(){return n.xb}));var o=new class{constructor(){this._request=null,this._charts=new Map,this._running=!1,this._lastDate=void 0}_notify(t,e,i,n){const o=e.listeners[n],s=e.duration;o.forEach((n=>n({chart:t,initial:e.initial,numSteps:s,currentStep:Math.min(i-e.start,s)})))}_refresh(){const t=this;t._request||(t._running=!0,t._request=n.Lb.call(window,(()=>{t._update(),t._request=null,t._running&&t._refresh()})))}_update(t=Date.now()){const e=this;let i=0;e._charts.forEach(((n,o)=>{if(!n.running||!n.items.length)return;const s=n.items;let a,r=s.length-1,l=!1;for(;r>=0;--r)a=s[r],a._active?(a._total>n.duration&&(n.duration=a._total),a.tick(t),l=!0):(s[r]=s[s.length-1],s.pop());l&&(o.draw(),e._notify(o,n,t,\"progress\")),s.length||(n.running=!1,e._notify(o,n,t,\"complete\"),n.initial=!1),i+=s.length})),e._lastDate=t,0===i&&(e._running=!1)}_getAnims(t){const e=this._charts;let i=e.get(t);return i||(i={running:!1,initial:!0,items:[],listeners:{complete:[],progress:[]}},e.set(t,i)),i}listen(t,e,i){this._getAnims(t).listeners[e].push(i)}add(t,e){e&&e.length&&this._getAnims(t).items.push(...e)}has(t){return this._getAnims(t).items.length>0}start(t){const e=this._charts.get(t);e&&(e.running=!0,e.start=Date.now(),e.duration=e.items.reduce(((t,e)=>Math.max(t,e._duration)),0),this._refresh())}running(t){if(!this._running)return!1;const e=this._charts.get(t);return!!(e&&e.running&&e.items.length)}stop(t){const e=this._charts.get(t);if(!e||!e.items.length)return;const i=e.items;let n=i.length-1;for(;n>=0;--n)i[n].cancel();e.items=[],this._notify(t,e,Date.now(),\"complete\")}remove(t){return this._charts.delete(t)}};const s=\"transparent\",a={boolean:(t,e,i)=>i>.5?e:t,color(t,e,i){const o=Object(n.wb)(t||s),a=o.valid&&Object(n.wb)(e||s);return a&&a.valid?a.mix(o,i).hexString():e},number:(t,e,i)=>t+(e-t)*i};class r{constructor(t,e,i,o){const s=e[i];o=Object(n.C)([t.to,o,s,t.from]);const r=Object(n.C)([t.from,s,o]);this._active=!0,this._fn=t.fn||a[t.type||typeof r],this._easing=n.yb[t.easing]||n.yb.linear,this._start=Math.floor(Date.now()+(t.delay||0)),this._duration=this._total=Math.floor(t.duration),this._loop=!!t.loop,this._target=e,this._prop=i,this._from=r,this._to=o,this._promises=void 0}active(){return this._active}update(t,e,i){const o=this;if(o._active){o._notify(!1);const s=o._target[o._prop],a=i-o._start,r=o._duration-a;o._start=i,o._duration=Math.floor(Math.max(r,t.duration)),o._total+=a,o._loop=!!t.loop,o._to=Object(n.C)([t.to,e,s,t.from]),o._from=Object(n.C)([t.from,s,e])}}cancel(){const t=this;t._active&&(t.tick(Date.now()),t._active=!1,t._notify(!1))}tick(t){const e=this,i=t-e._start,n=e._duration,o=e._prop,s=e._from,a=e._loop,r=e._to;let l;if(e._active=s!==r&&(a||i<n),!e._active)return e._target[o]=r,void e._notify(!0);i<0?e._target[o]=s:(l=i/n%2,l=a&&l>1?2-l:l,l=e._easing(Math.min(1,Math.max(0,l))),e._target[o]=e._fn(s,r,l))}wait(){const t=this._promises||(this._promises=[]);return new Promise(((e,i)=>{t.push({res:e,rej:i})}))}_notify(t){const e=t?\"res\":\"rej\",i=this._promises||[];for(let n=0;n<i.length;n++)i[n][e]()}}n.xb.set(\"animation\",{delay:void 0,duration:1e3,easing:\"easeOutQuart\",fn:void 0,from:void 0,loop:void 0,to:void 0,type:void 0});const l=Object.keys(n.xb.animation);n.xb.describe(\"animation\",{_fallback:!1,_indexable:!1,_scriptable:t=>\"onProgress\"!==t&&\"onComplete\"!==t&&\"fn\"!==t}),n.xb.set(\"animations\",{colors:{type:\"color\",properties:[\"color\",\"borderColor\",\"backgroundColor\"]},numbers:{type:\"number\",properties:[\"x\",\"y\",\"borderWidth\",\"radius\",\"tension\"]}}),n.xb.describe(\"animations\",{_fallback:\"animation\"}),n.xb.set(\"transitions\",{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:\"transparent\"},visible:{type:\"boolean\",duration:0}}},hide:{animations:{colors:{to:\"transparent\"},visible:{type:\"boolean\",easing:\"linear\",fn:t=>0|t}}}});class c{constructor(t,e){this._chart=t,this._properties=new Map,this.configure(e)}configure(t){if(!Object(n.Cb)(t))return;const e=this._properties;Object.getOwnPropertyNames(t).forEach((i=>{const o=t[i];if(!Object(n.Cb)(o))return;const s={};for(const t of l)s[t]=o[t];(Object(n.vb)(o.properties)&&o.properties||[i]).forEach((t=>{t!==i&&e.has(t)||e.set(t,s)}))}))}_animateOptions(t,e){const i=e.options,n=function(t,e){if(!e)return;let i=t.options;if(!i)return void(t.options=e);i.$shared&&(t.options=i=Object.assign({},i,{$shared:!1,$animations:{}}));return i}(t,i);if(!n)return[];const o=this._createAnimations(n,i);return i.$shared&&function(t,e){const i=[],n=Object.keys(e);for(let o=0;o<n.length;o++){const e=t[n[o]];e&&e.active()&&i.push(e.wait())}return Promise.all(i)}(t.options.$animations,i).then((()=>{t.options=i}),(()=>{})),o}_createAnimations(t,e){const i=this._properties,n=[],o=t.$animations||(t.$animations={}),s=Object.keys(e),a=Date.now();let l;for(l=s.length-1;l>=0;--l){const c=s[l];if(\"$\"===c.charAt(0))continue;if(\"options\"===c){n.push(...this._animateOptions(t,e));continue}const h=e[c];let d=o[c];const u=i.get(c);if(d){if(u&&d.active()){d.update(u,h,a);continue}d.cancel()}u&&u.duration?(o[c]=d=new r(u,t,c,h),n.push(d)):t[c]=h}return n}update(t,e){if(0===this._properties.size)return void Object.assign(t,e);const i=this._createAnimations(t,e);return i.length?(o.add(this._chart,i),!0):void 0}}function h(t,e){const i=t&&t.options||{},n=i.reverse,o=void 0===i.min?e:0,s=void 0===i.max?e:0;return{start:n?s:o,end:n?o:s}}function d(t,e){const i=[],n=t._getSortedDatasetMetas(e);let o,s;for(o=0,s=n.length;o<s;++o)i.push(n[o].index);return i}function u(t,e,i,o){const s=t.keys,a=\"single\"===o.mode;let r,l,c,h;if(null!==e){for(r=0,l=s.length;r<l;++r){if(c=+s[r],c===i){if(o.all)continue;break}h=t.values[c],Object(n.Ab)(h)&&(a||0===e||Object(n.Mb)(e)===Object(n.Mb)(h))&&(e+=h)}return e}}function g(t,e){const i=t&&t.options.stacked;return i||void 0===i&&void 0!==e.stack}function b(t,e,i){const n=t[e]||(t[e]={});return n[i]||(n[i]={})}function p(t,e,i){for(const n of e.getMatchingVisibleMetas(\"bar\").reverse()){const e=t[n.index];if(i&&e>0||!i&&e<0)return n.index}return null}function f(t,e){const{chart:i,_cachedMeta:n}=t,o=i._stacks||(i._stacks={}),{iScale:s,vScale:a,index:r}=n,l=s.axis,c=a.axis,h=function(t,e,i){return`${t.id}.${e.id}.${i.stack||i.type}`}(s,a,n),d=e.length;let u;for(let g=0;g<d;++g){const t=e[g],{[l]:i,[c]:n}=t;u=(t._stacks||(t._stacks={}))[c]=b(o,h,i),u[r]=n,u._top=p(u,a,!0),u._bottom=p(u,a,!1)}}function m(t,e){const i=t.scales;return Object.keys(i).filter((t=>i[t].axis===e)).shift()}function x(t,e){const i=t.controller.index,n=t.vScale&&t.vScale.axis;if(n){e=e||t._parsed;for(const t of e){const e=t._stacks;if(!e||void 0===e[n]||void 0===e[n][i])return;delete e[n][i]}}}const _=t=>\"reset\"===t||\"none\"===t,y=(t,e)=>e?t:Object.assign({},t);class v{constructor(t,e){this.chart=t,this._ctx=t.ctx,this.index=e,this._cachedDataOpts={},this._cachedMeta=this.getMeta(),this._type=this._cachedMeta.type,this.options=void 0,this._parsing=!1,this._data=void 0,this._objectData=void 0,this._sharedOptions=void 0,this._drawStart=void 0,this._drawCount=void 0,this.enableOptionSharing=!1,this.$context=void 0,this._syncList=[],this.initialize()}initialize(){const t=this,e=t._cachedMeta;t.configure(),t.linkScales(),e._stacked=g(e.vScale,e),t.addElements()}updateIndex(t){this.index!==t&&x(this._cachedMeta),this.index=t}linkScales(){const t=this,e=t.chart,i=t._cachedMeta,o=t.getDataset(),s=(t,e,i,n)=>\"x\"===t?e:\"r\"===t?n:i,a=i.xAxisID=Object(n.Pb)(o.xAxisID,m(e,\"x\")),r=i.yAxisID=Object(n.Pb)(o.yAxisID,m(e,\"y\")),l=i.rAxisID=Object(n.Pb)(o.rAxisID,m(e,\"r\")),c=i.indexAxis,h=i.iAxisID=s(c,a,r,l),d=i.vAxisID=s(c,r,a,l);i.xScale=t.getScaleForId(a),i.yScale=t.getScaleForId(r),i.rScale=t.getScaleForId(l),i.iScale=t.getScaleForId(h),i.vScale=t.getScaleForId(d)}getDataset(){return this.chart.data.datasets[this.index]}getMeta(){return this.chart.getDatasetMeta(this.index)}getScaleForId(t){return this.chart.scales[t]}_getOtherScale(t){const e=this._cachedMeta;return t===e.iScale?e.vScale:e.iScale}reset(){this._update(\"reset\")}_destroy(){const t=this._cachedMeta;this._data&&Object(n.Ob)(this._data,this),t._stacked&&x(t)}_dataCheck(){const t=this,e=t.getDataset(),i=e.data||(e.data=[]),o=t._data;if(Object(n.Cb)(i))t._data=function(t){const e=Object.keys(t),i=new Array(e.length);let n,o,s;for(n=0,o=e.length;n<o;++n)s=e[n],i[n]={x:s,y:t[s]};return i}(i);else if(o!==i){if(o){Object(n.Ob)(o,t);const e=t._cachedMeta;x(e),e._parsed=[]}i&&Object.isExtensible(i)&&Object(n.Fb)(i,t),t._syncList=[],t._data=i}}addElements(){const t=this,e=t._cachedMeta;t._dataCheck(),t.datasetElementType&&(e.dataset=new t.datasetElementType)}buildOrUpdateElements(t){const e=this,i=e._cachedMeta,n=e.getDataset();let o=!1;e._dataCheck();const s=i._stacked;i._stacked=g(i.vScale,i),i.stack!==n.stack&&(o=!0,x(i),i.stack=n.stack),e._resyncElements(t),(o||s!==i._stacked)&&f(e,i._parsed)}configure(){const t=this,e=t.chart.config,i=e.datasetScopeKeys(t._type),n=e.getOptionScopes(t.getDataset(),i,!0);t.options=e.createResolver(n,t.getContext()),t._parsing=t.options.parsing}parse(t,e){const i=this,{_cachedMeta:o,_data:s}=i,{iScale:a,_stacked:r}=o,l=a.axis;let c,h,d,u=0===t&&e===s.length||o._sorted,g=t>0&&o._parsed[t-1];if(!1===i._parsing)o._parsed=s,o._sorted=!0,d=s;else{d=Object(n.vb)(s[t])?i.parseArrayData(o,s,t,e):Object(n.Cb)(s[t])?i.parseObjectData(o,s,t,e):i.parsePrimitiveData(o,s,t,e);const a=()=>null===h[l]||g&&h[l]<g[l];for(c=0;c<e;++c)o._parsed[c+t]=h=d[c],u&&(a()&&(u=!1),g=h);o._sorted=u}r&&f(i,d)}parsePrimitiveData(t,e,i,n){const{iScale:o,vScale:s}=t,a=o.axis,r=s.axis,l=o.getLabels(),c=o===s,h=new Array(n);let d,u,g;for(d=0,u=n;d<u;++d)g=d+i,h[d]={[a]:c||o.parse(l[g],g),[r]:s.parse(e[g],g)};return h}parseArrayData(t,e,i,n){const{xScale:o,yScale:s}=t,a=new Array(n);let r,l,c,h;for(r=0,l=n;r<l;++r)c=r+i,h=e[c],a[r]={x:o.parse(h[0],c),y:s.parse(h[1],c)};return a}parseObjectData(t,e,i,o){const{xScale:s,yScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=new Array(o);let h,d,u,g;for(h=0,d=o;h<d;++h)u=h+i,g=e[u],c[h]={x:s.parse(Object(n.zb)(g,r),u),y:a.parse(Object(n.zb)(g,l),u)};return c}getParsed(t){return this._cachedMeta._parsed[t]}getDataElement(t){return this._cachedMeta.data[t]}applyStack(t,e,i){const n=this.chart,o=this._cachedMeta,s=e[t.axis];return u({keys:d(n,!0),values:e._stacks[t.axis]},s,o.index,{mode:i})}updateRangeFromParsed(t,e,i,n){const o=i[e.axis];let s=null===o?NaN:o;const a=n&&i._stacks[e.axis];n&&a&&(n.values=a,t.min=Math.min(t.min,s),t.max=Math.max(t.max,s),s=u(n,o,this._cachedMeta.index,{all:!0})),t.min=Math.min(t.min,s),t.max=Math.max(t.max,s)}getMinMax(t,e){const i=this,o=i._cachedMeta,s=o._parsed,a=o._sorted&&t===o.iScale,r=s.length,l=i._getOtherScale(t),c=e&&o._stacked&&{keys:d(i.chart,!0),values:null},h={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY},{min:u,max:g}=function(t){const{min:e,max:i,minDefined:n,maxDefined:o}=t.getUserBounds();return{min:n?e:Number.NEGATIVE_INFINITY,max:o?i:Number.POSITIVE_INFINITY}}(l);let b,p,f,m;function x(){return f=s[b],p=f[t.axis],m=f[l.axis],!Object(n.Ab)(p)||u>m||g<m}for(b=0;b<r&&(x()||(i.updateRangeFromParsed(h,t,f,c),!a));++b);if(a)for(b=r-1;b>=0;--b)if(!x()){i.updateRangeFromParsed(h,t,f,c);break}return h}getAllParsedValues(t){const e=this._cachedMeta._parsed,i=[];let o,s,a;for(o=0,s=e.length;o<s;++o)a=e[o][t.axis],Object(n.Ab)(a)&&i.push(a);return i}getMaxOverflow(){return!1}getLabelAndValue(t){const e=this._cachedMeta,i=e.iScale,n=e.vScale,o=this.getParsed(t);return{label:i?\"\"+i.getLabelForValue(o[i.axis]):\"\",value:n?\"\"+n.getLabelForValue(o[n.axis]):\"\"}}_update(t){const e=this,i=e._cachedMeta;e.configure(),e._cachedDataOpts={},e.update(t||\"default\"),i._clip=function(t){let e,i,o,s;return Object(n.Cb)(t)?(e=t.top,i=t.right,o=t.bottom,s=t.left):e=i=o=s=t,{top:e,right:i,bottom:o,left:s,disabled:!1===t}}(Object(n.Pb)(e.options.clip,function(t,e,i){if(!1===i)return!1;const n=h(t,i),o=h(e,i);return{top:o.end,right:n.end,bottom:o.start,left:n.start}}(i.xScale,i.yScale,e.getMaxOverflow())))}update(t){}draw(){const t=this,e=t._ctx,i=t.chart,n=t._cachedMeta,o=n.data||[],s=i.chartArea,a=[],r=t._drawStart||0,l=t._drawCount||o.length-r;let c;for(n.dataset&&n.dataset.draw(e,s,r,l),c=r;c<r+l;++c){const t=o[c];t.hidden||(t.active?a.push(t):t.draw(e,s))}for(c=0;c<a.length;++c)a[c].draw(e,s)}getStyle(t,e){const i=e?\"active\":\"default\";return void 0===t&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(i):this.resolveDataElementOptions(t||0,i)}getContext(t,e,i){const n=this,o=n.getDataset();let s;if(t>=0&&t<n._cachedMeta.data.length){const e=n._cachedMeta.data[t];s=e.$context||(e.$context=function(t,e,i){return Object.assign(Object.create(t),{active:!1,dataIndex:e,parsed:void 0,raw:void 0,element:i,index:e,mode:\"default\",type:\"data\"})}(n.getContext(),t,e)),s.parsed=n.getParsed(t),s.raw=o.data[t],s.index=s.dataIndex=t}else s=n.$context||(n.$context=function(t,e){return Object.assign(Object.create(t),{active:!1,dataset:void 0,datasetIndex:e,index:e,mode:\"default\",type:\"dataset\"})}(n.chart.getContext(),n.index)),s.dataset=o,s.index=s.datasetIndex=n.index;return s.active=!!e,s.mode=i,s}resolveDatasetElementOptions(t){return this._resolveElementOptions(this.datasetElementType.id,t)}resolveDataElementOptions(t,e){return this._resolveElementOptions(this.dataElementType.id,e,t)}_resolveElementOptions(t,e=\"default\",i){const o=this,s=\"active\"===e,a=o._cachedDataOpts,r=t+\"-\"+e,l=a[r],c=o.enableOptionSharing&&Object(n.Bb)(i);if(l)return y(l,c);const h=o.chart.config,d=h.datasetElementScopeKeys(o._type,t),u=s?[`${t}Hover`,\"hover\",t,\"\"]:[t,\"\"],g=h.getOptionScopes(o.getDataset(),d),b=Object.keys(n.xb.elements[t]),p=h.resolveNamedOptions(g,b,(()=>o.getContext(i,s)),u);return p.$shared&&(p.$shared=c,a[r]=Object.freeze(y(p,c))),p}_resolveAnimations(t,e,i){const n=this,o=n.chart,s=n._cachedDataOpts,a=`animation-${e}`,r=s[a];if(r)return r;let l;if(!1!==o.options.animation){const o=n.chart.config,s=o.datasetAnimationScopeKeys(n._type,e),a=o.getOptionScopes(n.getDataset(),s);l=o.createResolver(a,n.getContext(t,i,e))}const h=new c(o,l&&l.animations);return l&&l._cacheable&&(s[a]=Object.freeze(h)),h}getSharedOptions(t){if(t.$shared)return this._sharedOptions||(this._sharedOptions=Object.assign({},t))}includeOptions(t,e){return!e||_(t)||this.chart._animationsDisabled}updateElement(t,e,i,n){_(n)?Object.assign(t,i):this._resolveAnimations(e,n).update(t,i)}updateSharedOptions(t,e,i){t&&!_(e)&&this._resolveAnimations(void 0,e).update(t,i)}_setStyle(t,e,i,n){t.active=n;const o=this.getStyle(e,n);this._resolveAnimations(e,i,n).update(t,{options:!n&&this.getSharedOptions(o)||o})}removeHoverStyle(t,e,i){this._setStyle(t,i,\"active\",!1)}setHoverStyle(t,e,i){this._setStyle(t,i,\"active\",!0)}_removeDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,\"active\",!1)}_setDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,\"active\",!0)}_resyncElements(t){const e=this,i=e._data,n=e._cachedMeta.data;for(const[r,l,c]of e._syncList)e[r](l,c);e._syncList=[];const o=n.length,s=i.length,a=Math.min(s,o);a&&e.parse(0,a),s>o?e._insertElements(o,s-o,t):s<o&&e._removeElements(s,o-s)}_insertElements(t,e,i=!0){const n=this,o=n._cachedMeta,s=o.data,a=t+e;let r;const l=t=>{for(t.length+=e,r=t.length-1;r>=a;r--)t[r]=t[r-e]};for(l(s),r=t;r<a;++r)s[r]=new n.dataElementType;n._parsing&&l(o._parsed),n.parse(t,e),i&&n.updateElements(s,t,e,\"reset\")}updateElements(t,e,i,n){}_removeElements(t,e){const i=this._cachedMeta;if(this._parsing){const n=i._parsed.splice(t,e);i._stacked&&x(i,n)}i.data.splice(t,e)}_sync(t){if(this._parsing)this._syncList.push(t);else{const[e,i,n]=t;this[e](i,n)}}_onDataPush(){const t=arguments.length;this._sync([\"_insertElements\",this.getDataset().data.length-t,t])}_onDataPop(){this._sync([\"_removeElements\",this._cachedMeta.data.length-1,1])}_onDataShift(){this._sync([\"_removeElements\",0,1])}_onDataSplice(t,e){this._sync([\"_removeElements\",t,e]),this._sync([\"_insertElements\",t,arguments.length-2])}_onDataUnshift(){this._sync([\"_insertElements\",0,arguments.length])}}function O(t){const e=function(t){if(!t._cache.$bar){const e=t.getMatchingVisibleMetas(\"bar\");let i=[];for(let n=0,o=e.length;n<o;n++)i=i.concat(e[n].controller.getAllParsedValues(t));t._cache.$bar=Object(n.B)(i.sort(((t,e)=>t-e)))}return t._cache.$bar}(t);let i,o,s,a,r=t._length;const l=()=>{32767!==s&&-32768!==s&&(Object(n.Bb)(a)&&(r=Math.min(r,Math.abs(s-a)||r)),a=s)};for(i=0,o=e.length;i<o;++i)s=t.getPixelForValue(e[i]),l();for(a=void 0,i=0,o=t.ticks.length;i<o;++i)s=t.getPixelForTick(i),l();return r}function j(t,e,i,o){return Object(n.vb)(t)?function(t,e,i,n){const o=i.parse(t[0],n),s=i.parse(t[1],n),a=Math.min(o,s),r=Math.max(o,s);let l=a,c=r;Math.abs(a)>Math.abs(r)&&(l=r,c=a),e[i.axis]=c,e._custom={barStart:l,barEnd:c,start:o,end:s,min:a,max:r}}(t,e,i,o):e[i.axis]=i.parse(t,o),e}function M(t,e,i,n){const o=t.iScale,s=t.vScale,a=o.getLabels(),r=o===s,l=[];let c,h,d,u;for(c=i,h=i+n;c<h;++c)u=e[c],d={},d[o.axis]=r||o.parse(a[c],c),l.push(j(u,d,s,c));return l}function w(t){return t&&void 0!==t.barStart&&void 0!==t.barEnd}function k(t,e,i,n){let o=e.borderSkipped;const s={};if(!o)return void(t.borderSkipped=s);const{start:a,end:r,reverse:l,top:c,bottom:h}=function(t){let e,i,n,o,s;return t.horizontal?(e=t.base>t.x,i=\"left\",n=\"right\"):(e=t.base<t.y,i=\"bottom\",n=\"top\"),e?(o=\"end\",s=\"start\"):(o=\"start\",s=\"end\"),{start:i,end:n,reverse:e,top:o,bottom:s}}(t);\"middle\"===o&&i&&(t.enableBorderRadius=!0,(i._top||0)===n?o=c:(i._bottom||0)===n?o=h:(s[S(h,a,r,l)]=!0,o=c)),s[S(o,a,r,l)]=!0,t.borderSkipped=s}function S(t,e,i,n){var o,s,a;return n?(a=i,t=D(t=(o=t)===(s=e)?a:o===a?s:o,i,e)):t=D(t,e,i),t}function D(t,e,i){return\"start\"===t?e:\"end\"===t?i:t}v.defaults={},v.prototype.datasetElementType=null,v.prototype.dataElementType=null;class P extends v{parsePrimitiveData(t,e,i,n){return M(t,e,i,n)}parseArrayData(t,e,i,n){return M(t,e,i,n)}parseObjectData(t,e,i,o){const{iScale:s,vScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=\"x\"===s.axis?r:l,h=\"x\"===a.axis?r:l,d=[];let u,g,b,p;for(u=i,g=i+o;u<g;++u)p=e[u],b={},b[s.axis]=s.parse(Object(n.zb)(p,c),u),d.push(j(Object(n.zb)(p,h),b,a,u));return d}updateRangeFromParsed(t,e,i,n){super.updateRangeFromParsed(t,e,i,n);const o=i._custom;o&&e===this._cachedMeta.vScale&&(t.min=Math.min(t.min,o.min),t.max=Math.max(t.max,o.max))}getMaxOverflow(){return 0}getLabelAndValue(t){const e=this._cachedMeta,{iScale:i,vScale:n}=e,o=this.getParsed(t),s=o._custom,a=w(s)?\"[\"+s.start+\", \"+s.end+\"]\":\"\"+n.getLabelForValue(o[n.axis]);return{label:\"\"+i.getLabelForValue(o[i.axis]),value:a}}initialize(){const t=this;t.enableOptionSharing=!0,super.initialize();t._cachedMeta.stack=t.getDataset().stack}update(t){const e=this._cachedMeta;this.updateElements(e.data,0,e.data.length,t)}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,{index:r,_cachedMeta:{vScale:l}}=s,c=l.getBasePixel(),h=l.isHorizontal(),d=s._getRuler(),u=s.resolveDataElementOptions(e,o),g=s.getSharedOptions(u),b=s.includeOptions(o,g);s.updateSharedOptions(g,o,u);for(let p=e;p<e+i;p++){const e=s.getParsed(p),i=a||Object(n.Db)(e[l.axis])?{base:c,head:c}:s._calculateBarValuePixels(p),u=s._calculateBarIndexPixels(p,d),f=(e._stacks||{})[l.axis],m={horizontal:h,base:i.base,enableBorderRadius:!f||w(e._custom)||r===f._top||r===f._bottom,x:h?i.head:u.center,y:h?u.center:i.head,height:h?u.size:Math.abs(i.size),width:h?Math.abs(i.size):u.size};b&&(m.options=g||s.resolveDataElementOptions(p,t[p].active?\"active\":o)),k(m,m.options||t[p].options,f,r),s.updateElement(t[p],p,m,o)}}_getStacks(t,e){const i=this._cachedMeta.iScale,o=i.getMatchingVisibleMetas(this._type),s=i.options.stacked,a=o.length,r=[];let l,c;for(l=0;l<a;++l)if(c=o[l],c.controller.options.grouped){if(\"undefined\"!==typeof e){const t=c.controller.getParsed(e)[c.controller._cachedMeta.vScale.axis];if(Object(n.Db)(t)||isNaN(t))continue}if((!1===s||-1===r.indexOf(c.stack)||void 0===s&&void 0===c.stack)&&r.push(c.stack),c.index===t)break}return r.length||r.push(void 0),r}_getStackCount(t){return this._getStacks(void 0,t).length}_getStackIndex(t,e,i){const n=this._getStacks(t,i),o=void 0!==e?n.indexOf(e):-1;return-1===o?n.length-1:o}_getRuler(){const t=this,e=t.options,i=t._cachedMeta,n=i.iScale,o=[];let s,a;for(s=0,a=i.data.length;s<a;++s)o.push(n.getPixelForValue(t.getParsed(s)[n.axis],s));const r=e.barThickness;return{min:r||O(n),pixels:o,start:n._startPixel,end:n._endPixel,stackCount:t._getStackCount(),scale:n,grouped:e.grouped,ratio:r?1:e.categoryPercentage*e.barPercentage}}_calculateBarValuePixels(t){const e=this,{_cachedMeta:{vScale:i,_stacked:o},options:{base:s,minBarLength:a}}=e,r=s||0,l=e.getParsed(t),c=l._custom,h=w(c);let d,u,g=l[i.axis],b=0,p=o?e.applyStack(i,l,o):g;p!==g&&(b=p-g,p=g),h&&(g=c.barStart,p=c.barEnd-c.barStart,0!==g&&Object(n.Mb)(g)!==Object(n.Mb)(c.barEnd)&&(b=0),b+=g);const f=Object(n.Db)(s)||h?b:s;let m=i.getPixelForValue(f);if(d=e.chart.getDataVisibility(t)?i.getPixelForValue(b+p):m,u=d-m,Math.abs(u)<a&&(u=function(t,e,i){return 0!==t?Object(n.Mb)(t):(e.isHorizontal()?1:-1)*(e.min>=i?1:-1)}(u,i,r)*a,g===r&&(m-=u/2),d=m+u),m===i.getPixelForValue(r)){const t=Object(n.Mb)(u)*i.getLineWidthForValue(r)/2;m+=t,u-=t}return{size:u,base:m,head:d,center:d+u/2}}_calculateBarIndexPixels(t,e){const i=this,o=e.scale,s=i.options,a=s.skipNull,r=Object(n.Pb)(s.maxBarThickness,1/0);let l,c;if(e.grouped){const o=a?i._getStackCount(t):e.stackCount,h=\"flex\"===s.barThickness?function(t,e,i,n){const o=e.pixels,s=o[t];let a=t>0?o[t-1]:null,r=t<o.length-1?o[t+1]:null;const l=i.categoryPercentage;null===a&&(a=s-(null===r?e.end-e.start:r-s)),null===r&&(r=s+s-a);const c=s-(s-Math.min(a,r))/2*l;return{chunk:Math.abs(r-a)/2*l/n,ratio:i.barPercentage,start:c}}(t,e,s,o):function(t,e,i,o){const s=i.barThickness;let a,r;return Object(n.Db)(s)?(a=e.min*i.categoryPercentage,r=i.barPercentage):(a=s*o,r=1),{chunk:a/o,ratio:r,start:e.pixels[t]-a/2}}(t,e,s,o),d=i._getStackIndex(i.index,i._cachedMeta.stack,a?t:void 0);l=h.start+h.chunk*d+h.chunk/2,c=Math.min(r,h.chunk*h.ratio)}else l=o.getPixelForValue(i.getParsed(t)[o.axis],t),c=Math.min(r,e.min*e.ratio);return{base:l-c/2,head:l+c/2,center:l,size:c}}draw(){const t=this,e=t._cachedMeta,i=e.vScale,n=e.data,o=n.length;let s=0;for(;s<o;++s)null!==t.getParsed(s)[i.axis]&&n[s].draw(t._ctx)}}P.id=\"bar\",P.defaults={datasetElementType:!1,dataElementType:\"bar\",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"base\",\"width\",\"height\"]}}},P.overrides={scales:{_index_:{type:\"category\",offset:!0,grid:{offset:!0}},_value_:{type:\"linear\",beginAtZero:!0}}};class C extends v{initialize(){this.enableOptionSharing=!0,super.initialize()}parseObjectData(t,e,i,o){const{xScale:s,yScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=[];let h,d,u;for(h=i,d=i+o;h<d;++h)u=e[h],c.push({x:s.parse(Object(n.zb)(u,r),h),y:a.parse(Object(n.zb)(u,l),h),_custom:u&&u.r&&+u.r});return c}getMaxOverflow(){const{data:t,_parsed:e}=this._cachedMeta;let i=0;for(let n=t.length-1;n>=0;--n)i=Math.max(i,t[n].size()/2,e[n]._custom);return i>0&&i}getLabelAndValue(t){const e=this._cachedMeta,{xScale:i,yScale:n}=e,o=this.getParsed(t),s=i.getLabelForValue(o.x),a=n.getLabelForValue(o.y),r=o._custom;return{label:e.label,value:\"(\"+s+\", \"+a+(r?\", \"+r:\"\")+\")\"}}update(t){const e=this._cachedMeta.data;this.updateElements(e,0,e.length,t)}updateElements(t,e,i,n){const o=this,s=\"reset\"===n,{iScale:a,vScale:r}=o._cachedMeta,l=o.resolveDataElementOptions(e,n),c=o.getSharedOptions(l),h=o.includeOptions(n,c),d=a.axis,u=r.axis;for(let g=e;g<e+i;g++){const e=t[g],i=!s&&o.getParsed(g),l={},c=l[d]=s?a.getPixelForDecimal(.5):a.getPixelForValue(i[d]),b=l[u]=s?r.getBasePixel():r.getPixelForValue(i[u]);l.skip=isNaN(c)||isNaN(b),h&&(l.options=o.resolveDataElementOptions(g,e.active?\"active\":n),s&&(l.options.radius=0)),o.updateElement(e,g,l,n)}o.updateSharedOptions(c,n,l)}resolveDataElementOptions(t,e){const i=this.getParsed(t);let o=super.resolveDataElementOptions(t,e);o.$shared&&(o=Object.assign({},o,{$shared:!1}));const s=o.radius;return\"active\"!==e&&(o.radius=0),o.radius+=Object(n.Pb)(i&&i._custom,s),o}}C.id=\"bubble\",C.defaults={datasetElementType:!1,dataElementType:\"point\",animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"borderWidth\",\"radius\"]}}},C.overrides={scales:{x:{type:\"linear\"},y:{type:\"linear\"}},plugins:{tooltip:{callbacks:{title:()=>\"\"}}}};class A extends v{constructor(t,e){super(t,e),this.enableOptionSharing=!0,this.innerRadius=void 0,this.outerRadius=void 0,this.offsetX=void 0,this.offsetY=void 0}linkScales(){}parse(t,e){const i=this.getDataset().data,n=this._cachedMeta;let o,s;for(o=t,s=t+e;o<s;++o)n._parsed[o]=+i[o]}_getRotation(){return Object(n.Nb)(this.options.rotation-90)}_getCircumference(){return Object(n.Nb)(this.options.circumference)}_getRotationExtents(){let t=n.u,e=-n.u;const i=this;for(let n=0;n<i.chart.data.datasets.length;++n)if(i.chart.isDatasetVisible(n)){const o=i.chart.getDatasetMeta(n).controller,s=o._getRotation(),a=o._getCircumference();t=Math.min(t,s),e=Math.max(e,s+a)}return{rotation:t,circumference:e-t}}update(t){const e=this,i=e.chart,{chartArea:o}=i,s=e._cachedMeta,a=s.data,r=e.getMaxBorderWidth()+e.getMaxOffset(a)+e.options.spacing,l=Math.max((Math.min(o.width,o.height)-r)/2,0),c=Math.min(Object(n.Eb)(e.options.cutout,l),1),h=e._getRingWeight(e.index),{circumference:d,rotation:u}=e._getRotationExtents(),{ratioX:g,ratioY:b,offsetX:p,offsetY:f}=function(t,e,i){let o=1,s=1,a=0,r=0;if(e<n.u){const l=t,c=l+e,h=Math.cos(l),d=Math.sin(l),u=Math.cos(c),g=Math.sin(c),b=(t,e,o)=>Object(n.Ib)(t,l,c,!0)?1:Math.max(e,e*i,o,o*i),p=(t,e,o)=>Object(n.Ib)(t,l,c,!0)?-1:Math.min(e,e*i,o,o*i),f=b(0,h,u),m=b(n.i,d,g),x=p(n.q,h,u),_=p(n.q+n.i,d,g);o=(f-x)/2,s=(m-_)/2,a=-(f+x)/2,r=-(m+_)/2}return{ratioX:o,ratioY:s,offsetX:a,offsetY:r}}(u,d,c),m=(o.width-r)/g,x=(o.height-r)/b,_=Math.max(Math.min(m,x)/2,0),y=Object(n.Gb)(e.options.radius,_),v=(y-Math.max(y*c,0))/e._getVisibleDatasetWeightTotal();e.offsetX=p*y,e.offsetY=f*y,s.total=e.calculateTotal(),e.outerRadius=y-v*e._getRingWeightOffset(e.index),e.innerRadius=Math.max(e.outerRadius-v*h,0),e.updateElements(a,0,a.length,t)}_circumference(t,e){const i=this,o=i.options,s=i._cachedMeta,a=i._getCircumference();return e&&o.animation.animateRotate||!this.chart.getDataVisibility(t)||null===s._parsed[t]||s.data[t].hidden?0:i.calculateCircumference(s._parsed[t]*a/n.u)}updateElements(t,e,i,n){const o=this,s=\"reset\"===n,a=o.chart,r=a.chartArea,l=a.options.animation,c=(r.left+r.right)/2,h=(r.top+r.bottom)/2,d=s&&l.animateScale,u=d?0:o.innerRadius,g=d?0:o.outerRadius,b=o.resolveDataElementOptions(e,n),p=o.getSharedOptions(b),f=o.includeOptions(n,p);let m,x=o._getRotation();for(m=0;m<e;++m)x+=o._circumference(m,s);for(m=e;m<e+i;++m){const e=o._circumference(m,s),i=t[m],a={x:c+o.offsetX,y:h+o.offsetY,startAngle:x,endAngle:x+e,circumference:e,outerRadius:g,innerRadius:u};f&&(a.options=p||o.resolveDataElementOptions(m,i.active?\"active\":n)),x+=e,o.updateElement(i,m,a,n)}o.updateSharedOptions(p,n,b)}calculateTotal(){const t=this._cachedMeta,e=t.data;let i,n=0;for(i=0;i<e.length;i++){const o=t._parsed[i];null===o||isNaN(o)||!this.chart.getDataVisibility(i)||e[i].hidden||(n+=Math.abs(o))}return n}calculateCircumference(t){const e=this._cachedMeta.total;return e>0&&!isNaN(t)?n.u*(Math.abs(t)/e):0}getLabelAndValue(t){const e=this._cachedMeta,i=this.chart,o=i.data.labels||[],s=Object(n.Hb)(e._parsed[t],i.options.locale);return{label:o[t]||\"\",value:s}}getMaxBorderWidth(t){const e=this;let i=0;const n=e.chart;let o,s,a,r,l;if(!t)for(o=0,s=n.data.datasets.length;o<s;++o)if(n.isDatasetVisible(o)){a=n.getDatasetMeta(o),t=a.data,r=a.controller,r!==e&&r.configure();break}if(!t)return 0;for(o=0,s=t.length;o<s;++o)l=r.resolveDataElementOptions(o),\"inner\"!==l.borderAlign&&(i=Math.max(i,l.borderWidth||0,l.hoverBorderWidth||0));return i}getMaxOffset(t){let e=0;for(let i=0,n=t.length;i<n;++i){const t=this.resolveDataElementOptions(i);e=Math.max(e,t.offset||0,t.hoverOffset||0)}return e}_getRingWeightOffset(t){let e=0;for(let i=0;i<t;++i)this.chart.isDatasetVisible(i)&&(e+=this._getRingWeight(i));return e}_getRingWeight(t){return Math.max(Object(n.Pb)(this.chart.data.datasets[t].weight,1),0)}_getVisibleDatasetWeightTotal(){return this._getRingWeightOffset(this.chart.data.datasets.length)||1}}A.id=\"doughnut\",A.defaults={datasetElementType:!1,dataElementType:\"arc\",animation:{animateRotate:!0,animateScale:!1},animations:{numbers:{type:\"number\",properties:[\"circumference\",\"endAngle\",\"innerRadius\",\"outerRadius\",\"startAngle\",\"x\",\"y\",\"offset\",\"borderWidth\",\"spacing\"]}},cutout:\"50%\",rotation:0,circumference:360,radius:\"100%\",spacing:0,indexAxis:\"r\"},A.descriptors={_scriptable:t=>\"spacing\"!==t,_indexable:t=>\"spacing\"!==t},A.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;if(e.labels.length&&e.datasets.length){const{labels:{pointStyle:i}}=t.legend.options;return e.labels.map(((e,n)=>{const o=t.getDatasetMeta(0).controller.getStyle(n);return{text:e,fillStyle:o.backgroundColor,strokeStyle:o.borderColor,lineWidth:o.borderWidth,pointStyle:i,hidden:!t.getDataVisibility(n),index:n}}))}return[]}},onClick(t,e,i){i.chart.toggleDataVisibility(e.index),i.chart.update()}},tooltip:{callbacks:{title:()=>\"\",label(t){let e=t.label;const i=\": \"+t.formattedValue;return Object(n.vb)(e)?(e=e.slice(),e[0]+=i):e+=i,e}}}}};class L extends v{initialize(){this.enableOptionSharing=!0,super.initialize()}update(t){const e=this,i=e._cachedMeta,{dataset:o,data:s=[],_dataset:a}=i,r=e.chart._animationsDisabled;let{start:l,count:c}=function(t,e,i){const o=e.length;let s=0,a=o;if(t._sorted){const{iScale:r,_parsed:l}=t,c=r.axis,{min:h,max:d,minDefined:u,maxDefined:g}=r.getUserBounds();u&&(s=Object(n.Kb)(Math.min(Object(n.Qb)(l,r.axis,h).lo,i?o:Object(n.Qb)(e,c,r.getPixelForValue(h)).lo),0,o-1)),a=g?Object(n.Kb)(Math.max(Object(n.Qb)(l,r.axis,d).hi+1,i?0:Object(n.Qb)(e,c,r.getPixelForValue(d)).hi+1),s,o)-s:o-s}return{start:s,count:a}}(i,s,r);e._drawStart=l,e._drawCount=c,function(t){const{xScale:e,yScale:i,_scaleRanges:n}=t,o={xmin:e.min,xmax:e.max,ymin:i.min,ymax:i.max};if(!n)return t._scaleRanges=o,!0;const s=n.xmin!==e.min||n.xmax!==e.max||n.ymin!==i.min||n.ymax!==i.max;return Object.assign(n,o),s}(i)&&(l=0,c=s.length),o._datasetIndex=e.index,o._decimated=!!a._decimated,o.points=s;const h=e.resolveDatasetElementOptions(t);e.options.showLine||(h.borderWidth=0),h.segment=e.options.segment,e.updateElement(o,void 0,{animated:!r,options:h},t),e.updateElements(s,l,c,t)}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,{iScale:r,vScale:l,_stacked:c}=s._cachedMeta,h=s.resolveDataElementOptions(e,o),d=s.getSharedOptions(h),u=s.includeOptions(o,d),g=r.axis,b=l.axis,p=s.options.spanGaps,f=Object(n.Jb)(p)?p:Number.POSITIVE_INFINITY,m=s.chart._animationsDisabled||a||\"none\"===o;let x=e>0&&s.getParsed(e-1);for(let _=e;_<e+i;++_){const e=t[_],i=s.getParsed(_),h=m?e:{},p=Object(n.Db)(i[b]),y=h[g]=r.getPixelForValue(i[g],_),v=h[b]=a||p?l.getBasePixel():l.getPixelForValue(c?s.applyStack(l,i,c):i[b],_);h.skip=isNaN(y)||isNaN(v)||p,h.stop=_>0&&i[g]-x[g]>f,h.parsed=i,u&&(h.options=d||s.resolveDataElementOptions(_,e.active?\"active\":o)),m||s.updateElement(e,_,h,o),x=i}s.updateSharedOptions(d,o,h)}getMaxOverflow(){const t=this,e=t._cachedMeta,i=e.dataset,n=i.options&&i.options.borderWidth||0,o=e.data||[];if(!o.length)return n;const s=o[0].size(t.resolveDataElementOptions(0)),a=o[o.length-1].size(t.resolveDataElementOptions(o.length-1));return Math.max(n,s,a)/2}draw(){const t=this._cachedMeta;t.dataset.updateControlPoints(this.chart.chartArea,t.iScale.axis),super.draw()}}L.id=\"line\",L.defaults={datasetElementType:\"line\",dataElementType:\"point\",showLine:!0,spanGaps:!1},L.overrides={scales:{_index_:{type:\"category\"},_value_:{type:\"linear\"}}};class T extends v{constructor(t,e){super(t,e),this.innerRadius=void 0,this.outerRadius=void 0}getLabelAndValue(t){const e=this._cachedMeta,i=this.chart,o=i.data.labels||[],s=Object(n.Hb)(e._parsed[t].r,i.options.locale);return{label:o[t]||\"\",value:s}}update(t){const e=this._cachedMeta.data;this._updateRadius(),this.updateElements(e,0,e.length,t)}_updateRadius(){const t=this,e=t.chart,i=e.chartArea,n=e.options,o=Math.min(i.right-i.left,i.bottom-i.top),s=Math.max(o/2,0),a=(s-Math.max(n.cutoutPercentage?s/100*n.cutoutPercentage:1,0))/e.getVisibleDatasetCount();t.outerRadius=s-a*t.index,t.innerRadius=t.outerRadius-a}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,r=s.chart,l=s.getDataset(),c=r.options.animation,h=s._cachedMeta.rScale,d=h.xCenter,u=h.yCenter,g=h.getIndexAngle(0)-.5*n.q;let b,p=g;const f=360/s.countVisibleElements();for(b=0;b<e;++b)p+=s._computeAngle(b,o,f);for(b=e;b<e+i;b++){const e=t[b];let i=p,n=p+s._computeAngle(b,o,f),m=r.getDataVisibility(b)?h.getDistanceFromCenterForValue(l.data[b]):0;p=n,a&&(c.animateScale&&(m=0),c.animateRotate&&(i=n=g));const x={x:d,y:u,innerRadius:0,outerRadius:m,startAngle:i,endAngle:n,options:s.resolveDataElementOptions(b,e.active?\"active\":o)};s.updateElement(e,b,x,o)}}countVisibleElements(){const t=this.getDataset(),e=this._cachedMeta;let i=0;return e.data.forEach(((e,n)=>{!isNaN(t.data[n])&&this.chart.getDataVisibility(n)&&i++})),i}_computeAngle(t,e,i){return this.chart.getDataVisibility(t)?Object(n.Nb)(this.resolveDataElementOptions(t,e).angle||i):0}}T.id=\"polarArea\",T.defaults={dataElementType:\"arc\",animation:{animateRotate:!0,animateScale:!0},animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\"]}},indexAxis:\"r\",startAngle:0},T.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;if(e.labels.length&&e.datasets.length){const{labels:{pointStyle:i}}=t.legend.options;return e.labels.map(((e,n)=>{const o=t.getDatasetMeta(0).controller.getStyle(n);return{text:e,fillStyle:o.backgroundColor,strokeStyle:o.borderColor,lineWidth:o.borderWidth,pointStyle:i,hidden:!t.getDataVisibility(n),index:n}}))}return[]}},onClick(t,e,i){i.chart.toggleDataVisibility(e.index),i.chart.update()}},tooltip:{callbacks:{title:()=>\"\",label:t=>t.chart.data.labels[t.dataIndex]+\": \"+t.formattedValue}}},scales:{r:{type:\"radialLinear\",angleLines:{display:!1},beginAtZero:!0,grid:{circular:!0},pointLabels:{display:!1},startAngle:0}}};class E extends A{}E.id=\"pie\",E.defaults={cutout:0,rotation:0,circumference:360,radius:\"100%\"};class R extends v{getLabelAndValue(t){const e=this._cachedMeta.vScale,i=this.getParsed(t);return{label:e.getLabels()[t],value:\"\"+e.getLabelForValue(i[e.axis])}}update(t){const e=this,i=e._cachedMeta,n=i.dataset,o=i.data||[],s=i.iScale.getLabels();if(n.points=o,\"resize\"!==t){const i=e.resolveDatasetElementOptions(t);e.options.showLine||(i.borderWidth=0);const a={_loop:!0,_fullLoop:s.length===o.length,options:i};e.updateElement(n,void 0,a,t)}e.updateElements(o,0,o.length,t)}updateElements(t,e,i,n){const o=this,s=o.getDataset(),a=o._cachedMeta.rScale,r=\"reset\"===n;for(let l=e;l<e+i;l++){const e=t[l],i=o.resolveDataElementOptions(l,e.active?\"active\":n),c=a.getPointPositionForValue(l,s.data[l]),h=r?a.xCenter:c.x,d=r?a.yCenter:c.y,u={x:h,y:d,angle:c.angle,skip:isNaN(h)||isNaN(d),options:i};o.updateElement(e,l,u,n)}}}R.id=\"radar\",R.defaults={datasetElementType:\"line\",dataElementType:\"point\",indexAxis:\"r\",showLine:!0,elements:{line:{fill:\"start\"}}},R.overrides={aspectRatio:1,scales:{r:{type:\"radialLinear\"}}};class z extends L{}z.id=\"scatter\",z.defaults={showLine:!1,fill:!1},z.overrides={interaction:{mode:\"point\"},plugins:{tooltip:{callbacks:{title:()=>\"\",label:t=>\"(\"+t.label+\", \"+t.formattedValue+\")\"}}},scales:{x:{type:\"linear\"},y:{type:\"linear\"}}};var F=Object.freeze({__proto__:null,BarController:P,BubbleController:C,DoughnutController:A,LineController:L,PolarAreaController:T,PieController:E,RadarController:R,ScatterController:z});function I(){throw new Error(\"This method is not implemented: Check that a complete date adapter is provided.\")}class V{constructor(t){this.options=t||{}}formats(){return I()}parse(t,e){return I()}format(t,e){return I()}add(t,e,i){return I()}diff(t,e,i){return I()}startOf(t,e,i){return I()}endOf(t,e){return I()}}V.override=function(t){Object.assign(V.prototype,t)};var B={_date:V};function N(t,e){return\"native\"in t?{x:t.x,y:t.y}:Object(n.Rb)(t,e)}function W(t,e,i,o){const{controller:s,data:a,_sorted:r}=t,l=s._cachedMeta.iScale;if(l&&e===l.axis&&r&&a.length){const t=l._reversePixels?n.Tb:n.Qb;if(!o)return t(a,e,i);if(s._sharedOptions){const n=a[0],o=\"function\"===typeof n.getRange&&n.getRange(e);if(o){const n=t(a,e,i-o),s=t(a,e,i+o);return{lo:n.lo,hi:s.hi}}}}return{lo:0,hi:a.length-1}}function H(t,e,i,n,o){const s=t.getSortedVisibleDatasetMetas(),a=i[e];for(let r=0,l=s.length;r<l;++r){const{index:t,data:i}=s[r],{lo:l,hi:c}=W(s[r],e,a,o);for(let e=l;e<=c;++e){const o=i[e];o.skip||n(o,t,e)}}}function $(t,e,i,o){const s=[];if(!Object(n.Sb)(e,t.chartArea,t._minPadding))return s;return H(t,i,e,(function(t,i,n){t.inRange(e.x,e.y,o)&&s.push({element:t,datasetIndex:i,index:n})}),!0),s}function U(t,e,i,o,s){const a=function(t){const e=-1!==t.indexOf(\"x\"),i=-1!==t.indexOf(\"y\");return function(t,n){const o=e?Math.abs(t.x-n.x):0,s=i?Math.abs(t.y-n.y):0;return Math.sqrt(Math.pow(o,2)+Math.pow(s,2))}}(i);let r=Number.POSITIVE_INFINITY,l=[];if(!Object(n.Sb)(e,t.chartArea,t._minPadding))return l;return H(t,i,e,(function(i,c,h){if(o&&!i.inRange(e.x,e.y,s))return;const d=i.getCenterPoint(s);if(!Object(n.Sb)(d,t.chartArea,t._minPadding)&&!i.inRange(e.x,e.y,s))return;const u=a(e,d);u<r?(l=[{element:i,datasetIndex:c,index:h}],r=u):u===r&&l.push({element:i,datasetIndex:c,index:h})})),l}function Y(t,e,i,n){const o=N(e,t),s=[],a=i.axis,r=\"x\"===a?\"inXRange\":\"inYRange\";let l=!1;return function(t,e){const i=t.getSortedVisibleDatasetMetas();let n,o,s;for(let a=0,r=i.length;a<r;++a){({index:n,data:o}=i[a]);for(let t=0,i=o.length;t<i;++t)s=o[t],s.skip||e(s,n,t)}}(t,((t,e,i)=>{t[r](o[a],n)&&s.push({element:t,datasetIndex:e,index:i}),t.inRange(o.x,o.y,n)&&(l=!0)})),i.intersect&&!l?[]:s}var K={modes:{index(t,e,i,n){const o=N(e,t),s=i.axis||\"x\",a=i.intersect?$(t,o,s,n):U(t,o,s,!1,n),r=[];return a.length?(t.getSortedVisibleDatasetMetas().forEach((t=>{const e=a[0].index,i=t.data[e];i&&!i.skip&&r.push({element:i,datasetIndex:t.index,index:e})})),r):[]},dataset(t,e,i,n){const o=N(e,t),s=i.axis||\"xy\";let a=i.intersect?$(t,o,s,n):U(t,o,s,!1,n);if(a.length>0){const e=a[0].datasetIndex,i=t.getDatasetMeta(e).data;a=[];for(let t=0;t<i.length;++t)a.push({element:i[t],datasetIndex:e,index:t})}return a},point:(t,e,i,n)=>$(t,N(e,t),i.axis||\"xy\",n),nearest:(t,e,i,n)=>U(t,N(e,t),i.axis||\"xy\",i.intersect,n),x:(t,e,i,n)=>(i.axis=\"x\",Y(t,e,i,n)),y:(t,e,i,n)=>(i.axis=\"y\",Y(t,e,i,n))}};const X=[\"left\",\"top\",\"right\",\"bottom\"];function q(t,e){return t.filter((t=>t.pos===e))}function G(t,e){return t.filter((t=>-1===X.indexOf(t.pos)&&t.box.axis===e))}function J(t,e){return t.sort(((t,i)=>{const n=e?i:t,o=e?t:i;return n.weight===o.weight?n.index-o.index:n.weight-o.weight}))}function Q(t,e){const i=function(t){const e={};for(const i of t){const{stack:t,pos:n,stackWeight:o}=i;if(!t||!X.includes(n))continue;const s=e[t]||(e[t]={count:0,placed:0,weight:0,size:0});s.count++,s.weight+=o}return e}(t),{vBoxMaxWidth:n,hBoxMaxHeight:o}=e;let s,a,r;for(s=0,a=t.length;s<a;++s){r=t[s];const{fullSize:a}=r.box,l=i[r.stack],c=l&&r.stackWeight/l.weight;r.horizontal?(r.width=c?c*n:a&&e.availableWidth,r.height=o):(r.width=n,r.height=c?c*o:a&&e.availableHeight)}return i}function Z(t,e,i,n){return Math.max(t[i],e[i])+Math.max(t[n],e[n])}function tt(t,e){t.top=Math.max(t.top,e.top),t.left=Math.max(t.left,e.left),t.bottom=Math.max(t.bottom,e.bottom),t.right=Math.max(t.right,e.right)}function et(t,e,i,o){const{pos:s,box:a}=i,r=t.maxPadding;if(!Object(n.Cb)(s)){i.size&&(t[s]-=i.size);const e=o[i.stack]||{size:0,count:1};e.size=Math.max(e.size,i.horizontal?a.height:a.width),i.size=e.size/e.count,t[s]+=i.size}a.getPadding&&tt(r,a.getPadding());const l=Math.max(0,e.outerWidth-Z(r,t,\"left\",\"right\")),c=Math.max(0,e.outerHeight-Z(r,t,\"top\",\"bottom\")),h=l!==t.w,d=c!==t.h;return t.w=l,t.h=c,i.horizontal?{same:h,other:d}:{same:d,other:h}}function it(t,e){const i=e.maxPadding;function n(t){const n={left:0,top:0,right:0,bottom:0};return t.forEach((t=>{n[t]=Math.max(e[t],i[t])})),n}return n(t?[\"left\",\"right\"]:[\"top\",\"bottom\"])}function nt(t,e,i,n){const o=[];let s,a,r,l,c,h;for(s=0,a=t.length,c=0;s<a;++s){r=t[s],l=r.box,l.update(r.width||e.w,r.height||e.h,it(r.horizontal,e));const{same:a,other:d}=et(e,i,r,n);c|=a&&o.length,h=h||d,l.fullSize||o.push(r)}return c&&nt(o,e,i,n)||h}function ot(t,e,i,n,o){t.top=i,t.left=e,t.right=e+n,t.bottom=i+o,t.width=n,t.height=o}function st(t,e,i,o){const s=i.padding;let{x:a,y:r}=e;for(const l of t){const t=l.box,c=o[l.stack]||{count:1,placed:0,weight:1},h=l.stackWeight/c.weight||1;if(l.horizontal){const o=e.w*h,a=c.size||t.height;Object(n.Bb)(c.start)&&(r=c.start),t.fullSize?ot(t,s.left,r,i.outerWidth-s.right-s.left,a):ot(t,e.left+c.placed,r,o,a),c.start=r,c.placed+=o,r=t.bottom}else{const o=e.h*h,r=c.size||t.width;Object(n.Bb)(c.start)&&(a=c.start),t.fullSize?ot(t,a,s.top,r,i.outerHeight-s.bottom-s.top):ot(t,a,e.top+c.placed,r,o),c.start=a,c.placed+=o,a=t.right}}e.x=a,e.y=r}n.xb.set(\"layout\",{padding:{top:0,right:0,bottom:0,left:0}});var at={addBox(t,e){t.boxes||(t.boxes=[]),e.fullSize=e.fullSize||!1,e.position=e.position||\"top\",e.weight=e.weight||0,e._layers=e._layers||function(){return[{z:0,draw(t){e.draw(t)}}]},t.boxes.push(e)},removeBox(t,e){const i=t.boxes?t.boxes.indexOf(e):-1;-1!==i&&t.boxes.splice(i,1)},configure(t,e,i){e.fullSize=i.fullSize,e.position=i.position,e.weight=i.weight},update(t,e,i,o){if(!t)return;const s=Object(n.b)(t.options.layout.padding),a=Math.max(e-s.width,0),r=Math.max(i-s.height,0),l=function(t){const e=function(t){const e=[];let i,n,o,s,a,r;for(i=0,n=(t||[]).length;i<n;++i)o=t[i],({position:s,options:{stack:a,stackWeight:r=1}}=o),e.push({index:i,box:o,pos:s,horizontal:o.isHorizontal(),weight:o.weight,stack:a&&s+a,stackWeight:r});return e}(t),i=J(e.filter((t=>t.box.fullSize)),!0),n=J(q(e,\"left\"),!0),o=J(q(e,\"right\")),s=J(q(e,\"top\"),!0),a=J(q(e,\"bottom\")),r=G(e,\"x\"),l=G(e,\"y\");return{fullSize:i,leftAndTop:n.concat(s),rightAndBottom:o.concat(l).concat(a).concat(r),chartArea:q(e,\"chartArea\"),vertical:n.concat(o).concat(l),horizontal:s.concat(a).concat(r)}}(t.boxes),c=l.vertical,h=l.horizontal;Object(n.c)(t.boxes,(t=>{\"function\"===typeof t.beforeLayout&&t.beforeLayout()}));const d=c.reduce(((t,e)=>e.box.options&&!1===e.box.options.display?t:t+1),0)||1,u=Object.freeze({outerWidth:e,outerHeight:i,padding:s,availableWidth:a,availableHeight:r,vBoxMaxWidth:a/2/d,hBoxMaxHeight:r/2}),g=Object.assign({},s);tt(g,Object(n.b)(o));const b=Object.assign({maxPadding:g,w:a,h:r,x:s.left,y:s.top},s),p=Q(c.concat(h),u);nt(l.fullSize,b,u,p),nt(c,b,u,p),nt(h,b,u,p)&&nt(c,b,u,p),function(t){const e=t.maxPadding;function i(i){const n=Math.max(e[i]-t[i],0);return t[i]+=n,n}t.y+=i(\"top\"),t.x+=i(\"left\"),i(\"right\"),i(\"bottom\")}(b),st(l.leftAndTop,b,u,p),b.x+=b.w,b.y+=b.h,st(l.rightAndBottom,b,u,p),t.chartArea={left:b.left,top:b.top,right:b.left+b.w,bottom:b.top+b.h,height:b.h,width:b.w},Object(n.c)(l.chartArea,(e=>{const i=e.box;Object.assign(i,t.chartArea),i.update(b.w,b.h)}))}};class rt{acquireContext(t,e){}releaseContext(t){return!1}addEventListener(t,e,i){}removeEventListener(t,e,i){}getDevicePixelRatio(){return 1}getMaximumSize(t,e,i,n){return e=Math.max(0,e||t.width),i=i||t.height,{width:e,height:Math.max(0,n?Math.floor(e/n):i)}}isAttached(t){return!0}}class lt extends rt{acquireContext(t){return t&&t.getContext&&t.getContext(\"2d\")||null}}const ct={touchstart:\"mousedown\",touchmove:\"mousemove\",touchend:\"mouseup\",pointerenter:\"mouseenter\",pointerdown:\"mousedown\",pointermove:\"mousemove\",pointerup:\"mouseup\",pointerleave:\"mouseout\",pointerout:\"mouseout\"},ht=t=>null===t||\"\"===t;const dt=!!n.h&&{passive:!0};function ut(t,e,i){t.canvas.removeEventListener(e,i,dt)}function gt(t,e,i){const o=t.canvas,s=o&&Object(n.e)(o)||o,a=new MutationObserver((t=>{const e=Object(n.e)(s);t.forEach((t=>{for(let n=0;n<t.addedNodes.length;n++){const o=t.addedNodes[n];o!==s&&o!==e||i(t.target)}}))}));return a.observe(document,{childList:!0,subtree:!0}),a}function bt(t,e,i){const o=t.canvas,s=o&&Object(n.e)(o);if(!s)return;const a=new MutationObserver((t=>{t.forEach((t=>{for(let e=0;e<t.removedNodes.length;e++)if(t.removedNodes[e]===o){i();break}}))}));return a.observe(s,{childList:!0}),a}const pt=new Map;let ft=0;function mt(){const t=window.devicePixelRatio;t!==ft&&(ft=t,pt.forEach(((e,i)=>{i.currentDevicePixelRatio!==t&&e()})))}function xt(t,e,i){const o=t.canvas,s=o&&Object(n.e)(o);if(!s)return;const a=Object(n.g)(((t,e)=>{const n=s.clientWidth;i(t,e),n<s.clientWidth&&i()}),window),r=new ResizeObserver((t=>{const e=t[0],i=e.contentRect.width,n=e.contentRect.height;0===i&&0===n||a(i,n)}));return r.observe(s),function(t,e){pt.size||window.addEventListener(\"resize\",mt),pt.set(t,e)}(t,a),r}function _t(t,e,i){i&&i.disconnect(),\"resize\"===e&&function(t){pt.delete(t),pt.size||window.removeEventListener(\"resize\",mt)}(t)}function yt(t,e,i){const o=t.canvas,s=Object(n.g)((e=>{null!==t.ctx&&i(function(t,e){const i=ct[t.type]||t.type,{x:o,y:s}=Object(n.Rb)(t,e);return{type:i,chart:e,native:t,x:void 0!==o?o:null,y:void 0!==s?s:null}}(e,t))}),t,(t=>{const e=t[0];return[e,e.offsetX,e.offsetY]}));return function(t,e,i){t.addEventListener(e,i,dt)}(o,e,s),s}class vt extends rt{acquireContext(t,e){const i=t&&t.getContext&&t.getContext(\"2d\");return i&&i.canvas===t?(function(t,e){const i=t.style,o=t.getAttribute(\"height\"),s=t.getAttribute(\"width\");if(t.$chartjs={initial:{height:o,width:s,style:{display:i.display,height:i.height,width:i.width}}},i.display=i.display||\"block\",i.boxSizing=i.boxSizing||\"border-box\",ht(s)){const e=Object(n.f)(t,\"width\");void 0!==e&&(t.width=e)}if(ht(o))if(\"\"===t.style.height)t.height=t.width/(e||2);else{const e=Object(n.f)(t,\"height\");void 0!==e&&(t.height=e)}}(t,e),i):null}releaseContext(t){const e=t.canvas;if(!e.$chartjs)return!1;const i=e.$chartjs.initial;[\"height\",\"width\"].forEach((t=>{const o=i[t];Object(n.Db)(o)?e.removeAttribute(t):e.setAttribute(t,o)}));const o=i.style||{};return Object.keys(o).forEach((t=>{e.style[t]=o[t]})),e.width=e.width,delete e.$chartjs,!0}addEventListener(t,e,i){this.removeEventListener(t,e);const n=t.$proxies||(t.$proxies={}),o={attach:gt,detach:bt,resize:xt}[e]||yt;n[e]=o(t,e,i)}removeEventListener(t,e){const i=t.$proxies||(t.$proxies={}),n=i[e];if(!n)return;({attach:_t,detach:_t,resize:_t}[e]||ut)(t,e,n),i[e]=void 0}getDevicePixelRatio(){return window.devicePixelRatio}getMaximumSize(t,e,i,o){return Object(n.d)(t,e,i,o)}isAttached(t){const e=Object(n.e)(t);return!(!e||!e.isConnected)}}class Ot{constructor(){this.x=void 0,this.y=void 0,this.active=!1,this.options=void 0,this.$animations=void 0}tooltipPosition(t){const{x:e,y:i}=this.getProps([\"x\",\"y\"],t);return{x:e,y:i}}hasValue(){return Object(n.Jb)(this.x)&&Object(n.Jb)(this.y)}getProps(t,e){const i=this,n=this.$animations;if(!e||!n)return i;const o={};return t.forEach((t=>{o[t]=n[t]&&n[t].active()?n[t]._to:i[t]})),o}}Ot.defaults={},Ot.defaultRoutes=void 0;const jt={values:t=>Object(n.vb)(t)?t:\"\"+t,numeric(t,e,i){if(0===t)return\"0\";const o=this.chart.options.locale;let s,a=t;if(i.length>1){const e=Math.max(Math.abs(i[0].value),Math.abs(i[i.length-1].value));(e<1e-4||e>1e15)&&(s=\"scientific\"),a=function(t,e){let i=e.length>3?e[2].value-e[1].value:e[1].value-e[0].value;Math.abs(i)>=1&&t!==Math.floor(t)&&(i=t-Math.floor(t));return i}(t,i)}const r=Object(n.k)(Math.abs(a)),l=Math.max(Math.min(-1*Math.floor(r),20),0),c={notation:s,minimumFractionDigits:l,maximumFractionDigits:l};return Object.assign(c,this.options.ticks.format),Object(n.Hb)(t,o,c)},logarithmic(t,e,i){if(0===t)return\"0\";const o=t/Math.pow(10,Math.floor(Object(n.k)(t)));return 1===o||2===o||5===o?jt.numeric.call(this,t,e,i):\"\"}};var Mt={formatters:jt};function wt(t,e){const i=t.options.ticks,o=i.maxTicksLimit||function(t){const e=t.options.offset,i=t._tickSize(),n=t._length/i+(e?0:1),o=t._maxLength/i;return Math.floor(Math.min(n,o))}(t),s=i.major.enabled?function(t){const e=[];let i,n;for(i=0,n=t.length;i<n;i++)t[i].major&&e.push(i);return e}(e):[],a=s.length,r=s[0],l=s[a-1],c=[];if(a>o)return function(t,e,i,n){let o,s=0,a=i[0];for(n=Math.ceil(n),o=0;o<t.length;o++)o===a&&(e.push(t[o]),s++,a=i[s*n])}(e,c,s,a/o),c;const h=function(t,e,i){const o=function(t){const e=t.length;let i,n;if(e<2)return!1;for(n=t[0],i=1;i<e;++i)if(t[i]-t[i-1]!==n)return!1;return n}(t),s=e.length/i;if(!o)return Math.max(s,1);const a=Object(n.l)(o);for(let n=0,r=a.length-1;n<r;n++){const t=a[n];if(t>s)return t}return Math.max(s,1)}(s,e,o);if(a>0){let t,i;const o=a>1?Math.round((l-r)/(a-1)):null;for(kt(e,c,h,Object(n.Db)(o)?0:r-o,r),t=0,i=a-1;t<i;t++)kt(e,c,h,s[t],s[t+1]);return kt(e,c,h,l,Object(n.Db)(o)?e.length:l+o),c}return kt(e,c,h),c}function kt(t,e,i,o,s){const a=Object(n.Pb)(o,0),r=Math.min(Object(n.Pb)(s,t.length),t.length);let l,c,h,d=0;for(i=Math.ceil(i),s&&(l=s-o,i=l/Math.floor(l/i)),h=a;h<0;)d++,h=Math.round(a+d*i);for(c=Math.max(a,0);c<r;c++)c===h&&(e.push(t[c]),d++,h=Math.round(a+d*i))}n.xb.set(\"scale\",{display:!0,offset:!1,reverse:!1,beginAtZero:!1,bounds:\"ticks\",grace:0,grid:{display:!0,lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickLength:8,tickWidth:(t,e)=>e.lineWidth,tickColor:(t,e)=>e.color,offset:!1,borderDash:[],borderDashOffset:0,borderWidth:1},title:{display:!1,text:\"\",padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:!1,textStrokeWidth:0,textStrokeColor:\"\",padding:3,display:!0,autoSkip:!0,autoSkipPadding:3,labelOffset:0,callback:Mt.formatters.values,minor:{},major:{},align:\"center\",crossAlign:\"near\",showLabelBackdrop:!1,backdropColor:\"rgba(255, 255, 255, 0.75)\",backdropPadding:2}}),n.xb.route(\"scale.ticks\",\"color\",\"\",\"color\"),n.xb.route(\"scale.grid\",\"color\",\"\",\"borderColor\"),n.xb.route(\"scale.grid\",\"borderColor\",\"\",\"borderColor\"),n.xb.route(\"scale.title\",\"color\",\"\",\"color\"),n.xb.describe(\"scale\",{_fallback:!1,_scriptable:t=>!t.startsWith(\"before\")&&!t.startsWith(\"after\")&&\"callback\"!==t&&\"parser\"!==t,_indexable:t=>\"borderDash\"!==t&&\"tickBorderDash\"!==t}),n.xb.describe(\"scales\",{_fallback:\"scale\"}),n.xb.describe(\"scale.ticks\",{_scriptable:t=>\"backdropPadding\"!==t&&\"callback\"!==t,_indexable:t=>\"backdropPadding\"!==t});const St=(t,e,i)=>\"top\"===e||\"left\"===e?t[e]+i:t[e]-i;function Dt(t,e){const i=[],n=t.length/e,o=t.length;let s=0;for(;s<o;s+=n)i.push(t[Math.floor(s)]);return i}function Pt(t,e,i){const n=t.ticks.length,o=Math.min(e,n-1),s=t._startPixel,a=t._endPixel,r=1e-6;let l,c=t.getPixelForTick(o);if(!(i&&(l=1===n?Math.max(c-s,a-c):0===e?(t.getPixelForTick(1)-c)/2:(c-t.getPixelForTick(o-1))/2,c+=o<e?l:-l,c<s-r||c>a+r)))return c}function Ct(t){return t.drawTicks?t.tickLength:0}function At(t,e){if(!t.display)return 0;const i=Object(n.y)(t.font,e),o=Object(n.b)(t.padding);return(Object(n.vb)(t.text)?t.text.length:1)*i.lineHeight+o.height}function Lt(t,e,i){let o=Object(n.z)(t);return(i&&\"right\"!==e||!i&&\"right\"===e)&&(o=(t=>\"left\"===t?\"right\":\"right\"===t?\"left\":t)(o)),o}class Tt extends Ot{constructor(t){super(),this.id=t.id,this.type=t.type,this.options=void 0,this.ctx=t.ctx,this.chart=t.chart,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this._margins={left:0,right:0,top:0,bottom:0},this.maxWidth=void 0,this.maxHeight=void 0,this.paddingTop=void 0,this.paddingBottom=void 0,this.paddingLeft=void 0,this.paddingRight=void 0,this.axis=void 0,this.labelRotation=void 0,this.min=void 0,this.max=void 0,this._range=void 0,this.ticks=[],this._gridLineItems=null,this._labelItems=null,this._labelSizes=null,this._length=0,this._maxLength=0,this._longestTextCache={},this._startPixel=void 0,this._endPixel=void 0,this._reversePixels=!1,this._userMax=void 0,this._userMin=void 0,this._suggestedMax=void 0,this._suggestedMin=void 0,this._ticksLength=0,this._borderValue=0,this._cache={},this._dataLimitsCached=!1,this.$context=void 0}init(t){const e=this;e.options=t.setContext(e.getContext()),e.axis=t.axis,e._userMin=e.parse(t.min),e._userMax=e.parse(t.max),e._suggestedMin=e.parse(t.suggestedMin),e._suggestedMax=e.parse(t.suggestedMax)}parse(t,e){return t}getUserBounds(){let{_userMin:t,_userMax:e,_suggestedMin:i,_suggestedMax:o}=this;return t=Object(n.m)(t,Number.POSITIVE_INFINITY),e=Object(n.m)(e,Number.NEGATIVE_INFINITY),i=Object(n.m)(i,Number.POSITIVE_INFINITY),o=Object(n.m)(o,Number.NEGATIVE_INFINITY),{min:Object(n.m)(t,i),max:Object(n.m)(e,o),minDefined:Object(n.Ab)(t),maxDefined:Object(n.Ab)(e)}}getMinMax(t){const e=this;let i,{min:o,max:s,minDefined:a,maxDefined:r}=e.getUserBounds();if(a&&r)return{min:o,max:s};const l=e.getMatchingVisibleMetas();for(let n=0,c=l.length;n<c;++n)i=l[n].controller.getMinMax(e,t),a||(o=Math.min(o,i.min)),r||(s=Math.max(s,i.max));return{min:Object(n.m)(o,Object(n.m)(s,o)),max:Object(n.m)(s,Object(n.m)(o,s))}}getPadding(){const t=this;return{left:t.paddingLeft||0,top:t.paddingTop||0,right:t.paddingRight||0,bottom:t.paddingBottom||0}}getTicks(){return this.ticks}getLabels(){const t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels||[]}beforeLayout(){this._cache={},this._dataLimitsCached=!1}beforeUpdate(){Object(n.n)(this.options.beforeUpdate,[this])}update(t,e,i){const o=this,s=o.options.ticks,a=s.sampleSize;o.beforeUpdate(),o.maxWidth=t,o.maxHeight=e,o._margins=i=Object.assign({left:0,right:0,top:0,bottom:0},i),o.ticks=null,o._labelSizes=null,o._gridLineItems=null,o._labelItems=null,o.beforeSetDimensions(),o.setDimensions(),o.afterSetDimensions(),o._maxLength=o.isHorizontal()?o.width+i.left+i.right:o.height+i.top+i.bottom,o._dataLimitsCached||(o.beforeDataLimits(),o.determineDataLimits(),o.afterDataLimits(),o._range=Object(n.o)(o,o.options.grace),o._dataLimitsCached=!0),o.beforeBuildTicks(),o.ticks=o.buildTicks()||[],o.afterBuildTicks();const r=a<o.ticks.length;o._convertTicksToLabels(r?Dt(o.ticks,a):o.ticks),o.configure(),o.beforeCalculateLabelRotation(),o.calculateLabelRotation(),o.afterCalculateLabelRotation(),s.display&&(s.autoSkip||\"auto\"===s.source)&&(o.ticks=wt(o,o.ticks),o._labelSizes=null),r&&o._convertTicksToLabels(o.ticks),o.beforeFit(),o.fit(),o.afterFit(),o.afterUpdate()}configure(){const t=this;let e,i,n=t.options.reverse;t.isHorizontal()?(e=t.left,i=t.right):(e=t.top,i=t.bottom,n=!n),t._startPixel=e,t._endPixel=i,t._reversePixels=n,t._length=i-e,t._alignToPixels=t.options.alignToPixels}afterUpdate(){Object(n.n)(this.options.afterUpdate,[this])}beforeSetDimensions(){Object(n.n)(this.options.beforeSetDimensions,[this])}setDimensions(){const t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0}afterSetDimensions(){Object(n.n)(this.options.afterSetDimensions,[this])}_callHooks(t){const e=this;e.chart.notifyPlugins(t,e.getContext()),Object(n.n)(e.options[t],[e])}beforeDataLimits(){this._callHooks(\"beforeDataLimits\")}determineDataLimits(){}afterDataLimits(){this._callHooks(\"afterDataLimits\")}beforeBuildTicks(){this._callHooks(\"beforeBuildTicks\")}buildTicks(){return[]}afterBuildTicks(){this._callHooks(\"afterBuildTicks\")}beforeTickToLabelConversion(){Object(n.n)(this.options.beforeTickToLabelConversion,[this])}generateTickLabels(t){const e=this,i=e.options.ticks;let o,s,a;for(o=0,s=t.length;o<s;o++)a=t[o],a.label=Object(n.n)(i.callback,[a.value,o,t],e)}afterTickToLabelConversion(){Object(n.n)(this.options.afterTickToLabelConversion,[this])}beforeCalculateLabelRotation(){Object(n.n)(this.options.beforeCalculateLabelRotation,[this])}calculateLabelRotation(){const t=this,e=t.options,i=e.ticks,o=t.ticks.length,s=i.minRotation||0,a=i.maxRotation;let r,l,c,h=s;if(!t._isVisible()||!i.display||s>=a||o<=1||!t.isHorizontal())return void(t.labelRotation=s);const d=t._getLabelSizes(),u=d.widest.width,g=d.highest.height,b=Object(n.Kb)(t.chart.width-u,0,t.maxWidth);r=e.offset?t.maxWidth/o:b/(o-1),u+6>r&&(r=b/(o-(e.offset?.5:1)),l=t.maxHeight-Ct(e.grid)-i.padding-At(e.title,t.chart.options.font),c=Math.sqrt(u*u+g*g),h=Object(n.p)(Math.min(Math.asin(Object(n.Kb)((d.highest.height+6)/r,-1,1)),Math.asin(Object(n.Kb)(l/c,-1,1))-Math.asin(Object(n.Kb)(g/c,-1,1)))),h=Math.max(s,Math.min(a,h))),t.labelRotation=h}afterCalculateLabelRotation(){Object(n.n)(this.options.afterCalculateLabelRotation,[this])}beforeFit(){Object(n.n)(this.options.beforeFit,[this])}fit(){const t=this,e={width:0,height:0},{chart:i,options:{ticks:o,title:s,grid:a}}=t,r=t._isVisible(),l=t.isHorizontal();if(r){const r=At(s,i.options.font);if(l?(e.width=t.maxWidth,e.height=Ct(a)+r):(e.height=t.maxHeight,e.width=Ct(a)+r),o.display&&t.ticks.length){const{first:i,last:s,widest:a,highest:r}=t._getLabelSizes(),c=2*o.padding,h=Object(n.Nb)(t.labelRotation),d=Math.cos(h),u=Math.sin(h);if(l){const i=o.mirror?0:u*a.width+d*r.height;e.height=Math.min(t.maxHeight,e.height+i+c)}else{const i=o.mirror?0:d*a.width+u*r.height;e.width=Math.min(t.maxWidth,e.width+i+c)}t._calculatePadding(i,s,u,d)}}t._handleMargins(),l?(t.width=t._length=i.width-t._margins.left-t._margins.right,t.height=e.height):(t.width=e.width,t.height=t._length=i.height-t._margins.top-t._margins.bottom)}_calculatePadding(t,e,i,n){const o=this,{ticks:{align:s,padding:a},position:r}=o.options,l=0!==o.labelRotation,c=\"top\"!==r&&\"x\"===o.axis;if(o.isHorizontal()){const r=o.getPixelForTick(0)-o.left,h=o.right-o.getPixelForTick(o.ticks.length-1);let d=0,u=0;l?c?(d=n*t.width,u=i*e.height):(d=i*t.height,u=n*e.width):\"start\"===s?u=e.width:\"end\"===s?d=t.width:(d=t.width/2,u=e.width/2),o.paddingLeft=Math.max((d-r+a)*o.width/(o.width-r),0),o.paddingRight=Math.max((u-h+a)*o.width/(o.width-h),0)}else{let i=e.height/2,n=t.height/2;\"start\"===s?(i=0,n=t.height):\"end\"===s&&(i=e.height,n=0),o.paddingTop=i+a,o.paddingBottom=n+a}}_handleMargins(){const t=this;t._margins&&(t._margins.left=Math.max(t.paddingLeft,t._margins.left),t._margins.top=Math.max(t.paddingTop,t._margins.top),t._margins.right=Math.max(t.paddingRight,t._margins.right),t._margins.bottom=Math.max(t.paddingBottom,t._margins.bottom))}afterFit(){Object(n.n)(this.options.afterFit,[this])}isHorizontal(){const{axis:t,position:e}=this.options;return\"top\"===e||\"bottom\"===e||\"x\"===t}isFullSize(){return this.options.fullSize}_convertTicksToLabels(t){const e=this;let i,o;for(e.beforeTickToLabelConversion(),e.generateTickLabels(t),i=0,o=t.length;i<o;i++)Object(n.Db)(t[i].label)&&(t.splice(i,1),o--,i--);e.afterTickToLabelConversion()}_getLabelSizes(){const t=this;let e=t._labelSizes;if(!e){const i=t.options.ticks.sampleSize;let n=t.ticks;i<n.length&&(n=Dt(n,i)),t._labelSizes=e=t._computeLabelSizes(n,n.length)}return e}_computeLabelSizes(t,e){const{ctx:i,_longestTextCache:o}=this,s=[],a=[];let r,l,c,h,d,u,g,b,p,f,m,x=0,_=0;for(r=0;r<e;++r){if(h=t[r].label,d=this._resolveTickFontOptions(r),i.font=u=d.string,g=o[u]=o[u]||{data:{},gc:[]},b=d.lineHeight,p=f=0,Object(n.Db)(h)||Object(n.vb)(h)){if(Object(n.vb)(h))for(l=0,c=h.length;l<c;++l)m=h[l],Object(n.Db)(m)||Object(n.vb)(m)||(p=Object(n.r)(i,g.data,g.gc,p,m),f+=b)}else p=Object(n.r)(i,g.data,g.gc,p,h),f=b;s.push(p),a.push(f),x=Math.max(p,x),_=Math.max(f,_)}!function(t,e){Object(n.c)(t,(t=>{const i=t.gc,n=i.length/2;let o;if(n>e){for(o=0;o<n;++o)delete t.data[i[o]];i.splice(0,n)}}))}(o,e);const y=s.indexOf(x),v=a.indexOf(_),O=t=>({width:s[t]||0,height:a[t]||0});return{first:O(0),last:O(e-1),widest:O(y),highest:O(v),widths:s,heights:a}}getLabelForValue(t){return t}getPixelForValue(t,e){return NaN}getValueForPixel(t){}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getPixelForDecimal(t){const e=this;e._reversePixels&&(t=1-t);const i=e._startPixel+t*e._length;return Object(n.s)(e._alignToPixels?Object(n.t)(e.chart,i,0):i)}getDecimalForPixel(t){const e=(t-this._startPixel)/this._length;return this._reversePixels?1-e:e}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:t,max:e}=this;return t<0&&e<0?e:t>0&&e>0?t:0}getContext(t){const e=this,i=e.ticks||[];if(t>=0&&t<i.length){const n=i[t];return n.$context||(n.$context=function(t,e,i){return Object.assign(Object.create(t),{tick:i,index:e,type:\"tick\"})}(e.getContext(),t,n))}return e.$context||(e.$context=(n=e.chart.getContext(),o=e,Object.assign(Object.create(n),{scale:o,type:\"scale\"})));var n,o}_tickSize(){const t=this,e=t.options.ticks,i=Object(n.Nb)(t.labelRotation),o=Math.abs(Math.cos(i)),s=Math.abs(Math.sin(i)),a=t._getLabelSizes(),r=e.autoSkipPadding||0,l=a?a.widest.width+r:0,c=a?a.highest.height+r:0;return t.isHorizontal()?c*o>l*s?l/o:c/s:c*s<l*o?c/o:l/s}_isVisible(){const t=this.options.display;return\"auto\"!==t?!!t:this.getMatchingVisibleMetas().length>0}_computeGridLineItems(t){const e=this,i=e.axis,o=e.chart,s=e.options,{grid:a,position:r}=s,l=a.offset,c=e.isHorizontal(),h=e.ticks.length+(l?1:0),d=Ct(a),u=[],g=a.setContext(e.getContext()),b=g.drawBorder?g.borderWidth:0,p=b/2,f=function(t){return Object(n.t)(o,t,b)};let m,x,_,y,v,O,j,M,w,k,S,D;if(\"top\"===r)m=f(e.bottom),O=e.bottom-d,M=m-p,k=f(t.top)+p,D=t.bottom;else if(\"bottom\"===r)m=f(e.top),k=t.top,D=f(t.bottom)-p,O=m+p,M=e.top+d;else if(\"left\"===r)m=f(e.right),v=e.right-d,j=m-p,w=f(t.left)+p,S=t.right;else if(\"right\"===r)m=f(e.left),w=t.left,S=f(t.right)-p,v=m+p,j=e.left+d;else if(\"x\"===i){if(\"center\"===r)m=f((t.top+t.bottom)/2+.5);else if(Object(n.Cb)(r)){const t=Object.keys(r)[0],i=r[t];m=f(e.chart.scales[t].getPixelForValue(i))}k=t.top,D=t.bottom,O=m+p,M=O+d}else if(\"y\"===i){if(\"center\"===r)m=f((t.left+t.right)/2);else if(Object(n.Cb)(r)){const t=Object.keys(r)[0],i=r[t];m=f(e.chart.scales[t].getPixelForValue(i))}v=m-p,j=v-d,w=t.left,S=t.right}const P=Object(n.Pb)(s.ticks.maxTicksLimit,h),C=Math.max(1,Math.ceil(h/P));for(x=0;x<h;x+=C){const t=a.setContext(e.getContext(x)),i=t.lineWidth,s=t.color,r=a.borderDash||[],h=t.borderDashOffset,d=t.tickWidth,g=t.tickColor,b=t.tickBorderDash||[],p=t.tickBorderDashOffset;_=Pt(e,x,l),void 0!==_&&(y=Object(n.t)(o,_,i),c?v=j=w=S=y:O=M=k=D=y,u.push({tx1:v,ty1:O,tx2:j,ty2:M,x1:w,y1:k,x2:S,y2:D,width:i,color:s,borderDash:r,borderDashOffset:h,tickWidth:d,tickColor:g,tickBorderDash:b,tickBorderDashOffset:p}))}return e._ticksLength=h,e._borderValue=m,u}_computeLabelItems(t){const e=this,i=e.axis,o=e.options,{position:s,ticks:a}=o,r=e.isHorizontal(),l=e.ticks,{align:c,crossAlign:h,padding:d,mirror:u}=a,g=Ct(o.grid),b=g+d,p=u?-d:b,f=-Object(n.Nb)(e.labelRotation),m=[];let x,_,y,v,O,j,M,w,k,S,D,P,C=\"middle\";if(\"top\"===s)j=e.bottom-p,M=e._getXAxisLabelAlignment();else if(\"bottom\"===s)j=e.top+p,M=e._getXAxisLabelAlignment();else if(\"left\"===s){const t=e._getYAxisLabelAlignment(g);M=t.textAlign,O=t.x}else if(\"right\"===s){const t=e._getYAxisLabelAlignment(g);M=t.textAlign,O=t.x}else if(\"x\"===i){if(\"center\"===s)j=(t.top+t.bottom)/2+b;else if(Object(n.Cb)(s)){const t=Object.keys(s)[0],i=s[t];j=e.chart.scales[t].getPixelForValue(i)+b}M=e._getXAxisLabelAlignment()}else if(\"y\"===i){if(\"center\"===s)O=(t.left+t.right)/2-b;else if(Object(n.Cb)(s)){const t=Object.keys(s)[0],i=s[t];O=e.chart.scales[t].getPixelForValue(i)}M=e._getYAxisLabelAlignment(g).textAlign}\"y\"===i&&(\"start\"===c?C=\"top\":\"end\"===c&&(C=\"bottom\"));const A=e._getLabelSizes();for(x=0,_=l.length;x<_;++x){y=l[x],v=y.label;const t=a.setContext(e.getContext(x));w=e.getPixelForTick(x)+a.labelOffset,k=e._resolveTickFontOptions(x),S=k.lineHeight,D=Object(n.vb)(v)?v.length:1;const i=D/2,o=t.color,c=t.textStrokeColor,d=t.textStrokeWidth;let g;if(r?(O=w,P=\"top\"===s?\"near\"===h||0!==f?-D*S+S/2:\"center\"===h?-A.highest.height/2-i*S+S:-A.highest.height+S/2:\"near\"===h||0!==f?S/2:\"center\"===h?A.highest.height/2-i*S:A.highest.height-D*S,u&&(P*=-1)):(j=w,P=(1-D)*S/2),t.showLabelBackdrop){const e=Object(n.b)(t.backdropPadding),i=A.heights[x],o=A.widths[x];let s=j+P-e.top,a=O-e.left;switch(C){case\"middle\":s-=i/2;break;case\"bottom\":s-=i}switch(M){case\"center\":a-=o/2;break;case\"right\":a-=o}g={left:a,top:s,width:o+e.width,height:i+e.height,color:t.backdropColor}}m.push({rotation:f,label:v,font:k,color:o,strokeColor:c,strokeWidth:d,textOffset:P,textAlign:M,textBaseline:C,translation:[O,j],backdrop:g})}return m}_getXAxisLabelAlignment(){const{position:t,ticks:e}=this.options;if(-Object(n.Nb)(this.labelRotation))return\"top\"===t?\"left\":\"right\";let i=\"center\";return\"start\"===e.align?i=\"left\":\"end\"===e.align&&(i=\"right\"),i}_getYAxisLabelAlignment(t){const e=this,{position:i,ticks:{crossAlign:n,mirror:o,padding:s}}=e.options,a=t+s,r=e._getLabelSizes().widest.width;let l,c;return\"left\"===i?o?(c=e.right+s,\"near\"===n?l=\"left\":\"center\"===n?(l=\"center\",c+=r/2):(l=\"right\",c+=r)):(c=e.right-a,\"near\"===n?l=\"right\":\"center\"===n?(l=\"center\",c-=r/2):(l=\"left\",c=e.left)):\"right\"===i?o?(c=e.left+s,\"near\"===n?l=\"right\":\"center\"===n?(l=\"center\",c-=r/2):(l=\"left\",c-=r)):(c=e.left+a,\"near\"===n?l=\"left\":\"center\"===n?(l=\"center\",c+=r/2):(l=\"right\",c=e.right)):l=\"right\",{textAlign:l,x:c}}_computeLabelArea(){const t=this;if(t.options.ticks.mirror)return;const e=t.chart,i=t.options.position;return\"left\"===i||\"right\"===i?{top:0,left:t.left,bottom:e.height,right:t.right}:\"top\"===i||\"bottom\"===i?{top:t.top,left:0,bottom:t.bottom,right:e.width}:void 0}drawBackground(){const{ctx:t,options:{backgroundColor:e},left:i,top:n,width:o,height:s}=this;e&&(t.save(),t.fillStyle=e,t.fillRect(i,n,o,s),t.restore())}getLineWidthForValue(t){const e=this,i=e.options.grid;if(!e._isVisible()||!i.display)return 0;const n=e.ticks.findIndex((e=>e.value===t));if(n>=0){return i.setContext(e.getContext(n)).lineWidth}return 0}drawGrid(t){const e=this,i=e.options.grid,n=e.ctx,o=e._gridLineItems||(e._gridLineItems=e._computeGridLineItems(t));let s,a;const r=(t,e,i)=>{i.width&&i.color&&(n.save(),n.lineWidth=i.width,n.strokeStyle=i.color,n.setLineDash(i.borderDash||[]),n.lineDashOffset=i.borderDashOffset,n.beginPath(),n.moveTo(t.x,t.y),n.lineTo(e.x,e.y),n.stroke(),n.restore())};if(i.display)for(s=0,a=o.length;s<a;++s){const t=o[s];i.drawOnChartArea&&r({x:t.x1,y:t.y1},{x:t.x2,y:t.y2},t),i.drawTicks&&r({x:t.tx1,y:t.ty1},{x:t.tx2,y:t.ty2},{color:t.tickColor,width:t.tickWidth,borderDash:t.tickBorderDash,borderDashOffset:t.tickBorderDashOffset})}}drawBorder(){const t=this,{chart:e,ctx:i,options:{grid:o}}=t,s=o.setContext(t.getContext()),a=o.drawBorder?s.borderWidth:0;if(!a)return;const r=o.setContext(t.getContext(0)).lineWidth,l=t._borderValue;let c,h,d,u;t.isHorizontal()?(c=Object(n.t)(e,t.left,a)-a/2,h=Object(n.t)(e,t.right,r)+r/2,d=u=l):(d=Object(n.t)(e,t.top,a)-a/2,u=Object(n.t)(e,t.bottom,r)+r/2,c=h=l),i.save(),i.lineWidth=s.borderWidth,i.strokeStyle=s.borderColor,i.beginPath(),i.moveTo(c,d),i.lineTo(h,u),i.stroke(),i.restore()}drawLabels(t){const e=this;if(!e.options.ticks.display)return;const i=e.ctx,o=e._computeLabelArea();o&&Object(n.v)(i,o);const s=e._labelItems||(e._labelItems=e._computeLabelItems(t));let a,r;for(a=0,r=s.length;a<r;++a){const t=s[a],e=t.font,o=t.label;t.backdrop&&(i.fillStyle=t.backdrop.color,i.fillRect(t.backdrop.left,t.backdrop.top,t.backdrop.width,t.backdrop.height));let r=t.textOffset;Object(n.w)(i,o,0,r,e,t)}o&&Object(n.x)(i)}drawTitle(){const{ctx:t,options:{position:e,title:i,reverse:o}}=this;if(!i.display)return;const s=Object(n.y)(i.font),a=Object(n.b)(i.padding),r=i.align;let l=s.lineHeight/2;\"bottom\"===e||\"center\"===e||Object(n.Cb)(e)?(l+=a.bottom,Object(n.vb)(i.text)&&(l+=s.lineHeight*(i.text.length-1))):l+=a.top;const{titleX:c,titleY:h,maxWidth:d,rotation:u}=function(t,e,i,o){const{top:s,left:a,bottom:r,right:l,chart:c}=t,{chartArea:h,scales:d}=c;let u,g,b,p=0;const f=r-s,m=l-a;if(t.isHorizontal()){if(g=Object(n.A)(o,a,l),Object(n.Cb)(i)){const t=Object.keys(i)[0],n=i[t];b=d[t].getPixelForValue(n)+f-e}else b=\"center\"===i?(h.bottom+h.top)/2+f-e:St(t,i,e);u=l-a}else{if(Object(n.Cb)(i)){const t=Object.keys(i)[0],n=i[t];g=d[t].getPixelForValue(n)-m+e}else g=\"center\"===i?(h.left+h.right)/2-m+e:St(t,i,e);b=Object(n.A)(o,r,s),p=\"left\"===i?-n.i:n.i}return{titleX:g,titleY:b,maxWidth:u,rotation:p}}(this,l,e,r);Object(n.w)(t,i.text,0,0,s,{color:i.color,maxWidth:d,rotation:u,textAlign:Lt(r,e,o),textBaseline:\"middle\",translation:[c,h]})}draw(t){const e=this;e._isVisible()&&(e.drawBackground(),e.drawGrid(t),e.drawBorder(),e.drawTitle(),e.drawLabels(t))}_layers(){const t=this,e=t.options,i=e.ticks&&e.ticks.z||0,o=Object(n.Pb)(e.grid&&e.grid.z,-1);return t._isVisible()&&t.draw===Tt.prototype.draw?[{z:o,draw(e){t.drawBackground(),t.drawGrid(e),t.drawTitle()}},{z:o+1,draw(){t.drawBorder()}},{z:i,draw(e){t.drawLabels(e)}}]:[{z:i,draw(e){t.draw(e)}}]}getMatchingVisibleMetas(t){const e=this,i=e.chart.getSortedVisibleDatasetMetas(),n=e.axis+\"AxisID\",o=[];let s,a;for(s=0,a=i.length;s<a;++s){const a=i[s];a[n]!==e.id||t&&a.type!==t||o.push(a)}return o}_resolveTickFontOptions(t){const e=this.options.ticks.setContext(this.getContext(t));return Object(n.y)(e.font)}_maxDigits(){const t=this,e=t._resolveTickFontOptions(0).lineHeight;return(t.isHorizontal()?t.width:t.height)/e}}class Et{constructor(t,e,i){this.type=t,this.scope=e,this.override=i,this.items=Object.create(null)}isForType(t){return Object.prototype.isPrototypeOf.call(this.type.prototype,t.prototype)}register(t){const e=this,i=Object.getPrototypeOf(t);let o;(function(t){return\"id\"in t&&\"defaults\"in t})(i)&&(o=e.register(i));const s=e.items,a=t.id,r=e.scope+\".\"+a;if(!a)throw new Error(\"class does not have id: \"+t);return a in s||(s[a]=t,function(t,e,i){const o=Object(n.D)(Object.create(null),[i?n.xb.get(i):{},n.xb.get(e),t.defaults]);n.xb.set(e,o),t.defaultRoutes&&function(t,e){Object.keys(e).forEach((i=>{const o=i.split(\".\"),s=o.pop(),a=[t].concat(o).join(\".\"),r=e[i].split(\".\"),l=r.pop(),c=r.join(\".\");n.xb.route(a,s,c,l)}))}(e,t.defaultRoutes);t.descriptors&&n.xb.describe(e,t.descriptors)}(t,r,o),e.override&&n.xb.override(t.id,t.overrides)),r}get(t){return this.items[t]}unregister(t){const e=this.items,i=t.id,o=this.scope;i in e&&delete e[i],o&&i in n.xb[o]&&(delete n.xb[o][i],this.override&&delete n.a[i])}}var Rt=new class{constructor(){this.controllers=new Et(v,\"datasets\",!0),this.elements=new Et(Ot,\"elements\"),this.plugins=new Et(Object,\"plugins\"),this.scales=new Et(Tt,\"scales\"),this._typedRegistries=[this.controllers,this.scales,this.elements]}add(...t){this._each(\"register\",t)}remove(...t){this._each(\"unregister\",t)}addControllers(...t){this._each(\"register\",t,this.controllers)}addElements(...t){this._each(\"register\",t,this.elements)}addPlugins(...t){this._each(\"register\",t,this.plugins)}addScales(...t){this._each(\"register\",t,this.scales)}getController(t){return this._get(t,this.controllers,\"controller\")}getElement(t){return this._get(t,this.elements,\"element\")}getPlugin(t){return this._get(t,this.plugins,\"plugin\")}getScale(t){return this._get(t,this.scales,\"scale\")}removeControllers(...t){this._each(\"unregister\",t,this.controllers)}removeElements(...t){this._each(\"unregister\",t,this.elements)}removePlugins(...t){this._each(\"unregister\",t,this.plugins)}removeScales(...t){this._each(\"unregister\",t,this.scales)}_each(t,e,i){const o=this;[...e].forEach((e=>{const s=i||o._getRegistryForType(e);i||s.isForType(e)||s===o.plugins&&e.id?o._exec(t,s,e):Object(n.c)(e,(e=>{const n=i||o._getRegistryForType(e);o._exec(t,n,e)}))}))}_exec(t,e,i){const o=Object(n.E)(t);Object(n.n)(i[\"before\"+o],[],i),e[t](i),Object(n.n)(i[\"after\"+o],[],i)}_getRegistryForType(t){for(let e=0;e<this._typedRegistries.length;e++){const i=this._typedRegistries[e];if(i.isForType(t))return i}return this.plugins}_get(t,e,i){const n=e.get(t);if(void 0===n)throw new Error('\"'+t+'\" is not a registered '+i+\".\");return n}};class zt{constructor(){this._init=[]}notify(t,e,i,n){const o=this;\"beforeInit\"===e&&(o._init=o._createDescriptors(t,!0),o._notify(o._init,t,\"install\"));const s=n?o._descriptors(t).filter(n):o._descriptors(t),a=o._notify(s,t,e,i);return\"destroy\"===e&&(o._notify(s,t,\"stop\"),o._notify(o._init,t,\"uninstall\")),a}_notify(t,e,i,o){o=o||{};for(const s of t){const t=s.plugin,a=t[i],r=[e,o,s.options];if(!1===Object(n.n)(a,r,t)&&o.cancelable)return!1}return!0}invalidate(){Object(n.Db)(this._cache)||(this._oldCache=this._cache,this._cache=void 0)}_descriptors(t){if(this._cache)return this._cache;const e=this._cache=this._createDescriptors(t);return this._notifyStateChanges(t),e}_createDescriptors(t,e){const i=t&&t.config,o=Object(n.Pb)(i.options&&i.options.plugins,{}),s=function(t){const e=[],i=Object.keys(Rt.plugins.items);for(let o=0;o<i.length;o++)e.push(Rt.getPlugin(i[o]));const n=t.plugins||[];for(let o=0;o<n.length;o++){const t=n[o];-1===e.indexOf(t)&&e.push(t)}return e}(i);return!1!==o||e?function(t,e,i,n){const o=[],s=t.getContext();for(let a=0;a<e.length;a++){const r=e[a],l=Ft(i[r.id],n);null!==l&&o.push({plugin:r,options:It(t.config,r,l,s)})}return o}(t,s,o,e):[]}_notifyStateChanges(t){const e=this._oldCache||[],i=this._cache,n=(t,e)=>t.filter((t=>!e.some((e=>t.plugin.id===e.plugin.id))));this._notify(n(e,i),t,\"stop\"),this._notify(n(i,e),t,\"start\")}}function Ft(t,e){return e||!1!==t?!0===t?{}:t:null}function It(t,e,i,n){const o=t.pluginScopeKeys(e),s=t.getOptionScopes(i,o);return t.createResolver(s,n,[\"\"],{scriptable:!1,indexable:!1,allKeys:!0})}function Vt(t,e){const i=n.xb.datasets[t]||{};return((e.datasets||{})[t]||{}).indexAxis||e.indexAxis||i.indexAxis||\"x\"}function Bt(t,e){return\"x\"===t||\"y\"===t?t:e.axis||(\"top\"===(i=e.position)||\"bottom\"===i?\"x\":\"left\"===i||\"right\"===i?\"y\":void 0)||t.charAt(0).toLowerCase();var i}function Nt(t){const e=t.options||(t.options={});e.plugins=Object(n.Pb)(e.plugins,{}),e.scales=function(t,e){const i=n.a[t.type]||{scales:{}},o=e.scales||{},s=Vt(t.type,e),a=Object.create(null),r=Object.create(null);return Object.keys(o).forEach((t=>{const e=o[t],l=Bt(t,e),c=function(t,e){return t===e?\"_index_\":\"_value_\"}(l,s),h=i.scales||{};a[l]=a[l]||t,r[t]=Object(n.K)(Object.create(null),[{axis:l},e,h[l],h[c]])})),t.data.datasets.forEach((i=>{const s=i.type||t.type,l=i.indexAxis||Vt(s,e),c=(n.a[s]||{}).scales||{};Object.keys(c).forEach((t=>{const e=function(t,e){let i=t;return\"_index_\"===t?i=e:\"_value_\"===t&&(i=\"x\"===e?\"y\":\"x\"),i}(t,l),s=i[e+\"AxisID\"]||a[e]||e;r[s]=r[s]||Object.create(null),Object(n.K)(r[s],[{axis:e},o[s],c[t]])}))})),Object.keys(r).forEach((t=>{const e=r[t];Object(n.K)(e,[n.xb.scales[e.type],n.xb.scale])})),r}(t,e)}function Wt(t){return(t=t||{}).datasets=t.datasets||[],t.labels=t.labels||[],t}const Ht=new Map,$t=new Set;function Ut(t,e){let i=Ht.get(t);return i||(i=e(),Ht.set(t,i),$t.add(i)),i}const Yt=(t,e,i)=>{const o=Object(n.zb)(e,i);void 0!==o&&t.add(o)};class Kt{constructor(t){this._config=function(t){return(t=t||{}).data=Wt(t.data),Nt(t),t}(t),this._scopeCache=new Map,this._resolverCache=new Map}get platform(){return this._config.platform}get type(){return this._config.type}set type(t){this._config.type=t}get data(){return this._config.data}set data(t){this._config.data=Wt(t)}get options(){return this._config.options}set options(t){this._config.options=t}get plugins(){return this._config.plugins}update(){const t=this._config;this.clearCache(),Nt(t)}clearCache(){this._scopeCache.clear(),this._resolverCache.clear()}datasetScopeKeys(t){return Ut(t,(()=>[[`datasets.${t}`,\"\"]]))}datasetAnimationScopeKeys(t,e){return Ut(`${t}.transition.${e}`,(()=>[[`datasets.${t}.transitions.${e}`,`transitions.${e}`],[`datasets.${t}`,\"\"]]))}datasetElementScopeKeys(t,e){return Ut(`${t}-${e}`,(()=>[[`datasets.${t}.elements.${e}`,`datasets.${t}`,`elements.${e}`,\"\"]]))}pluginScopeKeys(t){const e=t.id;return Ut(`${this.type}-plugin-${e}`,(()=>[[`plugins.${e}`,...t.additionalOptionScopes||[]]]))}_cachedScopes(t,e){const i=this._scopeCache;let n=i.get(t);return n&&!e||(n=new Map,i.set(t,n)),n}getOptionScopes(t,e,i){const{options:o,type:s}=this,a=this._cachedScopes(t,i),r=a.get(e);if(r)return r;const l=new Set;e.forEach((e=>{t&&(l.add(t),e.forEach((e=>Yt(l,t,e)))),e.forEach((t=>Yt(l,o,t))),e.forEach((t=>Yt(l,n.a[s]||{},t))),e.forEach((t=>Yt(l,n.xb,t))),e.forEach((t=>Yt(l,n.F,t)))}));const c=Array.from(l);return 0===c.length&&c.push(Object.create(null)),$t.has(e)&&a.set(e,c),c}chartOptionScopes(){const{options:t,type:e}=this;return[t,n.a[e]||{},n.xb.datasets[e]||{},{type:e},n.xb,n.F]}resolveNamedOptions(t,e,i,o=[\"\"]){const s={$shared:!0},{resolver:a,subPrefixes:r}=Xt(this._resolverCache,t,o);let l=a;if(function(t,e){const{isScriptable:i,isIndexable:o}=Object(n.J)(t);for(const s of e)if(i(s)&&Object(n.G)(t[s])||o(s)&&Object(n.vb)(t[s]))return!0;return!1}(a,e)){s.$shared=!1,i=Object(n.G)(i)?i():i;const e=this.createResolver(t,i,r);l=Object(n.H)(a,i,e)}for(const n of e)s[n]=l[n];return s}createResolver(t,e,i=[\"\"],o){const{resolver:s}=Xt(this._resolverCache,t,i);return Object(n.Cb)(e)?Object(n.H)(s,e,void 0,o):s}}function Xt(t,e,i){let o=t.get(e);o||(o=new Map,t.set(e,o));const s=i.join();let a=o.get(s);if(!a){a={resolver:Object(n.I)(e,i),subPrefixes:i.filter((t=>!t.toLowerCase().includes(\"hover\")))},o.set(s,a)}return a}const qt=[\"top\",\"bottom\",\"left\",\"right\",\"chartArea\"];function Gt(t,e){return\"top\"===t||\"bottom\"===t||-1===qt.indexOf(t)&&\"x\"===e}function Jt(t,e){return function(i,n){return i[t]===n[t]?i[e]-n[e]:i[t]-n[t]}}function Qt(t){const e=t.chart,i=e.options.animation;e.notifyPlugins(\"afterRender\"),Object(n.n)(i&&i.onComplete,[t],e)}function Zt(t){const e=t.chart,i=e.options.animation;Object(n.n)(i&&i.onProgress,[t],e)}function te(t){return Object(n.j)()&&\"string\"===typeof t?t=document.getElementById(t):t&&t.length&&(t=t[0]),t&&t.canvas&&(t=t.canvas),t}const ee={},ie=t=>{const e=te(t);return Object.values(ee).filter((t=>t.canvas===e)).pop()};class ne{constructor(t,e){const i=this,s=this.config=new Kt(e),a=te(t),r=ie(a);if(r)throw new Error(\"Canvas is already in use. Chart with ID '\"+r.id+\"' must be destroyed before the canvas can be reused.\");const l=s.createResolver(s.chartOptionScopes(),i.getContext());this.platform=new(s.platform||function(t){return!Object(n.j)()||\"undefined\"!==typeof OffscreenCanvas&&t instanceof OffscreenCanvas?lt:vt}(a));const c=i.platform.acquireContext(a,l.aspectRatio),h=c&&c.canvas,d=h&&h.height,u=h&&h.width;this.id=Object(n.L)(),this.ctx=c,this.canvas=h,this.width=u,this.height=d,this._options=l,this._aspectRatio=this.aspectRatio,this._layers=[],this._metasets=[],this._stacks=void 0,this.boxes=[],this.currentDevicePixelRatio=void 0,this.chartArea=void 0,this._active=[],this._lastEvent=void 0,this._listeners={},this._responsiveListeners=void 0,this._sortedMetasets=[],this.scales={},this._plugins=new zt,this.$proxies={},this._hiddenIndices={},this.attached=!1,this._animationsDisabled=void 0,this.$context=void 0,this._doResize=Object(n.M)((()=>this.update(\"resize\")),l.resizeDelay||0),ee[i.id]=i,c&&h?(o.listen(i,\"complete\",Qt),o.listen(i,\"progress\",Zt),i._initialize(),i.attached&&i.update()):console.error(\"Failed to create chart: can't acquire context from the given item\")}get aspectRatio(){const{options:{aspectRatio:t,maintainAspectRatio:e},width:i,height:o,_aspectRatio:s}=this;return Object(n.Db)(t)?e&&s?s:o?i/o:null:t}get data(){return this.config.data}set data(t){this.config.data=t}get options(){return this._options}set options(t){this.config.options=t}_initialize(){const t=this;return t.notifyPlugins(\"beforeInit\"),t.options.responsive?t.resize():Object(n.V)(t,t.options.devicePixelRatio),t.bindEvents(),t.notifyPlugins(\"afterInit\"),t}clear(){return Object(n.W)(this.canvas,this.ctx),this}stop(){return o.stop(this),this}resize(t,e){o.running(this)?this._resizeBeforeDraw={width:t,height:e}:this._resize(t,e)}_resize(t,e){const i=this,o=i.options,s=i.canvas,a=o.maintainAspectRatio&&i.aspectRatio,r=i.platform.getMaximumSize(s,t,e,a),l=o.devicePixelRatio||i.platform.getDevicePixelRatio();i.width=r.width,i.height=r.height,i._aspectRatio=i.aspectRatio,Object(n.V)(i,l,!0)&&(i.notifyPlugins(\"resize\",{size:r}),Object(n.n)(o.onResize,[i,r],i),i.attached&&i._doResize()&&i.render())}ensureScalesHaveIDs(){const t=this.options.scales||{};Object(n.c)(t,((t,e)=>{t.id=e}))}buildOrUpdateScales(){const t=this,e=t.options,i=e.scales,o=t.scales,s=Object.keys(o).reduce(((t,e)=>(t[e]=!1,t)),{});let a=[];i&&(a=a.concat(Object.keys(i).map((t=>{const e=i[t],n=Bt(t,e),o=\"r\"===n,s=\"x\"===n;return{options:e,dposition:o?\"chartArea\":s?\"bottom\":\"left\",dtype:o?\"radialLinear\":s?\"category\":\"linear\"}})))),Object(n.c)(a,(i=>{const a=i.options,r=a.id,l=Bt(r,a),c=Object(n.Pb)(a.type,i.dtype);void 0!==a.position&&Gt(a.position,l)===Gt(i.dposition)||(a.position=i.dposition),s[r]=!0;let h=null;if(r in o&&o[r].type===c)h=o[r];else{h=new(Rt.getScale(c))({id:r,type:c,ctx:t.ctx,chart:t}),o[h.id]=h}h.init(a,e)})),Object(n.c)(s,((t,e)=>{t||delete o[e]})),Object(n.c)(o,(e=>{at.configure(t,e,e.options),at.addBox(t,e)}))}_updateMetasets(){const t=this,e=t._metasets,i=t.data.datasets.length,n=e.length;if(e.sort(((t,e)=>t.index-e.index)),n>i){for(let e=i;e<n;++e)t._destroyDatasetMeta(e);e.splice(i,n-i)}t._sortedMetasets=e.slice(0).sort(Jt(\"order\",\"index\"))}_removeUnreferencedMetasets(){const t=this,{_metasets:e,data:{datasets:i}}=t;e.length>i.length&&delete t._stacks,e.forEach(((e,n)=>{0===i.filter((t=>t===e._dataset)).length&&t._destroyDatasetMeta(n)}))}buildOrUpdateControllers(){const t=this,e=[],i=t.data.datasets;let o,s;for(t._removeUnreferencedMetasets(),o=0,s=i.length;o<s;o++){const s=i[o];let a=t.getDatasetMeta(o);const r=s.type||t.config.type;if(a.type&&a.type!==r&&(t._destroyDatasetMeta(o),a=t.getDatasetMeta(o)),a.type=r,a.indexAxis=s.indexAxis||Vt(r,t.options),a.order=s.order||0,a.index=o,a.label=\"\"+s.label,a.visible=t.isDatasetVisible(o),a.controller)a.controller.updateIndex(o),a.controller.linkScales();else{const i=Rt.getController(r),{datasetElementType:s,dataElementType:l}=n.xb.datasets[r];Object.assign(i.prototype,{dataElementType:Rt.getElement(l),datasetElementType:s&&Rt.getElement(s)}),a.controller=new i(t,o),e.push(a.controller)}}return t._updateMetasets(),e}_resetElements(){const t=this;Object(n.c)(t.data.datasets,((e,i)=>{t.getDatasetMeta(i).controller.reset()}),t)}reset(){this._resetElements(),this.notifyPlugins(\"reset\")}update(t){const e=this,i=e.config;i.update(),e._options=i.createResolver(i.chartOptionScopes(),e.getContext()),Object(n.c)(e.scales,(t=>{at.removeBox(e,t)}));const o=e._animationsDisabled=!e.options.animation;e.ensureScalesHaveIDs(),e.buildOrUpdateScales();const s=new Set(Object.keys(e._listeners)),a=new Set(e.options.events);if(Object(n.X)(s,a)&&!!this._responsiveListeners===e.options.responsive||(e.unbindEvents(),e.bindEvents()),e._plugins.invalidate(),!1===e.notifyPlugins(\"beforeUpdate\",{mode:t,cancelable:!0}))return;const r=e.buildOrUpdateControllers();e.notifyPlugins(\"beforeElementsUpdate\");let l=0;for(let n=0,c=e.data.datasets.length;n<c;n++){const{controller:t}=e.getDatasetMeta(n),i=!o&&-1===r.indexOf(t);t.buildOrUpdateElements(i),l=Math.max(+t.getMaxOverflow(),l)}e._minPadding=l,e._updateLayout(l),o||Object(n.c)(r,(t=>{t.reset()})),e._updateDatasets(t),e.notifyPlugins(\"afterUpdate\",{mode:t}),e._layers.sort(Jt(\"z\",\"_idx\")),e._lastEvent&&e._eventHandler(e._lastEvent,!0),e.render()}_updateLayout(t){const e=this;if(!1===e.notifyPlugins(\"beforeLayout\",{cancelable:!0}))return;at.update(e,e.width,e.height,t);const i=e.chartArea,o=i.width<=0||i.height<=0;e._layers=[],Object(n.c)(e.boxes,(t=>{o&&\"chartArea\"===t.position||(t.configure&&t.configure(),e._layers.push(...t._layers()))}),e),e._layers.forEach(((t,e)=>{t._idx=e})),e.notifyPlugins(\"afterLayout\")}_updateDatasets(t){const e=this,i=\"function\"===typeof t;if(!1!==e.notifyPlugins(\"beforeDatasetsUpdate\",{mode:t,cancelable:!0})){for(let n=0,o=e.data.datasets.length;n<o;++n)e._updateDataset(n,i?t({datasetIndex:n}):t);e.notifyPlugins(\"afterDatasetsUpdate\",{mode:t})}}_updateDataset(t,e){const i=this,n=i.getDatasetMeta(t),o={meta:n,index:t,mode:e,cancelable:!0};!1!==i.notifyPlugins(\"beforeDatasetUpdate\",o)&&(n.controller._update(e),o.cancelable=!1,i.notifyPlugins(\"afterDatasetUpdate\",o))}render(){const t=this;!1!==t.notifyPlugins(\"beforeRender\",{cancelable:!0})&&(o.has(t)?t.attached&&!o.running(t)&&o.start(t):(t.draw(),Qt({chart:t})))}draw(){const t=this;let e;if(t._resizeBeforeDraw){const{width:e,height:i}=t._resizeBeforeDraw;t._resize(e,i),t._resizeBeforeDraw=null}if(t.clear(),t.width<=0||t.height<=0)return;if(!1===t.notifyPlugins(\"beforeDraw\",{cancelable:!0}))return;const i=t._layers;for(e=0;e<i.length&&i[e].z<=0;++e)i[e].draw(t.chartArea);for(t._drawDatasets();e<i.length;++e)i[e].draw(t.chartArea);t.notifyPlugins(\"afterDraw\")}_getSortedDatasetMetas(t){const e=this._sortedMetasets,i=[];let n,o;for(n=0,o=e.length;n<o;++n){const o=e[n];t&&!o.visible||i.push(o)}return i}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(!0)}_drawDatasets(){const t=this;if(!1===t.notifyPlugins(\"beforeDatasetsDraw\",{cancelable:!0}))return;const e=t.getSortedVisibleDatasetMetas();for(let i=e.length-1;i>=0;--i)t._drawDataset(e[i]);t.notifyPlugins(\"afterDatasetsDraw\")}_drawDataset(t){const e=this,i=e.ctx,o=t._clip,s=!o.disabled,a=e.chartArea,r={meta:t,index:t.index,cancelable:!0};!1!==e.notifyPlugins(\"beforeDatasetDraw\",r)&&(s&&Object(n.v)(i,{left:!1===o.left?0:a.left-o.left,right:!1===o.right?e.width:a.right+o.right,top:!1===o.top?0:a.top-o.top,bottom:!1===o.bottom?e.height:a.bottom+o.bottom}),t.controller.draw(),s&&Object(n.x)(i),r.cancelable=!1,e.notifyPlugins(\"afterDatasetDraw\",r))}getElementsAtEventForMode(t,e,i,n){const o=K.modes[e];return\"function\"===typeof o?o(this,t,i,n):[]}getDatasetMeta(t){const e=this.data.datasets[t],i=this._metasets;let n=i.filter((t=>t&&t._dataset===e)).pop();return n||(n={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:e&&e.order||0,index:t,_dataset:e,_parsed:[],_sorted:!1},i.push(n)),n}getContext(){return this.$context||(this.$context={chart:this,type:\"chart\"})}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length}isDatasetVisible(t){const e=this.data.datasets[t];if(!e)return!1;const i=this.getDatasetMeta(t);return\"boolean\"===typeof i.hidden?!i.hidden:!e.hidden}setDatasetVisibility(t,e){this.getDatasetMeta(t).hidden=!e}toggleDataVisibility(t){this._hiddenIndices[t]=!this._hiddenIndices[t]}getDataVisibility(t){return!this._hiddenIndices[t]}_updateVisibility(t,e,i){const o=this,s=i?\"show\":\"hide\",a=o.getDatasetMeta(t),r=a.controller._resolveAnimations(void 0,s);Object(n.Bb)(e)?(a.data[e].hidden=!i,o.update()):(o.setDatasetVisibility(t,i),r.update(a,{visible:i}),o.update((e=>e.datasetIndex===t?s:void 0)))}hide(t,e){this._updateVisibility(t,e,!1)}show(t,e){this._updateVisibility(t,e,!0)}_destroyDatasetMeta(t){const e=this,i=e._metasets&&e._metasets[t];i&&i.controller&&(i.controller._destroy(),delete e._metasets[t])}destroy(){const t=this,{canvas:e,ctx:i}=t;let s,a;for(t.stop(),o.remove(t),s=0,a=t.data.datasets.length;s<a;++s)t._destroyDatasetMeta(s);t.config.clearCache(),e&&(t.unbindEvents(),Object(n.W)(e,i),t.platform.releaseContext(i),t.canvas=null,t.ctx=null),t.notifyPlugins(\"destroy\"),delete ee[t.id]}toBase64Image(...t){return this.canvas.toDataURL(...t)}bindEvents(){this.bindUserEvents(),this.options.responsive?this.bindResponsiveEvents():this.attached=!0}bindUserEvents(){const t=this,e=t._listeners,i=t.platform,o=function(e,i,n){e.offsetX=i,e.offsetY=n,t._eventHandler(e)};Object(n.c)(t.options.events,(n=>((n,o)=>{i.addEventListener(t,n,o),e[n]=o})(n,o)))}bindResponsiveEvents(){const t=this;t._responsiveListeners||(t._responsiveListeners={});const e=t._responsiveListeners,i=t.platform,n=(n,o)=>{i.addEventListener(t,n,o),e[n]=o},o=(n,o)=>{e[n]&&(i.removeEventListener(t,n,o),delete e[n])},s=(e,i)=>{t.canvas&&t.resize(e,i)};let a;const r=()=>{o(\"attach\",r),t.attached=!0,t.resize(),n(\"resize\",s),n(\"detach\",a)};a=()=>{t.attached=!1,o(\"resize\",s),n(\"attach\",r)},i.isAttached(t.canvas)?r():a()}unbindEvents(){const t=this;Object(n.c)(t._listeners,((e,i)=>{t.platform.removeEventListener(t,i,e)})),t._listeners={},Object(n.c)(t._responsiveListeners,((e,i)=>{t.platform.removeEventListener(t,i,e)})),t._responsiveListeners=void 0}updateHoverStyle(t,e,i){const n=i?\"set\":\"remove\";let o,s,a,r;for(\"dataset\"===e&&(o=this.getDatasetMeta(t[0].datasetIndex),o.controller[\"_\"+n+\"DatasetHoverStyle\"]()),a=0,r=t.length;a<r;++a){s=t[a];const e=s&&this.getDatasetMeta(s.datasetIndex).controller;e&&e[n+\"HoverStyle\"](s.element,s.datasetIndex,s.index)}}getActiveElements(){return this._active||[]}setActiveElements(t){const e=this,i=e._active||[],o=t.map((({datasetIndex:t,index:i})=>{const n=e.getDatasetMeta(t);if(!n)throw new Error(\"No dataset found at index \"+t);return{datasetIndex:t,element:n.data[i],index:i}}));!Object(n.Y)(o,i)&&(e._active=o,e._updateHoverStyles(o,i))}notifyPlugins(t,e,i){return this._plugins.notify(this,t,e,i)}_updateHoverStyles(t,e,i){const n=this,o=n.options.hover,s=(t,e)=>t.filter((t=>!e.some((e=>t.datasetIndex===e.datasetIndex&&t.index===e.index)))),a=s(e,t),r=i?t:s(t,e);a.length&&n.updateHoverStyle(a,o.mode,!1),r.length&&o.mode&&n.updateHoverStyle(r,o.mode,!0)}_eventHandler(t,e){const i=this,n={event:t,replay:e,cancelable:!0},o=e=>(e.options.events||this.options.events).includes(t.type);if(!1===i.notifyPlugins(\"beforeEvent\",n,o))return;const s=i._handleEvent(t,e);return n.cancelable=!1,i.notifyPlugins(\"afterEvent\",n,o),(s||n.changed)&&i.render(),i}_handleEvent(t,e){const i=this,{_active:o=[],options:s}=i,a=s.hover,r=e;let l=[],c=!1,h=null;return\"mouseout\"!==t.type&&(l=i.getElementsAtEventForMode(t,a.mode,a,r),h=\"click\"===t.type?i._lastEvent:t),i._lastEvent=null,Object(n.Sb)(t,i.chartArea,i._minPadding)&&(Object(n.n)(s.onHover,[t,l,i],i),\"mouseup\"!==t.type&&\"click\"!==t.type&&\"contextmenu\"!==t.type||Object(n.n)(s.onClick,[t,l,i],i)),c=!Object(n.Y)(l,o),(c||e)&&(i._active=l,i._updateHoverStyles(l,o,e)),i._lastEvent=h,c}}const oe=()=>Object(n.c)(ne.instances,(t=>t._plugins.invalidate())),se=!0;function ae(t,e,i){const{startAngle:o,pixelMargin:s,x:a,y:r,outerRadius:l,innerRadius:c}=e;let h=s/l;t.beginPath(),t.arc(a,r,l,o-h,i+h),c>s?(h=s/c,t.arc(a,r,c,i+h,o-h,!0)):t.arc(a,r,s,i+n.i,o-n.i),t.closePath(),t.clip()}function re(t,e,i,o){const s=(a=t.options.borderRadius,Object(n.ab)(a,[\"outerStart\",\"outerEnd\",\"innerStart\",\"innerEnd\"]));var a;const r=(i-e)/2,l=Math.min(r,o*e/2),c=t=>{const e=(i-Math.min(r,t))*o/2;return Object(n.Kb)(t,0,Math.min(r,e))};return{outerStart:c(s.outerStart),outerEnd:c(s.outerEnd),innerStart:Object(n.Kb)(s.innerStart,0,l),innerEnd:Object(n.Kb)(s.innerEnd,0,l)}}function le(t,e,i,n){return{x:i+t*Math.cos(e),y:n+t*Math.sin(e)}}function ce(t,e,i,o,s){const{x:a,y:r,startAngle:l,pixelMargin:c,innerRadius:h}=e,d=Math.max(e.outerRadius+o+i-c,0),u=h>0?h+o+i+c:0;let g=0;const b=s-l;if(o){const t=((h>0?h-o:0)+(d>0?d-o:0))/2;g=(b-(0!==t?b*t/(t+o):b))/2}const p=(b-Math.max(.001,b*d-i/n.q)/d)/2,f=l+p+g,m=s-p-g,{outerStart:x,outerEnd:_,innerStart:y,innerEnd:v}=re(e,u,d,m-f),O=d-x,j=d-_,M=f+x/O,w=m-_/j,k=u+y,S=u+v,D=f+y/k,P=m-v/S;if(t.beginPath(),t.arc(a,r,d,M,w),_>0){const e=le(j,w,a,r);t.arc(e.x,e.y,_,w,m+n.i)}const C=le(S,m,a,r);if(t.lineTo(C.x,C.y),v>0){const e=le(S,P,a,r);t.arc(e.x,e.y,v,m+n.i,P+Math.PI)}if(t.arc(a,r,u,m-v/u,f+y/u,!0),y>0){const e=le(k,D,a,r);t.arc(e.x,e.y,y,D+Math.PI,f-n.i)}const A=le(O,f,a,r);if(t.lineTo(A.x,A.y),x>0){const e=le(O,M,a,r);t.arc(e.x,e.y,x,f-n.i,M)}t.closePath()}function he(t,e,i,o,s){const{options:a}=e,r=\"inner\"===a.borderAlign;a.borderWidth&&(r?(t.lineWidth=2*a.borderWidth,t.lineJoin=\"round\"):(t.lineWidth=a.borderWidth,t.lineJoin=\"bevel\"),e.fullCircles&&function(t,e,i){const{x:o,y:s,startAngle:a,pixelMargin:r,fullCircles:l}=e,c=Math.max(e.outerRadius-r,0),h=e.innerRadius+r;let d;for(i&&ae(t,e,a+n.u),t.beginPath(),t.arc(o,s,h,a+n.u,a,!0),d=0;d<l;++d)t.stroke();for(t.beginPath(),t.arc(o,s,c,a,a+n.u),d=0;d<l;++d)t.stroke()}(t,e,r),r&&ae(t,e,s),ce(t,e,i,o,s),t.stroke())}Object.defineProperties(ne,{defaults:{enumerable:se,value:n.xb},instances:{enumerable:se,value:ee},overrides:{enumerable:se,value:n.a},registry:{enumerable:se,value:Rt},version:{enumerable:se,value:\"3.5.1\"},getChart:{enumerable:se,value:ie},register:{enumerable:se,value:(...t)=>{Rt.add(...t),oe()}},unregister:{enumerable:se,value:(...t)=>{Rt.remove(...t),oe()}}});class de extends Ot{constructor(t){super(),this.options=void 0,this.circumference=void 0,this.startAngle=void 0,this.endAngle=void 0,this.innerRadius=void 0,this.outerRadius=void 0,this.pixelMargin=0,this.fullCircles=0,t&&Object.assign(this,t)}inRange(t,e,i){const o=this.getProps([\"x\",\"y\"],i),{angle:s,distance:a}=Object(n.Z)(o,{x:t,y:e}),{startAngle:r,endAngle:l,innerRadius:c,outerRadius:h,circumference:d}=this.getProps([\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\",\"circumference\"],i),u=this.options.spacing/2;return(d>=n.u||Object(n.Ib)(s,r,l))&&(a>=c+u&&a<=h+u)}getCenterPoint(t){const{x:e,y:i,startAngle:n,endAngle:o,innerRadius:s,outerRadius:a}=this.getProps([\"x\",\"y\",\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\",\"circumference\"],t),{offset:r,spacing:l}=this.options,c=(n+o)/2,h=(s+a+l+r)/2;return{x:e+Math.cos(c)*h,y:i+Math.sin(c)*h}}tooltipPosition(t){return this.getCenterPoint(t)}draw(t){const e=this,{options:i,circumference:o}=e,s=(i.offset||0)/2,a=(i.spacing||0)/2;if(e.pixelMargin=\"inner\"===i.borderAlign?.33:0,e.fullCircles=o>n.u?Math.floor(o/n.u):0,0===o||e.innerRadius<0||e.outerRadius<0)return;t.save();let r=0;if(s){r=s/2;const i=(e.startAngle+e.endAngle)/2;t.translate(Math.cos(i)*r,Math.sin(i)*r),e.circumference>=n.q&&(r=s)}t.fillStyle=i.backgroundColor,t.strokeStyle=i.borderColor;const l=function(t,e,i,o){const{fullCircles:s,startAngle:a,circumference:r}=e;let l=e.endAngle;if(s){ce(t,e,i,o,a+n.u);for(let e=0;e<s;++e)t.fill();isNaN(r)||(l=a+r%n.u,r%n.u===0&&(l+=n.u))}return ce(t,e,i,o,l),t.fill(),l}(t,e,r,a);he(t,e,r,a,l),t.restore()}}function ue(t,e,i=e){t.lineCap=Object(n.Pb)(i.borderCapStyle,e.borderCapStyle),t.setLineDash(Object(n.Pb)(i.borderDash,e.borderDash)),t.lineDashOffset=Object(n.Pb)(i.borderDashOffset,e.borderDashOffset),t.lineJoin=Object(n.Pb)(i.borderJoinStyle,e.borderJoinStyle),t.lineWidth=Object(n.Pb)(i.borderWidth,e.borderWidth),t.strokeStyle=Object(n.Pb)(i.borderColor,e.borderColor)}function ge(t,e,i){t.lineTo(i.x,i.y)}function be(t,e,i={}){const n=t.length,{start:o=0,end:s=n-1}=i,{start:a,end:r}=e,l=Math.max(o,a),c=Math.min(s,r),h=o<a&&s<a||o>r&&s>r;return{count:n,start:l,loop:e.loop,ilen:c<l&&!h?n+c-l:c-l}}function pe(t,e,i,o){const{points:s,options:a}=e,{count:r,start:l,loop:c,ilen:h}=be(s,i,o),d=function(t){return t.stepped?n.hb:t.tension||\"monotone\"===t.cubicInterpolationMode?n.ib:ge}(a);let u,g,b,{move:p=!0,reverse:f}=o||{};for(u=0;u<=h;++u)g=s[(l+(f?h-u:u))%r],g.skip||(p?(t.moveTo(g.x,g.y),p=!1):d(t,b,g,f,a.stepped),b=g);return c&&(g=s[(l+(f?h:0))%r],d(t,b,g,f,a.stepped)),!!c}function fe(t,e,i,n){const o=e.points,{count:s,start:a,ilen:r}=be(o,i,n),{move:l=!0,reverse:c}=n||{};let h,d,u,g,b,p,f=0,m=0;const x=t=>(a+(c?r-t:t))%s,_=()=>{g!==b&&(t.lineTo(f,b),t.lineTo(f,g),t.lineTo(f,p))};for(l&&(d=o[x(0)],t.moveTo(d.x,d.y)),h=0;h<=r;++h){if(d=o[x(h)],d.skip)continue;const e=d.x,i=d.y,n=0|e;n===u?(i<g?g=i:i>b&&(b=i),f=(m*f+e)/++m):(_(),t.lineTo(e,i),u=n,m=0,g=b=i),p=i}_()}function me(t){const e=t.options,i=e.borderDash&&e.borderDash.length;return!t._decimated&&!t._loop&&!e.tension&&\"monotone\"!==e.cubicInterpolationMode&&!e.stepped&&!i?fe:pe}de.id=\"arc\",de.defaults={borderAlign:\"center\",borderColor:\"#fff\",borderRadius:0,borderWidth:2,offset:0,spacing:0,angle:void 0},de.defaultRoutes={backgroundColor:\"backgroundColor\"};const xe=\"function\"===typeof Path2D;function _e(t,e,i,n){xe&&1===e.segments.length?function(t,e,i,n){let o=e._path;o||(o=e._path=new Path2D,e.path(o,i,n)&&o.closePath()),ue(t,e.options),t.stroke(o)}(t,e,i,n):function(t,e,i,n){const{segments:o,options:s}=e,a=me(e);for(const r of o)ue(t,s,r.style),t.beginPath(),a(t,e,r,{start:i,end:i+n-1})&&t.closePath(),t.stroke()}(t,e,i,n)}class ye extends Ot{constructor(t){super(),this.animated=!0,this.options=void 0,this._loop=void 0,this._fullLoop=void 0,this._path=void 0,this._points=void 0,this._segments=void 0,this._decimated=!1,this._pointsUpdated=!1,this._datasetIndex=void 0,t&&Object.assign(this,t)}updateControlPoints(t,e){const i=this,o=i.options;if((o.tension||\"monotone\"===o.cubicInterpolationMode)&&!o.stepped&&!i._pointsUpdated){const s=o.spanGaps?i._loop:i._fullLoop;Object(n.bb)(i._points,o,t,s,e),i._pointsUpdated=!0}}set points(t){const e=this;e._points=t,delete e._segments,delete e._path,e._pointsUpdated=!1}get points(){return this._points}get segments(){return this._segments||(this._segments=Object(n.cb)(this,this.options.segment))}first(){const t=this.segments,e=this.points;return t.length&&e[t[0].start]}last(){const t=this.segments,e=this.points,i=t.length;return i&&e[t[i-1].end]}interpolate(t,e){const i=this,o=i.options,s=t[e],a=i.points,r=Object(n.db)(i,{property:e,start:s,end:s});if(!r.length)return;const l=[],c=function(t){return t.stepped?n.eb:t.tension||\"monotone\"===t.cubicInterpolationMode?n.fb:n.gb}(o);let h,d;for(h=0,d=r.length;h<d;++h){const{start:i,end:n}=r[h],d=a[i],u=a[n];if(d===u){l.push(d);continue}const g=c(d,u,Math.abs((s-d[e])/(u[e]-d[e])),o.stepped);g[e]=t[e],l.push(g)}return 1===l.length?l[0]:l}pathSegment(t,e,i){return me(this)(t,this,e,i)}path(t,e,i){const n=this,o=n.segments,s=me(n);let a=n._loop;e=e||0,i=i||n.points.length-e;for(const r of o)a&=s(t,n,r,{start:e,end:e+i-1});return!!a}draw(t,e,i,n){const o=this,s=o.options||{};(o.points||[]).length&&s.borderWidth&&(t.save(),_e(t,o,i,n),t.restore(),o.animated&&(o._pointsUpdated=!1,o._path=void 0))}}function ve(t,e,i,n){const o=t.options,{[i]:s}=t.getProps([i],n);return Math.abs(e-s)<o.radius+o.hitRadius}ye.id=\"line\",ye.defaults={borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0,borderJoinStyle:\"miter\",borderWidth:3,capBezierPoints:!0,cubicInterpolationMode:\"default\",fill:!1,spanGaps:!1,stepped:!1,tension:0},ye.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"},ye.descriptors={_scriptable:!0,_indexable:t=>\"borderDash\"!==t&&\"fill\"!==t};class Oe extends Ot{constructor(t){super(),this.options=void 0,this.parsed=void 0,this.skip=void 0,this.stop=void 0,t&&Object.assign(this,t)}inRange(t,e,i){const n=this.options,{x:o,y:s}=this.getProps([\"x\",\"y\"],i);return Math.pow(t-o,2)+Math.pow(e-s,2)<Math.pow(n.hitRadius+n.radius,2)}inXRange(t,e){return ve(this,t,\"x\",e)}inYRange(t,e){return ve(this,t,\"y\",e)}getCenterPoint(t){const{x:e,y:i}=this.getProps([\"x\",\"y\"],t);return{x:e,y:i}}size(t){let e=(t=t||this.options||{}).radius||0;e=Math.max(e,e&&t.hoverRadius||0);return 2*(e+(e&&t.borderWidth||0))}draw(t,e){const i=this,o=i.options;i.skip||o.radius<.1||!Object(n.Sb)(i,e,i.size(o)/2)||(t.strokeStyle=o.borderColor,t.lineWidth=o.borderWidth,t.fillStyle=o.backgroundColor,Object(n.jb)(t,o,i.x,i.y))}getRange(){const t=this.options||{};return t.radius+t.hitRadius}}function je(t,e){const{x:i,y:n,base:o,width:s,height:a}=t.getProps([\"x\",\"y\",\"base\",\"width\",\"height\"],e);let r,l,c,h,d;return t.horizontal?(d=a/2,r=Math.min(i,o),l=Math.max(i,o),c=n-d,h=n+d):(d=s/2,r=i-d,l=i+d,c=Math.min(n,o),h=Math.max(n,o)),{left:r,top:c,right:l,bottom:h}}function Me(t,e,i,o){return t?0:Object(n.Kb)(e,i,o)}function we(t){const e=je(t),i=e.right-e.left,o=e.bottom-e.top,s=function(t,e,i){const o=t.options.borderWidth,s=t.borderSkipped,a=Object(n.lb)(o);return{t:Me(s.top,a.top,0,i),r:Me(s.right,a.right,0,e),b:Me(s.bottom,a.bottom,0,i),l:Me(s.left,a.left,0,e)}}(t,i/2,o/2),a=function(t,e,i){const{enableBorderRadius:o}=t.getProps([\"enableBorderRadius\"]),s=t.options.borderRadius,a=Object(n.mb)(s),r=Math.min(e,i),l=t.borderSkipped,c=o||Object(n.Cb)(s);return{topLeft:Me(!c||l.top||l.left,a.topLeft,0,r),topRight:Me(!c||l.top||l.right,a.topRight,0,r),bottomLeft:Me(!c||l.bottom||l.left,a.bottomLeft,0,r),bottomRight:Me(!c||l.bottom||l.right,a.bottomRight,0,r)}}(t,i/2,o/2);return{outer:{x:e.left,y:e.top,w:i,h:o,radius:a},inner:{x:e.left+s.l,y:e.top+s.t,w:i-s.l-s.r,h:o-s.t-s.b,radius:{topLeft:Math.max(0,a.topLeft-Math.max(s.t,s.l)),topRight:Math.max(0,a.topRight-Math.max(s.t,s.r)),bottomLeft:Math.max(0,a.bottomLeft-Math.max(s.b,s.l)),bottomRight:Math.max(0,a.bottomRight-Math.max(s.b,s.r))}}}}function ke(t,e,i,n){const o=null===e,s=null===i,a=t&&!(o&&s)&&je(t,n);return a&&(o||e>=a.left&&e<=a.right)&&(s||i>=a.top&&i<=a.bottom)}function Se(t,e){t.rect(e.x,e.y,e.w,e.h)}function De(t,e,i={}){const n=t.x!==i.x?-e:0,o=t.y!==i.y?-e:0,s=(t.x+t.w!==i.x+i.w?e:0)-n,a=(t.y+t.h!==i.y+i.h?e:0)-o;return{x:t.x+n,y:t.y+o,w:t.w+s,h:t.h+a,radius:t.radius}}Oe.id=\"point\",Oe.defaults={borderWidth:1,hitRadius:1,hoverBorderWidth:1,hoverRadius:4,pointStyle:\"circle\",radius:3,rotation:0},Oe.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"};class Pe extends Ot{constructor(t){super(),this.options=void 0,this.horizontal=void 0,this.base=void 0,this.width=void 0,this.height=void 0,t&&Object.assign(this,t)}draw(t){const e=this.options,{inner:i,outer:o}=we(this),s=(a=o.radius).topLeft||a.topRight||a.bottomLeft||a.bottomRight?n.kb:Se;var a;const r=.33;t.save(),o.w===i.w&&o.h===i.h||(t.beginPath(),s(t,De(o,r,i)),t.clip(),s(t,De(i,-.33,o)),t.fillStyle=e.borderColor,t.fill(\"evenodd\")),t.beginPath(),s(t,De(i,r,o)),t.fillStyle=e.backgroundColor,t.fill(),t.restore()}inRange(t,e,i){return ke(this,t,e,i)}inXRange(t,e){return ke(this,t,null,e)}inYRange(t,e){return ke(this,null,t,e)}getCenterPoint(t){const{x:e,y:i,base:n,horizontal:o}=this.getProps([\"x\",\"y\",\"base\",\"horizontal\"],t);return{x:o?(e+n)/2:e,y:o?i:(i+n)/2}}getRange(t){return\"x\"===t?this.width/2:this.height/2}}Pe.id=\"bar\",Pe.defaults={borderSkipped:\"start\",borderWidth:0,borderRadius:0,enableBorderRadius:!0,pointStyle:void 0},Pe.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"};var Ce=Object.freeze({__proto__:null,ArcElement:de,LineElement:ye,PointElement:Oe,BarElement:Pe});function Ae(t){if(t._decimated){const e=t._data;delete t._decimated,delete t._data,Object.defineProperty(t,\"data\",{value:e})}}function Le(t){t.data.datasets.forEach((t=>{Ae(t)}))}var Te={id:\"decimation\",defaults:{algorithm:\"min-max\",enabled:!1},beforeElementsUpdate:(t,e,i)=>{if(!i.enabled)return void Le(t);const o=t.width;t.data.datasets.forEach(((e,s)=>{const{_data:a,indexAxis:r}=e,l=t.getDatasetMeta(s),c=a||e.data;if(\"y\"===Object(n.C)([r,t.options.indexAxis]))return;if(\"line\"!==l.type)return;const h=t.scales[l.xAxisID];if(\"linear\"!==h.type&&\"time\"!==h.type)return;if(t.options.parsing)return;let{start:d,count:u}=function(t,e){const i=e.length;let o,s=0;const{iScale:a}=t,{min:r,max:l,minDefined:c,maxDefined:h}=a.getUserBounds();return c&&(s=Object(n.Kb)(Object(n.Qb)(e,a.axis,r).lo,0,i-1)),o=h?Object(n.Kb)(Object(n.Qb)(e,a.axis,l).hi+1,s,i)-s:i-s,{start:s,count:o}}(l,c);if(u<=(i.threshold||4*o))return void Ae(e);let g;switch(Object(n.Db)(a)&&(e._data=c,delete e.data,Object.defineProperty(e,\"data\",{configurable:!0,enumerable:!0,get:function(){return this._decimated},set:function(t){this._data=t}})),i.algorithm){case\"lttb\":g=function(t,e,i,n,o){const s=o.samples||n;if(s>=i)return t.slice(e,e+i);const a=[],r=(i-2)/(s-2);let l=0;const c=e+i-1;let h,d,u,g,b,p=e;for(a[l++]=t[p],h=0;h<s-2;h++){let n,o=0,s=0;const c=Math.floor((h+1)*r)+1+e,f=Math.min(Math.floor((h+2)*r)+1,i)+e,m=f-c;for(n=c;n<f;n++)o+=t[n].x,s+=t[n].y;o/=m,s/=m;const x=Math.floor(h*r)+1+e,_=Math.min(Math.floor((h+1)*r)+1,i)+e,{x:y,y:v}=t[p];for(u=g=-1,n=x;n<_;n++)g=.5*Math.abs((y-o)*(t[n].y-v)-(y-t[n].x)*(s-v)),g>u&&(u=g,d=t[n],b=n);a[l++]=d,p=b}return a[l++]=t[c],a}(c,d,u,o,i);break;case\"min-max\":g=function(t,e,i,o){let s,a,r,l,c,h,d,u,g,b,p=0,f=0;const m=[],x=e+i-1,_=t[e].x,y=t[x].x-_;for(s=e;s<e+i;++s){a=t[s],r=(a.x-_)/y*o,l=a.y;const e=0|r;if(e===c)l<g?(g=l,h=s):l>b&&(b=l,d=s),p=(f*p+a.x)/++f;else{const i=s-1;if(!Object(n.Db)(h)&&!Object(n.Db)(d)){const e=Math.min(h,d),n=Math.max(h,d);e!==u&&e!==i&&m.push({...t[e],x:p}),n!==u&&n!==i&&m.push({...t[n],x:p})}s>0&&i!==u&&m.push(t[i]),m.push(a),c=e,f=0,g=b=l,h=d=u=s}}return m}(c,d,u,o);break;default:throw new Error(`Unsupported decimation algorithm '${i.algorithm}'`)}e._decimated=g}))},destroy(t){Le(t)}};function Ee(t,e,i){const o=function(t){const e=t.options,i=e.fill;let o=Object(n.Pb)(i&&i.target,i);return void 0===o&&(o=!!e.backgroundColor),!1!==o&&null!==o&&(!0===o?\"origin\":o)}(t);if(Object(n.Cb)(o))return!isNaN(o.value)&&o;let s=parseFloat(o);return Object(n.Ab)(s)&&Math.floor(s)===s?(\"-\"!==o[0]&&\"+\"!==o[0]||(s=e+s),!(s===e||s<0||s>=i)&&s):[\"origin\",\"start\",\"end\",\"stack\",\"shape\"].indexOf(o)>=0&&o}class Re{constructor(t){this.x=t.x,this.y=t.y,this.radius=t.radius}pathSegment(t,e,i){const{x:o,y:s,radius:a}=this;return e=e||{start:0,end:n.u},t.arc(o,s,a,e.end,e.start,!0),!i.bounds}interpolate(t){const{x:e,y:i,radius:n}=this,o=t.angle;return{x:e+Math.cos(o)*n,y:i+Math.sin(o)*n,angle:o}}}function ze(t){return(t.scale||{}).getPointPositionForValue?function(t){const{scale:e,fill:i}=t,o=e.options,s=e.getLabels().length,a=[],r=o.reverse?e.max:e.min,l=o.reverse?e.min:e.max;let c,h,d;if(d=\"start\"===i?r:\"end\"===i?l:Object(n.Cb)(i)?i.value:e.getBaseValue(),o.grid.circular)return h=e.getPointPositionForValue(0,r),new Re({x:h.x,y:h.y,radius:e.getDistanceFromCenterForValue(d)});for(c=0;c<s;++c)a.push(e.getPointPositionForValue(c,d));return a}(t):function(t){const{scale:e={},fill:i}=t;let o,s=null;return\"start\"===i?s=e.bottom:\"end\"===i?s=e.top:Object(n.Cb)(i)?s=e.getPixelForValue(i.value):e.getBasePixel&&(s=e.getBasePixel()),Object(n.Ab)(s)?(o=e.isHorizontal(),{x:o?s:null,y:o?null:s}):null}(t)}function Fe(t,e,i){for(;e>t;e--){const t=i[e];if(!isNaN(t.x)&&!isNaN(t.y))break}return e}function Ie(t){const{chart:e,scale:i,index:n,line:o}=t,s=[],a=o.segments,r=o.points,l=function(t,e){const i=[],n=t.getSortedVisibleDatasetMetas();for(let o=0;o<n.length;o++){const t=n[o];if(t.index===e)break;Ve(t)&&i.unshift(t.dataset)}return i}(e,n);l.push(We({x:null,y:i.bottom},o));for(let c=0;c<a.length;c++){const t=a[c];for(let e=t.start;e<=t.end;e++)Be(s,r[e],l)}return new ye({points:s,options:{}})}const Ve=t=>\"line\"===t.type&&!t.hidden;function Be(t,e,i){const n=[];for(let o=0;o<i.length;o++){const s=i[o],{first:a,last:r,point:l}=Ne(s,e,\"x\");if(!(!l||a&&r))if(a)n.unshift(l);else if(t.push(l),!r)break}t.push(...n)}function Ne(t,e,i){const n=t.interpolate(e,i);if(!n)return{};const o=n[i],s=t.segments,a=t.points;let r=!1,l=!1;for(let c=0;c<s.length;c++){const t=s[c],e=a[t.start][i],n=a[t.end][i];if(o>=e&&o<=n){r=o===e,l=o===n;break}}return{first:r,last:l,point:n}}function We(t,e){let i=[],o=!1;return Object(n.vb)(t)?(o=!0,i=t):i=function(t,e){const{x:i=null,y:n=null}=t||{},o=e.points,s=[];return e.segments.forEach((({start:t,end:e})=>{e=Fe(t,e,o);const a=o[t],r=o[e];null!==n?(s.push({x:a.x,y:n}),s.push({x:r.x,y:n})):null!==i&&(s.push({x:i,y:a.y}),s.push({x:i,y:r.y}))})),s}(t,e),i.length?new ye({points:i,options:{tension:0},_loop:o,_fullLoop:o}):null}function He(t,e,i){let o=t[e].fill;const s=[e];let a;if(!i)return o;for(;!1!==o&&-1===s.indexOf(o);){if(!Object(n.Ab)(o))return o;if(a=t[o],!a)return!1;if(a.visible)return o;s.push(o),o=a.fill}return!1}function $e(t,e,i){t.beginPath(),e.path(t),t.lineTo(e.last().x,i),t.lineTo(e.first().x,i),t.closePath(),t.clip()}function Ue(t,e,i,o){if(o)return;let s=e[t],a=i[t];return\"angle\"===t&&(s=Object(n.ob)(s),a=Object(n.ob)(a)),{property:t,start:s,end:a}}function Ye(t,e,i,n){return t&&e?n(t[i],e[i]):t?t[i]:e?e[i]:0}function Ke(t,e,i){const{top:n,bottom:o}=e.chart.chartArea,{property:s,start:a,end:r}=i||{};\"x\"===s&&(t.beginPath(),t.rect(a,n,r-a,o-n),t.clip())}function Xe(t,e,i,n){const o=e.interpolate(i,n);o&&t.lineTo(o.x,o.y)}function qe(t,e){const{line:i,target:o,property:s,color:a,scale:r}=e,l=function(t,e,i){const o=t.segments,s=t.points,a=e.points,r=[];for(const l of o){let{start:t,end:o}=l;o=Fe(t,o,s);const c=Ue(i,s[t],s[o],l.loop);if(!e.segments){r.push({source:l,target:c,start:s[t],end:s[o]});continue}const h=Object(n.db)(e,c);for(const e of h){const t=Ue(i,a[e.start],a[e.end],e.loop),o=Object(n.nb)(l,s,t);for(const n of o)r.push({source:n,target:e,start:{[i]:Ye(c,t,\"start\",Math.max)},end:{[i]:Ye(c,t,\"end\",Math.min)}})}}return r}(i,o,s);for(const{source:n,target:c,start:h,end:d}of l){const{style:{backgroundColor:e=a}={}}=n,l=!0!==o;t.save(),t.fillStyle=e,Ke(t,r,l&&Ue(s,h,d)),t.beginPath();const u=!!i.pathSegment(t,n);let g;if(l){u?t.closePath():Xe(t,o,d,s);const e=!!o.pathSegment(t,c,{move:u,reverse:!0});g=u&&e,g||Xe(t,o,h,s)}t.closePath(),t.fill(g?\"evenodd\":\"nonzero\"),t.restore()}}function Ge(t,e,i){const o=function(t){const{chart:e,fill:i,line:o}=t;if(Object(n.Ab)(i))return function(t,e){const i=t.getDatasetMeta(e);return i&&t.isDatasetVisible(e)?i.dataset:null}(e,i);if(\"stack\"===i)return Ie(t);if(\"shape\"===i)return!0;const s=ze(t);return s instanceof Re?s:We(s,o)}(e),{line:s,scale:a,axis:r}=e,l=s.options,c=l.fill,h=l.backgroundColor,{above:d=h,below:u=h}=c||{};o&&s.points.length&&(Object(n.v)(t,i),function(t,e){const{line:i,target:n,above:o,below:s,area:a,scale:r}=e,l=i._loop?\"angle\":e.axis;t.save(),\"x\"===l&&s!==o&&($e(t,n,a.top),qe(t,{line:i,target:n,color:o,scale:r,property:l}),t.restore(),t.save(),$e(t,n,a.bottom)),qe(t,{line:i,target:n,color:s,scale:r,property:l}),t.restore()}(t,{line:s,target:o,above:d,below:u,area:i,scale:a,axis:r}),Object(n.x)(t))}var Je={id:\"filler\",afterDatasetsUpdate(t,e,i){const n=(t.data.datasets||[]).length,o=[];let s,a,r,l;for(a=0;a<n;++a)s=t.getDatasetMeta(a),r=s.dataset,l=null,r&&r.options&&r instanceof ye&&(l={visible:t.isDatasetVisible(a),index:a,fill:Ee(r,a,n),chart:t,axis:s.controller.options.indexAxis,scale:s.vScale,line:r}),s.$filler=l,o.push(l);for(a=0;a<n;++a)l=o[a],l&&!1!==l.fill&&(l.fill=He(o,a,i.propagate))},beforeDraw(t,e,i){const n=\"beforeDraw\"===i.drawTime,o=t.getSortedVisibleDatasetMetas(),s=t.chartArea;for(let a=o.length-1;a>=0;--a){const e=o[a].$filler;e&&(e.line.updateControlPoints(s,e.axis),n&&Ge(t.ctx,e,s))}},beforeDatasetsDraw(t,e,i){if(\"beforeDatasetsDraw\"!==i.drawTime)return;const n=t.getSortedVisibleDatasetMetas();for(let o=n.length-1;o>=0;--o){const e=n[o].$filler;e&&Ge(t.ctx,e,t.chartArea)}},beforeDatasetDraw(t,e,i){const n=e.meta.$filler;n&&!1!==n.fill&&\"beforeDatasetDraw\"===i.drawTime&&Ge(t.ctx,n,t.chartArea)},defaults:{propagate:!0,drawTime:\"beforeDatasetDraw\"}};const Qe=(t,e)=>{let{boxHeight:i=e,boxWidth:n=e}=t;return t.usePointStyle&&(i=Math.min(i,e),n=Math.min(n,e)),{boxWidth:n,boxHeight:i,itemHeight:Math.max(e,i)}};class Ze extends Ot{constructor(t){super(),this._added=!1,this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1,this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this.legendItems=void 0,this.columnSizes=void 0,this.lineWidths=void 0,this.maxHeight=void 0,this.maxWidth=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.height=void 0,this.width=void 0,this._margins=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e,i){const n=this;n.maxWidth=t,n.maxHeight=e,n._margins=i,n.setDimensions(),n.buildLabels(),n.fit()}setDimensions(){const t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=t._margins.left,t.right=t.width):(t.height=t.maxHeight,t.top=t._margins.top,t.bottom=t.height)}buildLabels(){const t=this,e=t.options.labels||{};let i=Object(n.n)(e.generateLabels,[t.chart],t)||[];e.filter&&(i=i.filter((i=>e.filter(i,t.chart.data)))),e.sort&&(i=i.sort(((i,n)=>e.sort(i,n,t.chart.data)))),t.options.reverse&&i.reverse(),t.legendItems=i}fit(){const t=this,{options:e,ctx:i}=t;if(!e.display)return void(t.width=t.height=0);const o=e.labels,s=Object(n.y)(o.font),a=s.size,r=t._computeTitleHeight(),{boxWidth:l,itemHeight:c}=Qe(o,a);let h,d;i.font=s.string,t.isHorizontal()?(h=t.maxWidth,d=t._fitRows(r,a,l,c)+10):(d=t.maxHeight,h=t._fitCols(r,a,l,c)+10),t.width=Math.min(h,e.maxWidth||t.maxWidth),t.height=Math.min(d,e.maxHeight||t.maxHeight)}_fitRows(t,e,i,n){const o=this,{ctx:s,maxWidth:a,options:{labels:{padding:r}}}=o,l=o.legendHitBoxes=[],c=o.lineWidths=[0],h=n+r;let d=t;s.textAlign=\"left\",s.textBaseline=\"middle\";let u=-1,g=-h;return o.legendItems.forEach(((t,o)=>{const b=i+e/2+s.measureText(t.text).width;(0===o||c[c.length-1]+b+2*r>a)&&(d+=h,c[c.length-(o>0?0:1)]=0,g+=h,u++),l[o]={left:0,top:g,row:u,width:b,height:n},c[c.length-1]+=b+r})),d}_fitCols(t,e,i,n){const o=this,{ctx:s,maxHeight:a,options:{labels:{padding:r}}}=o,l=o.legendHitBoxes=[],c=o.columnSizes=[],h=a-t;let d=r,u=0,g=0,b=0,p=0;return o.legendItems.forEach(((t,o)=>{const a=i+e/2+s.measureText(t.text).width;o>0&&g+n+2*r>h&&(d+=u+r,c.push({width:u,height:g}),b+=u+r,p++,u=g=0),l[o]={left:b,top:g,col:p,width:a,height:n},u=Math.max(u,a),g+=n+r})),d+=u,c.push({width:u,height:g}),d}adjustHitBoxes(){const t=this;if(!t.options.display)return;const e=t._computeTitleHeight(),{legendHitBoxes:i,options:{align:o,labels:{padding:s},rtl:a}}=t,r=Object(n.pb)(a,t.left,t.width);if(this.isHorizontal()){let a=0,l=Object(n.A)(o,t.left+s,t.right-t.lineWidths[a]);for(const c of i)a!==c.row&&(a=c.row,l=Object(n.A)(o,t.left+s,t.right-t.lineWidths[a])),c.top+=t.top+e+s,c.left=r.leftForLtr(r.x(l),c.width),l+=c.width+s}else{let a=0,l=Object(n.A)(o,t.top+e+s,t.bottom-t.columnSizes[a].height);for(const c of i)c.col!==a&&(a=c.col,l=Object(n.A)(o,t.top+e+s,t.bottom-t.columnSizes[a].height)),c.top=l,c.left+=t.left+s,c.left=r.leftForLtr(r.x(c.left),c.width),l+=c.height+s}}isHorizontal(){return\"top\"===this.options.position||\"bottom\"===this.options.position}draw(){const t=this;if(t.options.display){const e=t.ctx;Object(n.v)(e,t),t._draw(),Object(n.x)(e)}}_draw(){const t=this,{options:e,columnSizes:i,lineWidths:o,ctx:s}=t,{align:a,labels:r}=e,l=n.xb.color,c=Object(n.pb)(e.rtl,t.left,t.width),h=Object(n.y)(r.font),{color:d,padding:u}=r,g=h.size,b=g/2;let p;t.drawTitle(),s.textAlign=c.textAlign(\"left\"),s.textBaseline=\"middle\",s.lineWidth=.5,s.font=h.string;const{boxWidth:f,boxHeight:m,itemHeight:x}=Qe(r,g),_=t.isHorizontal(),y=this._computeTitleHeight();p=_?{x:Object(n.A)(a,t.left+u,t.right-o[0]),y:t.top+u+y,line:0}:{x:t.left+u,y:Object(n.A)(a,t.top+y+u,t.bottom-i[0].height),line:0},Object(n.qb)(t.ctx,e.textDirection);const v=x+u;t.legendItems.forEach(((O,j)=>{s.strokeStyle=O.fontColor||d,s.fillStyle=O.fontColor||d;const M=s.measureText(O.text).width,w=c.textAlign(O.textAlign||(O.textAlign=r.textAlign)),k=f+b+M;let S=p.x,D=p.y;c.setWidth(t.width),_?j>0&&S+k+u>t.right&&(D=p.y+=v,p.line++,S=p.x=Object(n.A)(a,t.left+u,t.right-o[p.line])):j>0&&D+v>t.bottom&&(S=p.x=S+i[p.line].width+u,p.line++,D=p.y=Object(n.A)(a,t.top+y+u,t.bottom-i[p.line].height));!function(t,e,i){if(isNaN(f)||f<=0||isNaN(m)||m<0)return;s.save();const o=Object(n.Pb)(i.lineWidth,1);if(s.fillStyle=Object(n.Pb)(i.fillStyle,l),s.lineCap=Object(n.Pb)(i.lineCap,\"butt\"),s.lineDashOffset=Object(n.Pb)(i.lineDashOffset,0),s.lineJoin=Object(n.Pb)(i.lineJoin,\"miter\"),s.lineWidth=o,s.strokeStyle=Object(n.Pb)(i.strokeStyle,l),s.setLineDash(Object(n.Pb)(i.lineDash,[])),r.usePointStyle){const a={radius:f*Math.SQRT2/2,pointStyle:i.pointStyle,rotation:i.rotation,borderWidth:o},r=c.xPlus(t,f/2),l=e+b;Object(n.jb)(s,a,r,l)}else{const a=e+Math.max((g-m)/2,0),r=c.leftForLtr(t,f),l=Object(n.mb)(i.borderRadius);s.beginPath(),Object.values(l).some((t=>0!==t))?Object(n.kb)(s,{x:r,y:a,w:f,h:m,radius:l}):s.rect(r,a,f,m),s.fill(),0!==o&&s.stroke()}s.restore()}(c.x(S),D,O),S=Object(n.rb)(w,S+f+b,_?S+k:t.right,e.rtl),function(t,e,i){Object(n.w)(s,i.text,t,e+x/2,h,{strikethrough:i.hidden,textAlign:c.textAlign(i.textAlign)})}(c.x(S),D,O),_?p.x+=k+u:p.y+=v})),Object(n.sb)(t.ctx,e.textDirection)}drawTitle(){const t=this,e=t.options,i=e.title,o=Object(n.y)(i.font),s=Object(n.b)(i.padding);if(!i.display)return;const a=Object(n.pb)(e.rtl,t.left,t.width),r=t.ctx,l=i.position,c=o.size/2,h=s.top+c;let d,u=t.left,g=t.width;if(this.isHorizontal())g=Math.max(...t.lineWidths),d=t.top+h,u=Object(n.A)(e.align,u,t.right-g);else{const i=t.columnSizes.reduce(((t,e)=>Math.max(t,e.height)),0);d=h+Object(n.A)(e.align,t.top,t.bottom-i-e.labels.padding-t._computeTitleHeight())}const b=Object(n.A)(l,u,u+g);r.textAlign=a.textAlign(Object(n.z)(l)),r.textBaseline=\"middle\",r.strokeStyle=i.color,r.fillStyle=i.color,r.font=o.string,Object(n.w)(r,i.text,b,d,o)}_computeTitleHeight(){const t=this.options.title,e=Object(n.y)(t.font),i=Object(n.b)(t.padding);return t.display?e.lineHeight+i.height:0}_getLegendItemAt(t,e){const i=this;let n,o,s;if(t>=i.left&&t<=i.right&&e>=i.top&&e<=i.bottom)for(s=i.legendHitBoxes,n=0;n<s.length;++n)if(o=s[n],t>=o.left&&t<=o.left+o.width&&e>=o.top&&e<=o.top+o.height)return i.legendItems[n];return null}handleEvent(t){const e=this,i=e.options;if(!function(t,e){if(\"mousemove\"===t&&(e.onHover||e.onLeave))return!0;if(e.onClick&&(\"click\"===t||\"mouseup\"===t))return!0;return!1}(t.type,i))return;const o=e._getLegendItemAt(t.x,t.y);if(\"mousemove\"===t.type){const r=e._hoveredItem,l=(a=o,null!==(s=r)&&null!==a&&s.datasetIndex===a.datasetIndex&&s.index===a.index);r&&!l&&Object(n.n)(i.onLeave,[t,r,e],e),e._hoveredItem=o,o&&!l&&Object(n.n)(i.onHover,[t,o,e],e)}else o&&Object(n.n)(i.onClick,[t,o,e],e);var s,a}}var ti={id:\"legend\",_element:Ze,start(t,e,i){const n=t.legend=new Ze({ctx:t.ctx,options:i,chart:t});at.configure(t,n,i),at.addBox(t,n)},stop(t){at.removeBox(t,t.legend),delete t.legend},beforeUpdate(t,e,i){const n=t.legend;at.configure(t,n,i),n.options=i},afterUpdate(t){const e=t.legend;e.buildLabels(),e.adjustHitBoxes()},afterEvent(t,e){e.replay||t.legend.handleEvent(e.event)},defaults:{display:!0,position:\"top\",align:\"center\",fullSize:!0,reverse:!1,weight:1e3,onClick(t,e,i){const n=e.datasetIndex,o=i.chart;o.isDatasetVisible(n)?(o.hide(n),e.hidden=!0):(o.show(n),e.hidden=!1)},onHover:null,onLeave:null,labels:{color:t=>t.chart.options.color,boxWidth:40,padding:10,generateLabels(t){const e=t.data.datasets,{labels:{usePointStyle:i,pointStyle:o,textAlign:s,color:a}}=t.legend.options;return t._getSortedDatasetMetas().map((t=>{const r=t.controller.getStyle(i?0:void 0),l=Object(n.b)(r.borderWidth);return{text:e[t.index].label,fillStyle:r.backgroundColor,fontColor:a,hidden:!t.visible,lineCap:r.borderCapStyle,lineDash:r.borderDash,lineDashOffset:r.borderDashOffset,lineJoin:r.borderJoinStyle,lineWidth:(l.width+l.height)/4,strokeStyle:r.borderColor,pointStyle:o||r.pointStyle,rotation:r.rotation,textAlign:s||r.textAlign,borderRadius:0,datasetIndex:t.index}}),this)}},title:{color:t=>t.chart.options.color,display:!1,position:\"center\",text:\"\"}},descriptors:{_scriptable:t=>!t.startsWith(\"on\"),labels:{_scriptable:t=>![\"generateLabels\",\"filter\",\"sort\"].includes(t)}}};class ei extends Ot{constructor(t){super(),this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this._padding=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e){const i=this,o=i.options;if(i.left=0,i.top=0,!o.display)return void(i.width=i.height=i.right=i.bottom=0);i.width=i.right=t,i.height=i.bottom=e;const s=Object(n.vb)(o.text)?o.text.length:1;i._padding=Object(n.b)(o.padding);const a=s*Object(n.y)(o.font).lineHeight+i._padding.height;i.isHorizontal()?i.height=a:i.width=a}isHorizontal(){const t=this.options.position;return\"top\"===t||\"bottom\"===t}_drawArgs(t){const{top:e,left:i,bottom:o,right:s,options:a}=this,r=a.align;let l,c,h,d=0;return this.isHorizontal()?(c=Object(n.A)(r,i,s),h=e+t,l=s-i):(\"left\"===a.position?(c=i+t,h=Object(n.A)(r,o,e),d=-.5*n.q):(c=s-t,h=Object(n.A)(r,e,o),d=.5*n.q),l=o-e),{titleX:c,titleY:h,maxWidth:l,rotation:d}}draw(){const t=this,e=t.ctx,i=t.options;if(!i.display)return;const o=Object(n.y)(i.font),s=o.lineHeight/2+t._padding.top,{titleX:a,titleY:r,maxWidth:l,rotation:c}=t._drawArgs(s);Object(n.w)(e,i.text,0,0,o,{color:i.color,maxWidth:l,rotation:c,textAlign:Object(n.z)(i.align),textBaseline:\"middle\",translation:[a,r]})}}var ii={id:\"title\",_element:ei,start(t,e,i){!function(t,e){const i=new ei({ctx:t.ctx,options:e,chart:t});at.configure(t,i,e),at.addBox(t,i),t.titleBlock=i}(t,i)},stop(t){const e=t.titleBlock;at.removeBox(t,e),delete t.titleBlock},beforeUpdate(t,e,i){const n=t.titleBlock;at.configure(t,n,i),n.options=i},defaults:{align:\"center\",display:!1,font:{weight:\"bold\"},fullSize:!0,padding:10,position:\"top\",text:\"\",weight:2e3},defaultRoutes:{color:\"color\"},descriptors:{_scriptable:!0,_indexable:!1}};const ni=new WeakMap;var oi={id:\"subtitle\",start(t,e,i){const n=new ei({ctx:t.ctx,options:i,chart:t});at.configure(t,n,i),at.addBox(t,n),ni.set(t,n)},stop(t){at.removeBox(t,ni.get(t)),ni.delete(t)},beforeUpdate(t,e,i){const n=ni.get(t);at.configure(t,n,i),n.options=i},defaults:{align:\"center\",display:!1,font:{weight:\"normal\"},fullSize:!0,padding:0,position:\"top\",text:\"\",weight:1500},defaultRoutes:{color:\"color\"},descriptors:{_scriptable:!0,_indexable:!1}};const si={average(t){if(!t.length)return!1;let e,i,n=0,o=0,s=0;for(e=0,i=t.length;e<i;++e){const i=t[e].element;if(i&&i.hasValue()){const t=i.tooltipPosition();n+=t.x,o+=t.y,++s}}return{x:n/s,y:o/s}},nearest(t,e){if(!t.length)return!1;let i,o,s,a=e.x,r=e.y,l=Number.POSITIVE_INFINITY;for(i=0,o=t.length;i<o;++i){const o=t[i].element;if(o&&o.hasValue()){const t=o.getCenterPoint(),i=Object(n.ub)(e,t);i<l&&(l=i,s=o)}}if(s){const t=s.tooltipPosition();a=t.x,r=t.y}return{x:a,y:r}}};function ai(t,e){return e&&(Object(n.vb)(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function ri(t){return(\"string\"===typeof t||t instanceof String)&&t.indexOf(\"\\n\")>-1?t.split(\"\\n\"):t}function li(t,e){const{element:i,datasetIndex:n,index:o}=e,s=t.getDatasetMeta(n).controller,{label:a,value:r}=s.getLabelAndValue(o);return{chart:t,label:a,parsed:s.getParsed(o),raw:t.data.datasets[n].data[o],formattedValue:r,dataset:s.getDataset(),dataIndex:o,datasetIndex:n,element:i}}function ci(t,e){const i=t._chart.ctx,{body:o,footer:s,title:a}=t,{boxWidth:r,boxHeight:l}=e,c=Object(n.y)(e.bodyFont),h=Object(n.y)(e.titleFont),d=Object(n.y)(e.footerFont),u=a.length,g=s.length,b=o.length,p=Object(n.b)(e.padding);let f=p.height,m=0,x=o.reduce(((t,e)=>t+e.before.length+e.lines.length+e.after.length),0);if(x+=t.beforeBody.length+t.afterBody.length,u&&(f+=u*h.lineHeight+(u-1)*e.titleSpacing+e.titleMarginBottom),x){f+=b*(e.displayColors?Math.max(l,c.lineHeight):c.lineHeight)+(x-b)*c.lineHeight+(x-1)*e.bodySpacing}g&&(f+=e.footerMarginTop+g*d.lineHeight+(g-1)*e.footerSpacing);let _=0;const y=function(t){m=Math.max(m,i.measureText(t).width+_)};return i.save(),i.font=h.string,Object(n.c)(t.title,y),i.font=c.string,Object(n.c)(t.beforeBody.concat(t.afterBody),y),_=e.displayColors?r+2:0,Object(n.c)(o,(t=>{Object(n.c)(t.before,y),Object(n.c)(t.lines,y),Object(n.c)(t.after,y)})),_=0,i.font=d.string,Object(n.c)(t.footer,y),i.restore(),m+=p.width,{width:m,height:f}}function hi(t,e,i,n){const{x:o,width:s}=i,{width:a,chartArea:{left:r,right:l}}=t;let c=\"center\";return\"center\"===n?c=o<=(r+l)/2?\"left\":\"right\":o<=s/2?c=\"left\":o>=a-s/2&&(c=\"right\"),function(t,e,i,n){const{x:o,width:s}=n,a=i.caretSize+i.caretPadding;return\"left\"===t&&o+s+a>e.width||\"right\"===t&&o-s-a<0||void 0}(c,t,e,i)&&(c=\"center\"),c}function di(t,e,i){const n=e.yAlign||function(t,e){const{y:i,height:n}=e;return i<n/2?\"top\":i>t.height-n/2?\"bottom\":\"center\"}(t,i);return{xAlign:e.xAlign||hi(t,e,i,n),yAlign:n}}function ui(t,e,i,o){const{caretSize:s,caretPadding:a,cornerRadius:r}=t,{xAlign:l,yAlign:c}=i,h=s+a,d=r+a;let u=function(t,e){let{x:i,width:n}=t;return\"right\"===e?i-=n:\"center\"===e&&(i-=n/2),i}(e,l);const g=function(t,e,i){let{y:n,height:o}=t;return\"top\"===e?n+=i:n-=\"bottom\"===e?o+i:o/2,n}(e,c,h);return\"center\"===c?\"left\"===l?u+=h:\"right\"===l&&(u-=h):\"left\"===l?u-=d:\"right\"===l&&(u+=d),{x:Object(n.Kb)(u,0,o.width-e.width),y:Object(n.Kb)(g,0,o.height-e.height)}}function gi(t,e,i){const o=Object(n.b)(i.padding);return\"center\"===e?t.x+t.width/2:\"right\"===e?t.x+t.width-o.right:t.x+o.left}function bi(t){return ai([],ri(t))}function pi(t,e){const i=e&&e.dataset&&e.dataset.tooltip&&e.dataset.tooltip.callbacks;return i?t.override(i):t}class fi extends Ot{constructor(t){super(),this.opacity=0,this._active=[],this._chart=t._chart,this._eventPosition=void 0,this._size=void 0,this._cachedAnimations=void 0,this._tooltipItems=[],this.$animations=void 0,this.$context=void 0,this.options=t.options,this.dataPoints=void 0,this.title=void 0,this.beforeBody=void 0,this.body=void 0,this.afterBody=void 0,this.footer=void 0,this.xAlign=void 0,this.yAlign=void 0,this.x=void 0,this.y=void 0,this.height=void 0,this.width=void 0,this.caretX=void 0,this.caretY=void 0,this.labelColors=void 0,this.labelPointStyles=void 0,this.labelTextColors=void 0}initialize(t){this.options=t,this._cachedAnimations=void 0,this.$context=void 0}_resolveAnimations(){const t=this,e=t._cachedAnimations;if(e)return e;const i=t._chart,n=t.options.setContext(t.getContext()),o=n.enabled&&i.options.animation&&n.animations,s=new c(t._chart,o);return o._cacheable&&(t._cachedAnimations=Object.freeze(s)),s}getContext(){const t=this;return t.$context||(t.$context=(e=t._chart.getContext(),i=t,n=t._tooltipItems,Object.assign(Object.create(e),{tooltip:i,tooltipItems:n,type:\"tooltip\"})));var e,i,n}getTitle(t,e){const i=this,{callbacks:n}=e,o=n.beforeTitle.apply(i,[t]),s=n.title.apply(i,[t]),a=n.afterTitle.apply(i,[t]);let r=[];return r=ai(r,ri(o)),r=ai(r,ri(s)),r=ai(r,ri(a)),r}getBeforeBody(t,e){return bi(e.callbacks.beforeBody.apply(this,[t]))}getBody(t,e){const i=this,{callbacks:o}=e,s=[];return Object(n.c)(t,(t=>{const e={before:[],lines:[],after:[]},n=pi(o,t);ai(e.before,ri(n.beforeLabel.call(i,t))),ai(e.lines,n.label.call(i,t)),ai(e.after,ri(n.afterLabel.call(i,t))),s.push(e)})),s}getAfterBody(t,e){return bi(e.callbacks.afterBody.apply(this,[t]))}getFooter(t,e){const i=this,{callbacks:n}=e,o=n.beforeFooter.apply(i,[t]),s=n.footer.apply(i,[t]),a=n.afterFooter.apply(i,[t]);let r=[];return r=ai(r,ri(o)),r=ai(r,ri(s)),r=ai(r,ri(a)),r}_createItems(t){const e=this,i=e._active,o=e._chart.data,s=[],a=[],r=[];let l,c,h=[];for(l=0,c=i.length;l<c;++l)h.push(li(e._chart,i[l]));return t.filter&&(h=h.filter(((e,i,n)=>t.filter(e,i,n,o)))),t.itemSort&&(h=h.sort(((e,i)=>t.itemSort(e,i,o)))),Object(n.c)(h,(i=>{const n=pi(t.callbacks,i);s.push(n.labelColor.call(e,i)),a.push(n.labelPointStyle.call(e,i)),r.push(n.labelTextColor.call(e,i))})),e.labelColors=s,e.labelPointStyles=a,e.labelTextColors=r,e.dataPoints=h,h}update(t,e){const i=this,n=i.options.setContext(i.getContext()),o=i._active;let s,a=[];if(o.length){const t=si[n.position].call(i,o,i._eventPosition);a=i._createItems(n),i.title=i.getTitle(a,n),i.beforeBody=i.getBeforeBody(a,n),i.body=i.getBody(a,n),i.afterBody=i.getAfterBody(a,n),i.footer=i.getFooter(a,n);const e=i._size=ci(i,n),r=Object.assign({},t,e),l=di(i._chart,n,r),c=ui(n,r,l,i._chart);i.xAlign=l.xAlign,i.yAlign=l.yAlign,s={opacity:1,x:c.x,y:c.y,width:e.width,height:e.height,caretX:t.x,caretY:t.y}}else 0!==i.opacity&&(s={opacity:0});i._tooltipItems=a,i.$context=void 0,s&&i._resolveAnimations().update(i,s),t&&n.external&&n.external.call(i,{chart:i._chart,tooltip:i,replay:e})}drawCaret(t,e,i,n){const o=this.getCaretPosition(t,i,n);e.lineTo(o.x1,o.y1),e.lineTo(o.x2,o.y2),e.lineTo(o.x3,o.y3)}getCaretPosition(t,e,i){const{xAlign:n,yAlign:o}=this,{cornerRadius:s,caretSize:a}=i,{x:r,y:l}=t,{width:c,height:h}=e;let d,u,g,b,p,f;return\"center\"===o?(p=l+h/2,\"left\"===n?(d=r,u=d-a,b=p+a,f=p-a):(d=r+c,u=d+a,b=p-a,f=p+a),g=d):(u=\"left\"===n?r+s+a:\"right\"===n?r+c-s-a:this.caretX,\"top\"===o?(b=l,p=b-a,d=u-a,g=u+a):(b=l+h,p=b+a,d=u+a,g=u-a),f=b),{x1:d,x2:u,x3:g,y1:b,y2:p,y3:f}}drawTitle(t,e,i){const o=this,s=o.title,a=s.length;let r,l,c;if(a){const h=Object(n.pb)(i.rtl,o.x,o.width);for(t.x=gi(o,i.titleAlign,i),e.textAlign=h.textAlign(i.titleAlign),e.textBaseline=\"middle\",r=Object(n.y)(i.titleFont),l=i.titleSpacing,e.fillStyle=i.titleColor,e.font=r.string,c=0;c<a;++c)e.fillText(s[c],h.x(t.x),t.y+r.lineHeight/2),t.y+=r.lineHeight+l,c+1===a&&(t.y+=i.titleMarginBottom-l)}}_drawColorBox(t,e,i,o,s){const a=this,r=a.labelColors[i],l=a.labelPointStyles[i],{boxHeight:c,boxWidth:h}=s,d=Object(n.y)(s.bodyFont),u=gi(a,\"left\",s),g=o.x(u),b=c<d.lineHeight?(d.lineHeight-c)/2:0,p=e.y+b;if(s.usePointStyle){const e={radius:Math.min(h,c)/2,pointStyle:l.pointStyle,rotation:l.rotation,borderWidth:1},i=o.leftForLtr(g,h)+h/2,a=p+c/2;t.strokeStyle=s.multiKeyBackground,t.fillStyle=s.multiKeyBackground,Object(n.jb)(t,e,i,a),t.strokeStyle=r.borderColor,t.fillStyle=r.backgroundColor,Object(n.jb)(t,e,i,a)}else{t.lineWidth=r.borderWidth||1,t.strokeStyle=r.borderColor,t.setLineDash(r.borderDash||[]),t.lineDashOffset=r.borderDashOffset||0;const e=o.leftForLtr(g,h),i=o.leftForLtr(o.xPlus(g,1),h-2),a=Object(n.mb)(r.borderRadius);Object.values(a).some((t=>0!==t))?(t.beginPath(),t.fillStyle=s.multiKeyBackground,Object(n.kb)(t,{x:e,y:p,w:h,h:c,radius:a}),t.fill(),t.stroke(),t.fillStyle=r.backgroundColor,t.beginPath(),Object(n.kb)(t,{x:i,y:p+1,w:h-2,h:c-2,radius:a}),t.fill()):(t.fillStyle=s.multiKeyBackground,t.fillRect(e,p,h,c),t.strokeRect(e,p,h,c),t.fillStyle=r.backgroundColor,t.fillRect(i,p+1,h-2,c-2))}t.fillStyle=a.labelTextColors[i]}drawBody(t,e,i){const o=this,{body:s}=o,{bodySpacing:a,bodyAlign:r,displayColors:l,boxHeight:c,boxWidth:h}=i,d=Object(n.y)(i.bodyFont);let u=d.lineHeight,g=0;const b=Object(n.pb)(i.rtl,o.x,o.width),p=function(i){e.fillText(i,b.x(t.x+g),t.y+u/2),t.y+=u+a},f=b.textAlign(r);let m,x,_,y,v,O,j;for(e.textAlign=r,e.textBaseline=\"middle\",e.font=d.string,t.x=gi(o,f,i),e.fillStyle=i.bodyColor,Object(n.c)(o.beforeBody,p),g=l&&\"right\"!==f?\"center\"===r?h/2+1:h+2:0,y=0,O=s.length;y<O;++y){for(m=s[y],x=o.labelTextColors[y],e.fillStyle=x,Object(n.c)(m.before,p),_=m.lines,l&&_.length&&(o._drawColorBox(e,t,y,b,i),u=Math.max(d.lineHeight,c)),v=0,j=_.length;v<j;++v)p(_[v]),u=d.lineHeight;Object(n.c)(m.after,p)}g=0,u=d.lineHeight,Object(n.c)(o.afterBody,p),t.y-=a}drawFooter(t,e,i){const o=this,s=o.footer,a=s.length;let r,l;if(a){const c=Object(n.pb)(i.rtl,o.x,o.width);for(t.x=gi(o,i.footerAlign,i),t.y+=i.footerMarginTop,e.textAlign=c.textAlign(i.footerAlign),e.textBaseline=\"middle\",r=Object(n.y)(i.footerFont),e.fillStyle=i.footerColor,e.font=r.string,l=0;l<a;++l)e.fillText(s[l],c.x(t.x),t.y+r.lineHeight/2),t.y+=r.lineHeight+i.footerSpacing}}drawBackground(t,e,i,n){const{xAlign:o,yAlign:s}=this,{x:a,y:r}=t,{width:l,height:c}=i,h=n.cornerRadius;e.fillStyle=n.backgroundColor,e.strokeStyle=n.borderColor,e.lineWidth=n.borderWidth,e.beginPath(),e.moveTo(a+h,r),\"top\"===s&&this.drawCaret(t,e,i,n),e.lineTo(a+l-h,r),e.quadraticCurveTo(a+l,r,a+l,r+h),\"center\"===s&&\"right\"===o&&this.drawCaret(t,e,i,n),e.lineTo(a+l,r+c-h),e.quadraticCurveTo(a+l,r+c,a+l-h,r+c),\"bottom\"===s&&this.drawCaret(t,e,i,n),e.lineTo(a+h,r+c),e.quadraticCurveTo(a,r+c,a,r+c-h),\"center\"===s&&\"left\"===o&&this.drawCaret(t,e,i,n),e.lineTo(a,r+h),e.quadraticCurveTo(a,r,a+h,r),e.closePath(),e.fill(),n.borderWidth>0&&e.stroke()}_updateAnimationTarget(t){const e=this,i=e._chart,n=e.$animations,o=n&&n.x,s=n&&n.y;if(o||s){const n=si[t.position].call(e,e._active,e._eventPosition);if(!n)return;const a=e._size=ci(e,t),r=Object.assign({},n,e._size),l=di(i,t,r),c=ui(t,r,l,i);o._to===c.x&&s._to===c.y||(e.xAlign=l.xAlign,e.yAlign=l.yAlign,e.width=a.width,e.height=a.height,e.caretX=n.x,e.caretY=n.y,e._resolveAnimations().update(e,c))}}draw(t){const e=this,i=e.options.setContext(e.getContext());let o=e.opacity;if(!o)return;e._updateAnimationTarget(i);const s={width:e.width,height:e.height},a={x:e.x,y:e.y};o=Math.abs(o)<.001?0:o;const r=Object(n.b)(i.padding),l=e.title.length||e.beforeBody.length||e.body.length||e.afterBody.length||e.footer.length;i.enabled&&l&&(t.save(),t.globalAlpha=o,e.drawBackground(a,t,s,i),Object(n.qb)(t,i.textDirection),a.y+=r.top,e.drawTitle(a,t,i),e.drawBody(a,t,i),e.drawFooter(a,t,i),Object(n.sb)(t,i.textDirection),t.restore())}getActiveElements(){return this._active||[]}setActiveElements(t,e){const i=this,o=i._active,s=t.map((({datasetIndex:t,index:e})=>{const n=i._chart.getDatasetMeta(t);if(!n)throw new Error(\"Cannot find a dataset at index \"+t);return{datasetIndex:t,element:n.data[e],index:e}})),a=!Object(n.Y)(o,s),r=i._positionChanged(s,e);(a||r)&&(i._active=s,i._eventPosition=e,i.update(!0))}handleEvent(t,e){const i=this,o=i.options,s=i._active||[];let a=!1,r=[];\"mouseout\"!==t.type&&(r=i._chart.getElementsAtEventForMode(t,o.mode,o,e),o.reverse&&r.reverse());const l=i._positionChanged(r,t);return a=e||!Object(n.Y)(r,s)||l,a&&(i._active=r,(o.enabled||o.external)&&(i._eventPosition={x:t.x,y:t.y},i.update(!0,e))),a}_positionChanged(t,e){const{caretX:i,caretY:n,options:o}=this,s=si[o.position].call(this,t,e);return!1!==s&&(i!==s.x||n!==s.y)}}fi.positioners=si;var mi={id:\"tooltip\",_element:fi,positioners:si,afterInit(t,e,i){i&&(t.tooltip=new fi({_chart:t,options:i}))},beforeUpdate(t,e,i){t.tooltip&&t.tooltip.initialize(i)},reset(t,e,i){t.tooltip&&t.tooltip.initialize(i)},afterDraw(t){const e=t.tooltip,i={tooltip:e};!1!==t.notifyPlugins(\"beforeTooltipDraw\",i)&&(e&&e.draw(t.ctx),t.notifyPlugins(\"afterTooltipDraw\",i))},afterEvent(t,e){if(t.tooltip){const i=e.replay;t.tooltip.handleEvent(e.event,i)&&(e.changed=!0)}},defaults:{enabled:!0,external:null,position:\"average\",backgroundColor:\"rgba(0,0,0,0.8)\",titleColor:\"#fff\",titleFont:{weight:\"bold\"},titleSpacing:2,titleMarginBottom:6,titleAlign:\"left\",bodyColor:\"#fff\",bodySpacing:2,bodyFont:{},bodyAlign:\"left\",footerColor:\"#fff\",footerSpacing:2,footerMarginTop:6,footerFont:{weight:\"bold\"},footerAlign:\"left\",padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(t,e)=>e.bodyFont.size,boxWidth:(t,e)=>e.bodyFont.size,multiKeyBackground:\"#fff\",displayColors:!0,borderColor:\"rgba(0,0,0,0)\",borderWidth:0,animation:{duration:400,easing:\"easeOutQuart\"},animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"width\",\"height\",\"caretX\",\"caretY\"]},opacity:{easing:\"linear\",duration:200}},callbacks:{beforeTitle:n.tb,title(t){if(t.length>0){const e=t[0],i=e.chart.data.labels,n=i?i.length:0;if(this&&this.options&&\"dataset\"===this.options.mode)return e.dataset.label||\"\";if(e.label)return e.label;if(n>0&&e.dataIndex<n)return i[e.dataIndex]}return\"\"},afterTitle:n.tb,beforeBody:n.tb,beforeLabel:n.tb,label(t){if(this&&this.options&&\"dataset\"===this.options.mode)return t.label+\": \"+t.formattedValue||t.formattedValue;let e=t.dataset.label||\"\";e&&(e+=\": \");const i=t.formattedValue;return Object(n.Db)(i)||(e+=i),e},labelColor(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{borderColor:e.borderColor,backgroundColor:e.backgroundColor,borderWidth:e.borderWidth,borderDash:e.borderDash,borderDashOffset:e.borderDashOffset,borderRadius:0}},labelTextColor(){return this.options.bodyColor},labelPointStyle(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{pointStyle:e.pointStyle,rotation:e.rotation}},afterLabel:n.tb,afterBody:n.tb,beforeFooter:n.tb,footer:n.tb,afterFooter:n.tb}},defaultRoutes:{bodyFont:\"font\",footerFont:\"font\",titleFont:\"font\"},descriptors:{_scriptable:t=>\"filter\"!==t&&\"itemSort\"!==t&&\"external\"!==t,_indexable:!1,callbacks:{_scriptable:!1,_indexable:!1},animation:{_fallback:!1},animations:{_fallback:\"animation\"}},additionalOptionScopes:[\"interaction\"]},xi=Object.freeze({__proto__:null,Decimation:Te,Filler:Je,Legend:ti,SubTitle:oi,Title:ii,Tooltip:mi});function _i(t,e,i){const n=t.indexOf(e);if(-1===n)return((t,e,i)=>\"string\"===typeof e?t.push(e)-1:isNaN(e)?null:i)(t,e,i);return n!==t.lastIndexOf(e)?i:n}class yi extends Tt{constructor(t){super(t),this._startValue=void 0,this._valueRange=0}parse(t,e){if(Object(n.Db)(t))return null;const i=this.getLabels();return((t,e)=>null===t?null:Object(n.Kb)(Math.round(t),0,e))(e=isFinite(e)&&i[e]===t?e:_i(i,t,Object(n.Pb)(e,t)),i.length-1)}determineDataLimits(){const t=this,{minDefined:e,maxDefined:i}=t.getUserBounds();let{min:n,max:o}=t.getMinMax(!0);\"ticks\"===t.options.bounds&&(e||(n=0),i||(o=t.getLabels().length-1)),t.min=n,t.max=o}buildTicks(){const t=this,e=t.min,i=t.max,n=t.options.offset,o=[];let s=t.getLabels();s=0===e&&i===s.length-1?s:s.slice(e,i+1),t._valueRange=Math.max(s.length-(n?0:1),1),t._startValue=t.min-(n?.5:0);for(let a=e;a<=i;a++)o.push({value:a});return o}getLabelForValue(t){const e=this.getLabels();return t>=0&&t<e.length?e[t]:t}configure(){const t=this;super.configure(),t.isHorizontal()||(t._reversePixels=!t._reversePixels)}getPixelForValue(t){const e=this;return\"number\"!==typeof t&&(t=e.parse(t)),null===t?NaN:e.getPixelForDecimal((t-e._startValue)/e._valueRange)}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getValueForPixel(t){const e=this;return Math.round(e._startValue+e.getDecimalForPixel(t)*e._valueRange)}getBasePixel(){return this.bottom}}function vi(t,e,{horizontal:i,minRotation:o}){const s=Object(n.Nb)(o),a=(i?Math.sin(s):Math.cos(s))||.001,r=.75*e*(\"\"+t).length;return Math.min(e/a,r)}yi.id=\"category\",yi.defaults={ticks:{callback:yi.prototype.getLabelForValue}};class Oi extends Tt{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._endValue=void 0,this._valueRange=0}parse(t,e){return Object(n.Db)(t)||(\"number\"===typeof t||t instanceof Number)&&!isFinite(+t)?null:+t}handleTickRangeOptions(){const t=this,{beginAtZero:e}=t.options,{minDefined:i,maxDefined:o}=t.getUserBounds();let{min:s,max:a}=t;const r=t=>s=i?s:t,l=t=>a=o?a:t;if(e){const t=Object(n.Mb)(s),e=Object(n.Mb)(a);t<0&&e<0?l(0):t>0&&e>0&&r(0)}if(s===a){let t=1;(a>=Number.MAX_SAFE_INTEGER||s<=Number.MIN_SAFE_INTEGER)&&(t=Math.abs(.05*a)),l(a+t),e||r(s-t)}t.min=s,t.max=a}getTickLimit(){const t=this,e=t.options.ticks;let i,{maxTicksLimit:n,stepSize:o}=e;return o?i=Math.ceil(t.max/o)-Math.floor(t.min/o)+1:(i=t.computeTickLimit(),n=n||11),n&&(i=Math.min(n,i)),i}computeTickLimit(){return Number.POSITIVE_INFINITY}buildTicks(){const t=this,e=t.options,i=e.ticks;let o=t.getTickLimit();o=Math.max(2,o);const s=function(t,e){const i=[],{bounds:o,step:s,min:a,max:r,precision:l,count:c,maxTicks:h,maxDigits:d,includeBounds:u}=t,g=s||1,b=h-1,{min:p,max:f}=e,m=!Object(n.Db)(a),x=!Object(n.Db)(r),_=!Object(n.Db)(c),y=(f-p)/(d+1);let v,O,j,M,w=Object(n.O)((f-p)/b/g)*g;if(w<1e-14&&!m&&!x)return[{value:p},{value:f}];M=Math.ceil(f/w)-Math.floor(p/w),M>b&&(w=Object(n.O)(M*w/b/g)*g),Object(n.Db)(l)||(v=Math.pow(10,l),w=Math.ceil(w*v)/v),\"ticks\"===o?(O=Math.floor(p/w)*w,j=Math.ceil(f/w)*w):(O=p,j=f),m&&x&&s&&Object(n.P)((r-a)/s,w/1e3)?(M=Math.round(Math.min((r-a)/w,h)),w=(r-a)/M,O=a,j=r):_?(O=m?a:O,j=x?r:j,M=c-1,w=(j-O)/M):(M=(j-O)/w,M=Object(n.Q)(M,Math.round(M),w/1e3)?Math.round(M):Math.ceil(M));const k=Math.max(Object(n.R)(w),Object(n.R)(O));v=Math.pow(10,Object(n.Db)(l)?k:l),O=Math.round(O*v)/v,j=Math.round(j*v)/v;let S=0;for(m&&(u&&O!==a?(i.push({value:a}),O<a&&S++,Object(n.Q)(Math.round((O+S*w)*v)/v,a,vi(a,y,t))&&S++):O<a&&S++);S<M;++S)i.push({value:Math.round((O+S*w)*v)/v});return x&&u&&j!==r?Object(n.Q)(i[i.length-1].value,r,vi(r,y,t))?i[i.length-1].value=r:i.push({value:r}):x&&j!==r||i.push({value:j}),i}({maxTicks:o,bounds:e.bounds,min:e.min,max:e.max,precision:i.precision,step:i.stepSize,count:i.count,maxDigits:t._maxDigits(),horizontal:t.isHorizontal(),minRotation:i.minRotation||0,includeBounds:!1!==i.includeBounds},t._range||t);return\"ticks\"===e.bounds&&Object(n.N)(s,t,\"value\"),e.reverse?(s.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),s}configure(){const t=this,e=t.ticks;let i=t.min,n=t.max;if(super.configure(),t.options.offset&&e.length){const t=(n-i)/Math.max(e.length-1,1)/2;i-=t,n+=t}t._startValue=i,t._endValue=n,t._valueRange=n-i}getLabelForValue(t){return Object(n.Hb)(t,this.chart.options.locale)}}class ji extends Oi{determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!0);t.min=Object(n.Ab)(e)?e:0,t.max=Object(n.Ab)(i)?i:1,t.handleTickRangeOptions()}computeTickLimit(){const t=this,e=t.isHorizontal(),i=e?t.width:t.height,o=Object(n.Nb)(t.options.ticks.minRotation),s=(e?Math.sin(o):Math.cos(o))||.001,a=t._resolveTickFontOptions(0);return Math.ceil(i/Math.min(40,a.lineHeight/s))}getPixelForValue(t){return null===t?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getValueForPixel(t){return this._startValue+this.getDecimalForPixel(t)*this._valueRange}}function Mi(t){return 1===t/Math.pow(10,Math.floor(Object(n.k)(t)))}ji.id=\"linear\",ji.defaults={ticks:{callback:Mt.formatters.numeric}};class wi extends Tt{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._valueRange=0}parse(t,e){const i=Oi.prototype.parse.apply(this,[t,e]);if(0!==i)return Object(n.Ab)(i)&&i>0?i:null;this._zero=!0}determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!0);t.min=Object(n.Ab)(e)?Math.max(0,e):null,t.max=Object(n.Ab)(i)?Math.max(0,i):null,t.options.beginAtZero&&(t._zero=!0),t.handleTickRangeOptions()}handleTickRangeOptions(){const t=this,{minDefined:e,maxDefined:i}=t.getUserBounds();let o=t.min,s=t.max;const a=t=>o=e?o:t,r=t=>s=i?s:t,l=(t,e)=>Math.pow(10,Math.floor(Object(n.k)(t))+e);o===s&&(o<=0?(a(1),r(10)):(a(l(o,-1)),r(l(s,1)))),o<=0&&a(l(s,-1)),s<=0&&r(l(o,1)),t._zero&&t.min!==t._suggestedMin&&o===l(t.min,0)&&a(l(o,-1)),t.min=o,t.max=s}buildTicks(){const t=this,e=t.options,i=function(t,e){const i=Math.floor(Object(n.k)(e.max)),o=Math.ceil(e.max/Math.pow(10,i)),s=[];let a=Object(n.m)(t.min,Math.pow(10,Math.floor(Object(n.k)(e.min)))),r=Math.floor(Object(n.k)(a)),l=Math.floor(a/Math.pow(10,r)),c=r<0?Math.pow(10,Math.abs(r)):1;do{s.push({value:a,major:Mi(a)}),++l,10===l&&(l=1,++r,c=r>=0?1:c),a=Math.round(l*Math.pow(10,r)*c)/c}while(r<i||r===i&&l<o);const h=Object(n.m)(t.max,a);return s.push({value:h,major:Mi(a)}),s}({min:t._userMin,max:t._userMax},t);return\"ticks\"===e.bounds&&Object(n.N)(i,t,\"value\"),e.reverse?(i.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),i}getLabelForValue(t){return void 0===t?\"0\":Object(n.Hb)(t,this.chart.options.locale)}configure(){const t=this,e=t.min;super.configure(),t._startValue=Object(n.k)(e),t._valueRange=Object(n.k)(t.max)-Object(n.k)(e)}getPixelForValue(t){const e=this;return void 0!==t&&0!==t||(t=e.min),null===t||isNaN(t)?NaN:e.getPixelForDecimal(t===e.min?0:(Object(n.k)(t)-e._startValue)/e._valueRange)}getValueForPixel(t){const e=this,i=e.getDecimalForPixel(t);return Math.pow(10,e._startValue+i*e._valueRange)}}function ki(t){const e=t.ticks;if(e.display&&t.display){const t=Object(n.b)(e.backdropPadding);return Object(n.Pb)(e.font&&e.font.size,n.xb.font.size)+t.height}return 0}function Si(t,e,i,n,o){return t===n||t===o?{start:e-i/2,end:e+i/2}:t<n||t>o?{start:e-i,end:e}:{start:e,end:e+i}}function Di(t){const e={l:0,r:t.width,t:0,b:t.height-t.paddingTop},i={},o=[],s=[],a=t.getLabels().length;for(let h=0;h<a;h++){const a=t.options.pointLabels.setContext(t.getPointLabelContext(h));s[h]=a.padding;const d=t.getPointPosition(h,t.drawingArea+s[h]),u=Object(n.y)(a.font),g=(r=t.ctx,l=u,c=t._pointLabels[h],c=Object(n.vb)(c)?c:[c],{w:Object(n.S)(r,l.string,c),h:c.length*l.lineHeight});o[h]=g;const b=t.getIndexAngle(h),p=Object(n.p)(b),f=Si(p,d.x,g.w,0,180),m=Si(p,d.y,g.h,90,270);f.start<e.l&&(e.l=f.start,i.l=b),f.end>e.r&&(e.r=f.end,i.r=b),m.start<e.t&&(e.t=m.start,i.t=b),m.end>e.b&&(e.b=m.end,i.b=b)}var r,l,c;t._setReductions(t.drawingArea,e,i),t._pointLabelItems=function(t,e,i){const o=[],s=t.getLabels().length,a=t.options,r=ki(a),l=t.getDistanceFromCenterForValue(a.ticks.reverse?t.min:t.max);for(let c=0;c<s;c++){const s=0===c?r/2:0,a=t.getPointPosition(c,l+s+i[c]),h=Object(n.p)(t.getIndexAngle(c)),d=e[c],u=Ai(a.y,d.h,h),g=Pi(h),b=Ci(a.x,d.w,g);o.push({x:a.x,y:u,textAlign:g,left:b,top:u,right:b+d.w,bottom:u+d.h})}return o}(t,o,s)}function Pi(t){return 0===t||180===t?\"center\":t<180?\"left\":\"right\"}function Ci(t,e,i){return\"right\"===i?t-=e:\"center\"===i&&(t-=e/2),t}function Ai(t,e,i){return 90===i||270===i?t-=e/2:(i>270||i<90)&&(t-=e),t}function Li(t,e,i,o){const{ctx:s}=t;if(i)s.arc(t.xCenter,t.yCenter,e,0,n.u);else{let i=t.getPointPosition(0,e);s.moveTo(i.x,i.y);for(let n=1;n<o;n++)i=t.getPointPosition(n,e),s.lineTo(i.x,i.y)}}function Ti(t){return Object(n.Jb)(t)?t:0}wi.id=\"logarithmic\",wi.defaults={ticks:{callback:Mt.formatters.logarithmic,major:{enabled:!0}}};class Ei extends Oi{constructor(t){super(t),this.xCenter=void 0,this.yCenter=void 0,this.drawingArea=void 0,this._pointLabels=[],this._pointLabelItems=[]}setDimensions(){const t=this;t.width=t.maxWidth,t.height=t.maxHeight,t.paddingTop=ki(t.options)/2,t.xCenter=Math.floor(t.width/2),t.yCenter=Math.floor((t.height-t.paddingTop)/2),t.drawingArea=Math.min(t.height-t.paddingTop,t.width)/2}determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!1);t.min=Object(n.Ab)(e)&&!isNaN(e)?e:0,t.max=Object(n.Ab)(i)&&!isNaN(i)?i:0,t.handleTickRangeOptions()}computeTickLimit(){return Math.ceil(this.drawingArea/ki(this.options))}generateTickLabels(t){const e=this;Oi.prototype.generateTickLabels.call(e,t),e._pointLabels=e.getLabels().map(((t,i)=>{const o=Object(n.n)(e.options.pointLabels.callback,[t,i],e);return o||0===o?o:\"\"}))}fit(){const t=this,e=t.options;e.display&&e.pointLabels.display?Di(t):t.setCenterPoint(0,0,0,0)}_setReductions(t,e,i){const n=this;let o=e.l/Math.sin(i.l),s=Math.max(e.r-n.width,0)/Math.sin(i.r),a=-e.t/Math.cos(i.t),r=-Math.max(e.b-(n.height-n.paddingTop),0)/Math.cos(i.b);o=Ti(o),s=Ti(s),a=Ti(a),r=Ti(r),n.drawingArea=Math.max(t/2,Math.min(Math.floor(t-(o+s)/2),Math.floor(t-(a+r)/2))),n.setCenterPoint(o,s,a,r)}setCenterPoint(t,e,i,n){const o=this,s=o.width-e-o.drawingArea,a=t+o.drawingArea,r=i+o.drawingArea,l=o.height-o.paddingTop-n-o.drawingArea;o.xCenter=Math.floor((a+s)/2+o.left),o.yCenter=Math.floor((r+l)/2+o.top+o.paddingTop)}getIndexAngle(t){const e=n.u/this.getLabels().length,i=this.options.startAngle||0;return Object(n.ob)(t*e+Object(n.Nb)(i))}getDistanceFromCenterForValue(t){const e=this;if(Object(n.Db)(t))return NaN;const i=e.drawingArea/(e.max-e.min);return e.options.reverse?(e.max-t)*i:(t-e.min)*i}getValueForDistanceFromCenter(t){if(Object(n.Db)(t))return NaN;const e=this,i=t/(e.drawingArea/(e.max-e.min));return e.options.reverse?e.max-i:e.min+i}getPointLabelContext(t){const e=this,i=e._pointLabels||[];if(t>=0&&t<i.length){const n=i[t];return function(t,e,i){return Object.assign(Object.create(t),{label:i,index:e,type:\"pointLabel\"})}(e.getContext(),t,n)}}getPointPosition(t,e){const i=this,o=i.getIndexAngle(t)-n.i;return{x:Math.cos(o)*e+i.xCenter,y:Math.sin(o)*e+i.yCenter,angle:o}}getPointPositionForValue(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))}getBasePosition(t){return this.getPointPositionForValue(t||0,this.getBaseValue())}getPointLabelPosition(t){const{left:e,top:i,right:n,bottom:o}=this._pointLabelItems[t];return{left:e,top:i,right:n,bottom:o}}drawBackground(){const t=this,{backgroundColor:e,grid:{circular:i}}=t.options;if(e){const n=t.ctx;n.save(),n.beginPath(),Li(t,t.getDistanceFromCenterForValue(t._endValue),i,t.getLabels().length),n.closePath(),n.fillStyle=e,n.fill(),n.restore()}}drawGrid(){const t=this,e=t.ctx,i=t.options,{angleLines:o,grid:s}=i,a=t.getLabels().length;let r,l,c;if(i.pointLabels.display&&function(t,e){const{ctx:i,options:{pointLabels:o}}=t;for(let s=e-1;s>=0;s--){const e=o.setContext(t.getPointLabelContext(s)),a=Object(n.y)(e.font),{x:r,y:l,textAlign:c,left:h,top:d,right:u,bottom:g}=t._pointLabelItems[s],{backdropColor:b}=e;if(!Object(n.Db)(b)){const t=Object(n.b)(e.backdropPadding);i.fillStyle=b,i.fillRect(h-t.left,d-t.top,u-h+t.width,g-d+t.height)}Object(n.w)(i,t._pointLabels[s],r,l+a.lineHeight/2,a,{color:e.color,textAlign:c,textBaseline:\"middle\"})}}(t,a),s.display&&t.ticks.forEach(((e,i)=>{if(0!==i){l=t.getDistanceFromCenterForValue(e.value);const n=s.setContext(t.getContext(i-1));!function(t,e,i,n){const o=t.ctx,s=e.circular,{color:a,lineWidth:r}=e;!s&&!n||!a||!r||i<0||(o.save(),o.strokeStyle=a,o.lineWidth=r,o.setLineDash(e.borderDash),o.lineDashOffset=e.borderDashOffset,o.beginPath(),Li(t,i,s,n),o.closePath(),o.stroke(),o.restore())}(t,n,l,a)}})),o.display){for(e.save(),r=t.getLabels().length-1;r>=0;r--){const n=o.setContext(t.getPointLabelContext(r)),{color:s,lineWidth:a}=n;a&&s&&(e.lineWidth=a,e.strokeStyle=s,e.setLineDash(n.borderDash),e.lineDashOffset=n.borderDashOffset,l=t.getDistanceFromCenterForValue(i.ticks.reverse?t.min:t.max),c=t.getPointPosition(r,l),e.beginPath(),e.moveTo(t.xCenter,t.yCenter),e.lineTo(c.x,c.y),e.stroke())}e.restore()}}drawBorder(){}drawLabels(){const t=this,e=t.ctx,i=t.options,o=i.ticks;if(!o.display)return;const s=t.getIndexAngle(0);let a,r;e.save(),e.translate(t.xCenter,t.yCenter),e.rotate(s),e.textAlign=\"center\",e.textBaseline=\"middle\",t.ticks.forEach(((s,l)=>{if(0===l&&!i.reverse)return;const c=o.setContext(t.getContext(l)),h=Object(n.y)(c.font);if(a=t.getDistanceFromCenterForValue(t.ticks[l].value),c.showLabelBackdrop){e.font=h.string,r=e.measureText(s.label).width,e.fillStyle=c.backdropColor;const t=Object(n.b)(c.backdropPadding);e.fillRect(-r/2-t.left,-a-h.size/2-t.top,r+t.width,h.size+t.height)}Object(n.w)(e,s.label,0,-a,h,{color:c.color})})),e.restore()}drawTitle(){}}Ei.id=\"radialLinear\",Ei.defaults={display:!0,animate:!0,position:\"chartArea\",angleLines:{display:!0,lineWidth:1,borderDash:[],borderDashOffset:0},grid:{circular:!1},startAngle:0,ticks:{showLabelBackdrop:!0,callback:Mt.formatters.numeric},pointLabels:{backdropColor:void 0,backdropPadding:2,display:!0,font:{size:10},callback:t=>t,padding:5}},Ei.defaultRoutes={\"angleLines.color\":\"borderColor\",\"pointLabels.color\":\"color\",\"ticks.color\":\"color\"},Ei.descriptors={angleLines:{_fallback:\"grid\"}};const Ri={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},zi=Object.keys(Ri);function Fi(t,e){return t-e}function Ii(t,e){if(Object(n.Db)(e))return null;const i=t._adapter,{parser:o,round:s,isoWeekday:a}=t._parseOpts;let r=e;return\"function\"===typeof o&&(r=o(r)),Object(n.Ab)(r)||(r=\"string\"===typeof o?i.parse(r,o):i.parse(r)),null===r?null:(s&&(r=\"week\"!==s||!Object(n.Jb)(a)&&!0!==a?i.startOf(r,s):i.startOf(r,\"isoWeek\",a)),+r)}function Vi(t,e,i,n){const o=zi.length;for(let s=zi.indexOf(t);s<o-1;++s){const t=Ri[zi[s]],o=t.steps?t.steps:Number.MAX_SAFE_INTEGER;if(t.common&&Math.ceil((i-e)/(o*t.size))<=n)return zi[s]}return zi[o-1]}function Bi(t,e,i){if(i){if(i.length){const{lo:o,hi:s}=Object(n.U)(i,e);t[i[o]>=e?i[o]:i[s]]=!0}}else t[e]=!0}function Ni(t,e,i){const n=[],o={},s=e.length;let a,r;for(a=0;a<s;++a)r=e[a],o[r]=a,n.push({value:r,major:!1});return 0!==s&&i?function(t,e,i,n){const o=t._adapter,s=+o.startOf(e[0].value,n),a=e[e.length-1].value;let r,l;for(r=s;r<=a;r=+o.add(r,1,n))l=i[r],l>=0&&(e[l].major=!0);return e}(t,n,o,i):n}class Wi extends Tt{constructor(t){super(t),this._cache={data:[],labels:[],all:[]},this._unit=\"day\",this._majorUnit=void 0,this._offsets={},this._normalized=!1,this._parseOpts=void 0}init(t,e){const i=t.time||(t.time={}),o=this._adapter=new B._date(t.adapters.date);Object(n.K)(i.displayFormats,o.formats()),this._parseOpts={parser:i.parser,round:i.round,isoWeekday:i.isoWeekday},super.init(t),this._normalized=e.normalized}parse(t,e){return void 0===t?null:Ii(this,t)}beforeLayout(){super.beforeLayout(),this._cache={data:[],labels:[],all:[]}}determineDataLimits(){const t=this,e=t.options,i=t._adapter,o=e.time.unit||\"day\";let{min:s,max:a,minDefined:r,maxDefined:l}=t.getUserBounds();function c(t){r||isNaN(t.min)||(s=Math.min(s,t.min)),l||isNaN(t.max)||(a=Math.max(a,t.max))}r&&l||(c(t._getLabelBounds()),\"ticks\"===e.bounds&&\"labels\"===e.ticks.source||c(t.getMinMax(!1))),s=Object(n.Ab)(s)&&!isNaN(s)?s:+i.startOf(Date.now(),o),a=Object(n.Ab)(a)&&!isNaN(a)?a:+i.endOf(Date.now(),o)+1,t.min=Math.min(s,a-1),t.max=Math.max(s+1,a)}_getLabelBounds(){const t=this.getLabelTimestamps();let e=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;return t.length&&(e=t[0],i=t[t.length-1]),{min:e,max:i}}buildTicks(){const t=this,e=t.options,i=e.time,o=e.ticks,s=\"labels\"===o.source?t.getLabelTimestamps():t._generate();\"ticks\"===e.bounds&&s.length&&(t.min=t._userMin||s[0],t.max=t._userMax||s[s.length-1]);const a=t.min,r=t.max,l=Object(n.T)(s,a,r);return t._unit=i.unit||(o.autoSkip?Vi(i.minUnit,t.min,t.max,t._getLabelCapacity(a)):function(t,e,i,n,o){for(let s=zi.length-1;s>=zi.indexOf(i);s--){const i=zi[s];if(Ri[i].common&&t._adapter.diff(o,n,i)>=e-1)return i}return zi[i?zi.indexOf(i):0]}(t,l.length,i.minUnit,t.min,t.max)),t._majorUnit=o.major.enabled&&\"year\"!==t._unit?function(t){for(let e=zi.indexOf(t)+1,i=zi.length;e<i;++e)if(Ri[zi[e]].common)return zi[e]}(t._unit):void 0,t.initOffsets(s),e.reverse&&l.reverse(),Ni(t,l,t._majorUnit)}initOffsets(t){const e=this;let i,o,s=0,a=0;e.options.offset&&t.length&&(i=e.getDecimalForValue(t[0]),s=1===t.length?1-i:(e.getDecimalForValue(t[1])-i)/2,o=e.getDecimalForValue(t[t.length-1]),a=1===t.length?o:(o-e.getDecimalForValue(t[t.length-2]))/2);const r=t.length<3?.5:.25;s=Object(n.Kb)(s,0,r),a=Object(n.Kb)(a,0,r),e._offsets={start:s,end:a,factor:1/(s+1+a)}}_generate(){const t=this,e=t._adapter,i=t.min,o=t.max,s=t.options,a=s.time,r=a.unit||Vi(a.minUnit,i,o,t._getLabelCapacity(i)),l=Object(n.Pb)(a.stepSize,1),c=\"week\"===r&&a.isoWeekday,h=Object(n.Jb)(c)||!0===c,d={};let u,g,b=i;if(h&&(b=+e.startOf(b,\"isoWeek\",c)),b=+e.startOf(b,h?\"day\":r),e.diff(o,i,r)>1e5*l)throw new Error(i+\" and \"+o+\" are too far apart with stepSize of \"+l+\" \"+r);const p=\"data\"===s.ticks.source&&t.getDataTimestamps();for(u=b,g=0;u<o;u=+e.add(u,l,r),g++)Bi(d,u,p);return u!==o&&\"ticks\"!==s.bounds&&1!==g||Bi(d,u,p),Object.keys(d).sort(((t,e)=>t-e)).map((t=>+t))}getLabelForValue(t){const e=this._adapter,i=this.options.time;return i.tooltipFormat?e.format(t,i.tooltipFormat):e.format(t,i.displayFormats.datetime)}_tickFormatFunction(t,e,i,o){const s=this,a=s.options,r=a.time.displayFormats,l=s._unit,c=s._majorUnit,h=l&&r[l],d=c&&r[c],u=i[e],g=c&&d&&u&&u.major,b=s._adapter.format(t,o||(g?d:h)),p=a.ticks.callback;return p?Object(n.n)(p,[b,e,i],s):b}generateTickLabels(t){let e,i,n;for(e=0,i=t.length;e<i;++e)n=t[e],n.label=this._tickFormatFunction(n.value,e,t)}getDecimalForValue(t){const e=this;return null===t?NaN:(t-e.min)/(e.max-e.min)}getPixelForValue(t){const e=this,i=e._offsets,n=e.getDecimalForValue(t);return e.getPixelForDecimal((i.start+n)*i.factor)}getValueForPixel(t){const e=this,i=e._offsets,n=e.getDecimalForPixel(t)/i.factor-i.end;return e.min+n*(e.max-e.min)}_getLabelSize(t){const e=this,i=e.options.ticks,o=e.ctx.measureText(t).width,s=Object(n.Nb)(e.isHorizontal()?i.maxRotation:i.minRotation),a=Math.cos(s),r=Math.sin(s),l=e._resolveTickFontOptions(0).size;return{w:o*a+l*r,h:o*r+l*a}}_getLabelCapacity(t){const e=this,i=e.options.time,n=i.displayFormats,o=n[i.unit]||n.millisecond,s=e._tickFormatFunction(t,0,Ni(e,[t],e._majorUnit),o),a=e._getLabelSize(s),r=Math.floor(e.isHorizontal()?e.width/a.w:e.height/a.h)-1;return r>0?r:1}getDataTimestamps(){const t=this;let e,i,n=t._cache.data||[];if(n.length)return n;const o=t.getMatchingVisibleMetas();if(t._normalized&&o.length)return t._cache.data=o[0].controller.getAllParsedValues(t);for(e=0,i=o.length;e<i;++e)n=n.concat(o[e].controller.getAllParsedValues(t));return t._cache.data=t.normalize(n)}getLabelTimestamps(){const t=this,e=t._cache.labels||[];let i,n;if(e.length)return e;const o=t.getLabels();for(i=0,n=o.length;i<n;++i)e.push(Ii(t,o[i]));return t._cache.labels=t._normalized?e:t.normalize(e)}normalize(t){return Object(n.B)(t.sort(Fi))}}function Hi(t,e,i){let o,s,a,r,l=0,c=t.length-1;i?(e>=t[l].pos&&e<=t[c].pos&&({lo:l,hi:c}=Object(n.Qb)(t,\"pos\",e)),({pos:o,time:a}=t[l]),({pos:s,time:r}=t[c])):(e>=t[l].time&&e<=t[c].time&&({lo:l,hi:c}=Object(n.Qb)(t,\"time\",e)),({time:o,pos:a}=t[l]),({time:s,pos:r}=t[c]));const h=s-o;return h?a+(r-a)*(e-o)/h:a}Wi.id=\"time\",Wi.defaults={bounds:\"data\",adapters:{},time:{parser:!1,unit:!1,round:!1,isoWeekday:!1,minUnit:\"millisecond\",displayFormats:{}},ticks:{source:\"auto\",major:{enabled:!1}}};class $i extends Wi{constructor(t){super(t),this._table=[],this._minPos=void 0,this._tableRange=void 0}initOffsets(){const t=this,e=t._getTimestampsForTable(),i=t._table=t.buildLookupTable(e);t._minPos=Hi(i,t.min),t._tableRange=Hi(i,t.max)-t._minPos,super.initOffsets(e)}buildLookupTable(t){const{min:e,max:i}=this,n=[],o=[];let s,a,r,l,c;for(s=0,a=t.length;s<a;++s)l=t[s],l>=e&&l<=i&&n.push(l);if(n.length<2)return[{time:e,pos:0},{time:i,pos:1}];for(s=0,a=n.length;s<a;++s)c=n[s+1],r=n[s-1],l=n[s],Math.round((c+r)/2)!==l&&o.push({time:l,pos:s/(a-1)});return o}_getTimestampsForTable(){const t=this;let e=t._cache.all||[];if(e.length)return e;const i=t.getDataTimestamps(),n=t.getLabelTimestamps();return e=i.length&&n.length?t.normalize(i.concat(n)):i.length?i:n,e=t._cache.all=e,e}getDecimalForValue(t){return(Hi(this._table,t)-this._minPos)/this._tableRange}getValueForPixel(t){const e=this,i=e._offsets,n=e.getDecimalForPixel(t)/i.factor-i.end;return Hi(e._table,n*e._tableRange+e._minPos,!0)}}$i.id=\"timeseries\",$i.defaults=Wi.defaults;const Ui=[F,Ce,xi,Object.freeze({__proto__:null,CategoryScale:yi,LinearScale:ji,LogarithmicScale:wi,RadialLinearScale:Ei,TimeScale:Wi,TimeSeriesScale:$i})]}}]);","map":{"version":3,"sources":["static/chunks/36bcf0ca.41b435e80078e718e53a.js"],"names":["window","push","m0r1","module","__webpack_exports__","__webpack_require__","d","Chart","registerables","_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__","animator","[object Object]","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","me","call","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","reduce","acc","cur","max","_duration","cancel","delete","transparent","interpolators","boolean","from","to","factor","c0","Object","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","active","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","props","charAt","_animateOptions","value","update","size","add","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","adata","Array","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","getMaxOverflow","elements","area","chartArea","element","hidden","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","create","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","args","arguments","_sync","computeMinSampleSize","_cache","$bar","metas","concat","getAllParsedValues","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","grouped","val","isNaN","indexOf","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","ratio","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","rotation","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","canvas","listener","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","removeEventListener","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","container","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","clientWidth","ResizeObserver","contentRect","addEventListener","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","node","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","getProps","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","registerDefaults","registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","console","error","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","getMaximumSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","isFunction","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","onClick","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","version","unregister","ArcElement","chartX","chartY","rAdjust","halfAngle","halfRadius","radiusOffset","translate","drawArc","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","segments","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","inflateAmount","cleanDecimatedDataset","defineProperty","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","configurable","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","parseFloat","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","findSegmentEnd","buildStackLine","sourcePoints","linesBelow","below","isLineAndNotInHideAnimation","unshift","getLinesBelow","createBoundaryLine","addPointsBelow","sourcePoint","postponed","findPoint","interpolate","pointValue","linePoints","firstValue","lastValue","boundary","pointsFromSegments","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","lineLoop","targetLoop","drawfill","getLineByIndex","getTarget","lineOpts","above","doFill","plugin_filler","_args","$filler","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","labelCount","Decimation","Filler","SubTitle","findOrAddLabel","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","getDecimalForPixel","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","pathRadiusLine","numberOrZero","param","logarithmic","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"mappings":"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"},"name":"static/chunks/36bcf0ca.41b435e80078e718e53a.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[6],{\n\n/***/ \"m0r1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Animation */\n/* unused harmony export Animations */\n/* unused harmony export ArcElement */\n/* unused harmony export BarController */\n/* unused harmony export BarElement */\n/* unused harmony export BasePlatform */\n/* unused harmony export BasicPlatform */\n/* unused harmony export BubbleController */\n/* unused harmony export CategoryScale */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Chart; });\n/* unused harmony export DatasetController */\n/* unused harmony export Decimation */\n/* unused harmony export DomPlatform */\n/* unused harmony export DoughnutController */\n/* unused harmony export Element */\n/* unused harmony export Filler */\n/* unused harmony export Interaction */\n/* unused harmony export Legend */\n/* unused harmony export LineController */\n/* unused harmony export LineElement */\n/* unused harmony export LinearScale */\n/* unused harmony export LogarithmicScale */\n/* unused harmony export PieController */\n/* unused harmony export PointElement */\n/* unused harmony export PolarAreaController */\n/* unused harmony export RadarController */\n/* unused harmony export RadialLinearScale */\n/* unused harmony export Scale */\n/* unused harmony export ScatterController */\n/* unused harmony export SubTitle */\n/* unused harmony export Ticks */\n/* unused harmony export TimeScale */\n/* unused harmony export TimeSeriesScale */\n/* unused harmony export Title */\n/* unused harmony export Tooltip */\n/* unused harmony export _adapters */\n/* unused harmony export _detectPlatform */\n/* unused harmony export animator */\n/* unused harmony export controllers */\n/* unused harmony export elements */\n/* unused harmony export layouts */\n/* unused harmony export plugins */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return registerables; });\n/* unused harmony export registry */\n/* unused harmony export scales */\n/* harmony import */ var _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"3T2N\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[\"xb\"]; });\n\n/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\n\n\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* r */ \"Lb\"].call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"wb\"])(from || transparent);\n    const c1 = c0.valid && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"wb\"])(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.to, to, currentValue, cfg.from]);\n    const from = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* e */ \"yb\"][cfg.easing] || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* e */ \"yb\"].linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.to, to, currentValue, cfg.from]);\n      me._from = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].animation);\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].describe('animations', {\n  _fallback: 'animation',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(otherValue) && (singleMode || (value === 0 || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(value) === Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* u */ \"Ob\"])(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* u */ \"Ob\"])(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* l */ \"Fb\"])(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(item, xAxisKey), index),\n        y: yScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"Bb\"])(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ \"B\"])(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"Bb\"])(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(obj, iAxisKey), i);\n      parsed.push(parseValue(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(value) !== Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(item, xAxisKey), i),\n        y: yScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* o */ \"Ib\"])(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* o */ \"Ib\"])(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startY, endY);\n    const minX = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"], startX, endX);\n    const minY = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    let max = -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Eb\"])(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Gb\"])(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* n */ \"Hb\"])(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Jb\"])(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(Math.min(\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(Math.max(\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* n */ \"Hb\"])(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"];\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* z */ \"Tb\"] : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"];\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Sb\"])(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Sb\"])(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Sb\"])(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"Bb\"])(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"Bb\"])(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* E */ \"f\"])(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* E */ \"f\"])(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* G */ \"h\"] ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* I */ \"j\"])() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Jb\"])(this.x) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Jb\"])(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"])(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* n */ \"Hb\"])(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"])(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].route('scale.ticks', 'color', '', 'color');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].route('scale.grid', 'color', '', 'borderColor');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].route('scale.grid', 'borderColor', '', 'borderColor');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].route('scale.title', 'color', '', 'color');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].describe('scales', {\n  _fallback: 'scale',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(majorStart, 0);\n  const end = Math.min(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(options.font, fallback);\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(options.padding);\n  const lines = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, left, right);\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, bottom, top);\n    rotation = position === 'left' ? -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"] : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"];\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(_userMin, _suggestedMin),\n      max: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(_userMax, _suggestedMax),\n      minDefined: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(_userMin),\n      maxDefined: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(min, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(max, min)),\n      max: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(max, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* O */ \"p\"])(Math.min(\n        Math.asin(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(label) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(label)) {\n        width = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(nestedLabel) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(nestedLabel)) {\n            width = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* R */ \"s\"])(me._alignToPixels ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* S */ \"t\"])(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* S */ \"t\"])(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* S */ \"t\"])(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* S */ \"t\"])(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* S */ \"t\"])(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* S */ \"t\"])(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* S */ \"t\"])(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(title.font);\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(position)) {\n      offset += padding.bottom;\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"][scope]) {\n      delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"][scope][id];\n      if (this.override) {\n        delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* $ */ \"a\"][id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a0 */ \"D\"])(Object.create(null), [\n    parentScope ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].get(parentScope) : {},\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].get(scope),\n    item.defaults\n  ]);\n  _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a1 */ \"E\"])(method);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(component['before' + camelMethod], [], component);\n    registry[method](component);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* $ */ \"a\"][config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a7 */ \"K\"])(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* $ */ \"a\"][type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a7 */ \"K\"])(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a7 */ \"K\"])(scale, [_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].scales[scale.type], _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* $ */ \"a\"][type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"], key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a2 */ \"F\"], key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* $ */ \"a\"][type] || {},\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].datasets[type] || {},\n      {type},\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"],\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a2 */ \"F\"]\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a3 */ \"G\"])(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a4 */ \"H\"])(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(context)\n      ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a4 */ \"H\"])(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a5 */ \"I\"])(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a3 */ \"G\"])(proxy[prop]))\n      || (isIndexable(prop) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* I */ \"j\"])() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a8 */ \"L\"])();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a9 */ \"M\"])(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aa */ \"V\"])(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ab */ \"W\"])(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aa */ \"V\"])(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ac */ \"X\"])(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"Bb\"])(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ab */ \"W\"])(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ad */ \"Y\"])(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Sb\"])(e, me.chartArea, me._minPadding)) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ad */ \"Y\"])(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"]\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* $ */ \"a\"]\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* af */ \"ab\"])(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(o.innerStart, 0, innerLimit),\n    innerEnd: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"]) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n      if (circumference % _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] === 0) {\n        endAngle += _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"], startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ae */ \"Z\"])(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* o */ \"Ib\"])(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] ? Math.floor(circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"]) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* am */ \"hb\"];\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"ib\"];\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aj */ \"eb\"];\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ak */ \"fb\"];\n  }\n  return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* al */ \"gb\"];\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ag */ \"bb\"])(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ah */ \"cb\"])(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ai */ \"db\"])(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Sb\"])(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"jb\"])(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aq */ \"lb\"])(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ar */ \"mb\"])(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ap */ \"kb\"] : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(minIndex) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"ob\"])(start);\n    end = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"ob\"])(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ai */ \"db\"])(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"nb\"])(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* au */ \"pb\"])(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(ctx, me);\n      me._draw();\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].color;\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* au */ \"pb\"])(opts.rtl, me.left, me.width);\n    const labelFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.lineWidth, 1);\n      ctx.fillStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"jb\"])(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ar */ \"mb\"])(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ap */ \"kb\"])(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* av */ \"qb\"])(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"rb\"])(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"sb\"])(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(titleOpts.font);\n    const titlePadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* au */ \"pb\"])(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(titleOpts.font);\n    const titlePadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(opts.text) ? opts.text.length : 1;\n    me._padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(opts.padding);\n    const textSize = lineCount * Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, bottom, top);\n        rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"])(align, top, bottom);\n        rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* az */ \"ub\"])(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(options.bodyFont);\n  const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(options.titleFont);\n  const footerFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(body, (bodyItem) => {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(bodyItem.before, maxLineWidth);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(bodyItem.lines, maxLineWidth);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(x, 0, chart.width - size.width),\n    y: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* au */ \"pb\"])(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"jb\"])(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"jb\"])(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ar */ \"mb\"])(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ap */ \"kb\"])(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ap */ \"kb\"])(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* au */ \"pb\"])(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"])(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* au */ \"pb\"])(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* av */ \"qb\"])(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"sb\"])(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ad */ \"Y\"])(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ad */ \"Y\"])(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"tb\"],\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"tb\"],\n      beforeBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"tb\"],\n      beforeLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"tb\"],\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"tb\"],\n      afterBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"tb\"],\n      beforeFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"tb\"],\n      footer: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"tb\"],\n      afterFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"tb\"]\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(min);\n  const maxDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(max);\n  const countDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aB */ \"O\"])((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aB */ \"O\"])(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aC */ \"P\"])((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aD */ \"Q\"])(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aE */ \"R\"])(spacing),\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aE */ \"R\"])(niceMin)\n  );\n  factor = Math.pow(10, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aD */ \"Q\"])(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aD */ \"Q\"])(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(min);\n      const maxSign = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aA */ \"N\"])(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* n */ \"Hb\"])(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(min) ? min : 0;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"])(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"])(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(generationOptions.min, Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"])(dataRange.min))));\n  let exp = Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"])(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(min) ? Math.max(0, min) : null;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"])(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aA */ \"N\"])(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* n */ \"Hb\"])(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"])(start);\n    me._valueRange = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"])(me.max) - Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"])(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"])(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(tickOpts.backdropPadding);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(tickOpts.font && tickOpts.font.size, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(label) ? label : [label];\n  return {\n    w: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aF */ \"S\"])(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* O */ \"p\"])(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* O */ \"p\"])(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(backdropColor)) {\n      const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Jb\"])(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(min) && !isNaN(min) ? min : 0;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"ob\"])(index * angleMultiplier + Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"];\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Jb\"])(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aH */ \"U\"])(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a7 */ \"K\"])(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aG */ \"T\"])(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(start, 0, limit);\n    end = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Jb\"])(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ \"B\"])(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\n\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/media/darcdev/Archivos/Usuario/1-ESTUDIO/UNIVERSIDAD/V SEMESTRE/INGENIERIA DE SOFTWARE I/Proyecto/implementación/frontend/node_modules/chart.js/dist/chart.esm.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAC64D;AACj1D;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qEAAgB;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,eAAe,6EAAK;AACpB,2BAA2B,6EAAK;AAChC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4EAAO;AAChB,iBAAiB,4EAAO;AACxB;AACA;AACA,mBAAmB,qEAAO,gBAAgB,qEAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAAO;AACtB,iBAAiB,4EAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qCAAqC,qEAAQ;AAC7C,qEAAQ;AACR;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,qEAAQ;AACR;AACA,CAAC;AACD,qEAAQ;AACR;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAQ;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,6EAAO;AACd;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,YAAY,gCAAgC;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAc,+CAA+C,6EAAI,YAAY,6EAAI;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc,GAAG,cAAc,GAAG,wBAAwB;AACtE;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yBAAyB;AAClC,qDAAqD;AACrD,SAAS,oCAAoC;AAC7C;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA,WAAW,+BAA+B;AAC1C,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6EAAc;AAC7C,+BAA+B,6EAAc;AAC7C,+BAA+B,6EAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAQ;AAChB;AACA,KAAK;AACL;AACA,QAAQ,6EAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,UAAU,6EAAO;AACjB;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA,OAAO;AACP;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA,wBAAwB,6EAAgB;AACxC,wBAAwB,6EAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,UAAU;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,mBAAmB;AACnB,WAAW,6BAA6B;AACxC;AACA;AACA;AACA;AACA;AACA,cAAc,6EAAc;AAC5B;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA,UAAU,6EAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,6EAAO;AACrD;AACA;AACA;AACA;AACA;AACA,kCAAkC,YAAY;AAC9C;AACA,8BAA8B,qEAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA,wBAAwB,4EAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAO;AACf;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAa;AACnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA,uCAAuC,6EAAgB;AACvD,6BAA6B,6EAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA,+BAA+B,6EAAa,yBAAyB,iBAAiB;AACtF;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc,iBAAiB,YAAY,+BAA+B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAI,YAAY,6EAAI;AAC7C;AACA;AACA;AACA;AACA,wBAAwB,6EAAa;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6EAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,UAAU;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA,wBAAwB,6EAAgB;AACxC,wBAAwB,6EAAgB;AACxC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oEAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6EAAa;AAClD,qCAAqC,6EAAa;AAClD;AACA,yBAAyB,oEAAO;AAChC,yBAAyB,oEAAE;AAC3B,yBAAyB,oEAAE,GAAG,oEAAO;AACrC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA,WAAW,6EAAS;AACpB;AACA;AACA,WAAW,6EAAS;AACpB;AACA;AACA,cAAc,oEAAG;AACjB,eAAe,oEAAG;AAClB;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA,4BAA4B,6EAAY;AACxC;AACA,WAAW,wBAAwB;AACnC,WAAW,iCAAiC;AAC5C;AACA;AACA;AACA,wBAAwB,6EAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,oEAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oEAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc,6EAAO;AACrB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAQ;AACjC;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA,uBAAuB,6EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,iCAAiC;AAC5C;AACA,cAAc,6EAAW;AACzB,QAAQ,6EAAY;AACpB,0CAA0C,6EAAY;AACtD;AACA;AACA;AACA,cAAc,6EAAW;AACzB,QAAQ,6EAAY;AACpB,iCAAiC,6EAAY;AAC7C;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,6BAA6B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,oEAAE;AAC/D;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,6EAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmqB;AAC9B;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD,MAAM,YAAY;AAClB,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,iDAAiD,qEAAa,GAAG,qEAAY;AAC7E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,6EAAc;AACrB;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,6EAAc;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAc;AACvB;AACA;AACA;AACA;AACA,gBAAgB,6BAA6B;AAC7C;AACA,KAAK;AACL,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yCAAyC;AAClE;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,sBAAsB,yCAAyC;AAC/D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA,MAAM,yBAAyB,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA;AACA,sDAAsD,wCAAwC;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4BAA4B;AACrC;AACA,oCAAoC,UAAU;AAC9C;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;AAClB;AACA,OAAO,6EAAQ;AACf;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAK;AACZ;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,UAAU,6EAAO;AACjB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,UAAU,6EAAO;AACjB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC;AACvC,iCAAiC,4EAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,4BAA4B,4EAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oEAA4B,IAAI,cAAc;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,GAAG,6EAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA,mBAAmB,4EAAc;AACjC;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA;AACA,iBAAiB,4EAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4EAAS;AACzB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAa;AACvB;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA,sBAAsB,4EAAc;AACpC;AACA;AACA;;AAEA;AACA,OAAO,4EAAe;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA,WAAW,6EAAQ,YAAY,6EAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,6EAAO;AAClB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAK;AAC1B;AACA,qBAAqB;AACrB;AACA,WAAW,6EAAY;AACvB,GAAG;AACH;AACA;AACA;AACA;AACA,wDAAwD,4EAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR;AACA,CAAC;AACD,qEAAQ;AACR;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6EAAa;AAChD,2CAA2C,UAAU;AACrD;AACA;AACA,yCAAyC,6EAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAU;AAC5B,4CAA4C,UAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAAc;AAC9B,uBAAuB,6EAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,SAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAI;AACN;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAAM;AACrB,kBAAkB,4EAAS;AAC3B,gBAAgB,6EAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY,4EAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gCAAgC;AACzC,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAc;AAC3B,QAAQ,6EAAQ;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH,QAAQ,6EAAQ;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,aAAa,4EAAc;AAC3B,sCAAsC,oEAAO,GAAG,oEAAO;AACvD;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAiD;AAC1D,eAAe,4EAAe;AAC9B,eAAe,4EAAe;AAC9B,oBAAoB,4EAAe;AACnC,oBAAoB,4EAAe;AACnC;AACA,WAAW,4EAAe;AAC1B,WAAW,4EAAe;AAC1B,kBAAkB,6EAAc;AAChC,kBAAkB,6EAAc;AAChC;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA,cAAc;AACd;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAe,MAAM,4EAAe;AAC/C,WAAW,4EAAe,MAAM,4EAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA,mBAAmB,4EAAQ;AAC3B;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAS;AAC/B,kBAAkB,6EAAW;AAC7B,kBAAkB,6EAAW,mDAAmD,6EAAW;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB,mDAAmD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA,6BAA6B,6EAAS;AACtC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ,eAAe,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C,UAAU,6EAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA,WAAW,6EAAa,YAAY,6EAAO;AAC3C,gBAAgB,4EAAY;AAC5B;AACA,OAAO,UAAU,6EAAO;AACxB,wCAAwC,UAAU;AAClD;AACA,eAAe,6EAAa,kBAAkB,6EAAO;AACrD,oBAAoB,4EAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mDAAmD;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAW,qBAAqB,4EAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAc;AAChC;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAW;AACpC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA,sBAAsB,6EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,6BAA6B,4EAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,sBAAsB,6EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;AACA;AACA,WAAW,eAAe,gBAAgB,2BAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB,MAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAW;AACtB,WAAW,4EAAW;AACtB;AACA,KAAK;AACL,WAAW,4EAAW;AACtB,WAAW,4EAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAQ;AACd;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA;AACA,MAAM,4EAAU;AAChB;AACA;AACA;AACA,WAAW,eAAe,0BAA0B;AACpD;AACA;AACA;AACA,iBAAiB,4EAAM;AACvB,oBAAoB,4EAAS;AAC7B;AACA;AACA,0DAA0D,6EAAQ;AAClE;AACA,UAAU,6EAAO;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,mCAAmC;AAC9C,IAAI,4EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6EAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qEAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qEAAQ;AAC/B,aAAa,qEAAQ;AACrB;AACA,eAAe,oEAAS;AACxB;AACA;AACA;AACA;AACA;AACA,uBAAuB,6EAAK;AAC5B,kBAAkB,qEAAQ,sBAAsB;AAChD,IAAI,qEAAQ;AACZ;AACA;AACA,EAAE,qEAAQ;AACV;AACA;AACA;AACA;AACA,IAAI,qEAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qEAAQ;AACZ,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,QAAQ,4EAAI;AACZ;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,wBAAwB,6EAAW;AACnC,IAAI,4EAAQ;AACZ;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4EAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAc,6CAA6C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mDAAmD;AAC1G;;AAEA;AACA,0BAA0B,qEAAQ;AAClC,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oEAAS,kBAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6EAAO,wBAAwB,KAAK;AACrD,GAAG;AACH;AACA;AACA;AACA,4BAA4B,oEAAS;AACrC;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO,eAAe,KAAK;AACjC,KAAK;AACL,GAAG;AACH;AACA;AACA,IAAI,6EAAO,SAAS,qEAAQ,qBAAqB,qEAAQ;AACzD,GAAG;AACH;AACA;AACA;AACA,wDAAwD;AACxD,oBAAoB,6EAAc,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6EAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA,yBAAyB,YAAY,cAAc,WAAW;AAC9D;AACA;AACA,sBAAsB,YAAY,eAAe,WAAW;AAC5D,yBAAyB,WAAW;AACpC;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY,GAAG,YAAY;AACpD;AACA,oBAAoB,YAAY,YAAY,YAAY;AACxD,oBAAoB,YAAY;AAChC,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAK,UAAU,GAAG;AAC3C;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oEAAS,YAAY;AAClE,6CAA6C,qEAAQ;AACrD,6CAA6C,qEAAW;AACxD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,MAAM,oEAAS,YAAY;AAC3B,MAAM,qEAAQ,qBAAqB;AACnC,OAAO,KAAK;AACZ,MAAM,qEAAQ;AACd,MAAM,qEAAW;AACjB;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,sBAAsB;AACjC;AACA;AACA;AACA,gBAAgB,6EAAU;AAC1B;AACA,gBAAgB,6EAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,6EAAQ;AACnB,QAAQ,6EAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B,GAAG,6EAAY;AAClD;AACA,+BAA+B,6EAAU;AACzC,+BAA+B,6EAAO;AACtC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAQ;AACV;AACA;AACA;AACA;AACA,EAAE,4EAAQ;AACV;AACA;AACA,MAAM,4EAAe;AACrB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU,iCAAiC,8BAA8B;AACpF,SAAS,6EAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,6EAAW;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAW;AACpB;AACA;AACA,gCAAgC,cAAc;AAC9C,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL,IAAI,4EAAI;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,eAAe,oCAAoC,GAAG,qEAAQ;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAS;AAClB;AACA;AACA;AACA;AACA,0CAA0C,uBAAuB;AACjE;AACA;AACA;AACA;AACA;AACA,mDAAmD,UAAU;AAC7D,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA,OAAO;AACP;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA,mDAAmD,UAAU;AAC7D,8CAA8C,gBAAgB;AAC9D;AACA,6CAA6C,KAAK;AAClD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAQ;AACd;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2BAA2B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAO;AACf;AACA;AACA,KAAK;AACL;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAW;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,6EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAc;AACtB,MAAM,4EAAQ;AACd;AACA,QAAQ,4EAAQ;AAChB;AACA;AACA,eAAe,6EAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4EAAI;AACpC;AACA;AACA;AACA;AACA,WAAW,qEAAQ;AACnB,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,oEAAS;AACpB,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,SAAS,wDAAwD;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,0CAA0C,oEAAO,eAAe,oEAAO;AACvE;AACA;AACA;AACA;AACA;AACA,SAAS,8EAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAW;AACtB;AACA;AACA;AACA;AACA,gBAAgB,6EAAW;AAC3B,cAAc,6EAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0DAA0D;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,oEAAE;AAChE;AACA;AACA;AACA,SAAS,2CAA2C;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,oEAAO;AACrF;AACA;AACA;AACA;AACA;AACA,uDAAuD,oEAAO;AAC9D;AACA;AACA;AACA;AACA,8FAA8F,oEAAO;AACrG;AACA;AACA;AACA;AACA;AACA,2DAA2D,oEAAO;AAClE;AACA;AACA;AACA;AACA,SAAS,uCAAuC;AAChD;AACA;AACA,wDAAwD,oEAAG;AAC3D,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA,8CAA8C,oEAAG;AACjD,0BAA0B,oEAAG;AAC7B,oBAAoB,oEAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,2CAA2C;AACpD;AACA;AACA;AACA;AACA,uCAAuC,oEAAG;AAC1C;AACA;AACA,0CAA0C,oEAAG;AAC7C,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA,sDAAsD,oEAAG;AACzD,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB,GAAG,6EAAiB,SAAS,qBAAqB;AAC7E,WAAW,8DAA8D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oEAAG,IAAI,6EAAa;AAC/D;AACA;AACA;AACA;AACA,WAAW,qDAAqD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA,qCAAqC,oEAAG,8BAA8B,oEAAG;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oEAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,6EAAc;AAC9B,kBAAkB,6EAAc;AAChC,uBAAuB,6EAAc;AACrC,iBAAiB,6EAAc;AAC/B,kBAAkB,6EAAc;AAChC,oBAAoB,6EAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAc;AACzB;AACA;AACA,WAAW,sEAAc;AACzB;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,SAAS,mDAAmD;AAC5D,SAAS,qCAAqC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC;AACA,OAAO,qBAAqB;AAC5B;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAqB;AAChC;AACA;AACA,WAAW,sEAAoB;AAC/B;AACA,SAAS,sEAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA,2CAA2C,8BAA8B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAA0B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8EAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8EAAc,MAAM,mCAAmC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8BAA8B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,cAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6EAAc;AAC1D;AACA;AACA;AACA;AACA;AACA,IAAI,8EAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,oBAAoB,6EAAW;AAC/B;AACA;AACA;AACA;AACA,YAAY,8EAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B;AACA,YAAY,8EAAa;AACzB;AACA;AACA,6CAA6C,6EAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,kDAAkD,sEAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,6EAAa,eAAe,6EAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB,SAAS,iCAAiC;AAC1C;AACA,YAAY,6EAAW,CAAC,6EAAY;AACpC;AACA;AACA,YAAY,6EAAW,CAAC,6EAAY;AACpC,GAAG;AACH;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA,UAAU,4EAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kBAAkB;AAC/E;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,OAAO;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG,UAAU,6EAAQ;AACrB;AACA,GAAG;AACH;AACA;AACA,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,wBAAwB,eAAe,oEAAG;AAC1C;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG,UAAU,6EAAQ;AACrB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,mBAAmB,aAAa;AAChC,KAAK;AACL,mBAAmB,cAAc;AACjC,mBAAmB,aAAa;AAChC;AACA,GAAG;AACH;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,iBAAiB,qBAAqB;AACtC;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,kBAAkB;AAC3B,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAe;AAC3B,UAAU,8EAAe;AACzB;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,2BAA2B,8EAAc;AACzC;AACA;AACA,0BAA0B,8EAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qCAAqC;AAC9C;AACA,cAAc,qCAAqC;AACnD,WAAW,QAAQ,wBAAwB,MAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,yDAAyD,8BAA8B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;AACA;AACA;AACA;AACA,gBAAgB,4CAA4C;AAC5D;AACA;AACA;AACA;AACA,cAAc,4CAA4C;AAC1D;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA,IAAI,4EAAQ;AACZ,iBAAiB,8CAA8C;AAC/D,IAAI,4EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,0CAA0C;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB,SAAS,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,0BAA0B,SAAS,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAiD;AAC3E;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;AACA,sBAAsB,iDAAiD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC,gBAAgB,QAAQ,OAAO;AAC9E,sBAAsB,8EAAa;AACnC;AACA;AACA,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,4EAAc;AAC9B;AACA;AACA;AACA,gBAAgB,4EAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAQ;AACd;AACA,MAAM,4EAAU;AAChB;AACA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,WAAW,yBAAyB;AACpC,yBAAyB,qEAAQ;AACjC,sBAAsB,8EAAa;AACnC,sBAAsB,4EAAM;AAC5B,WAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC,sBAAsB,6EAAc;AACpC,oBAAoB,6EAAc;AAClC,2BAA2B,6EAAc;AACzC,qBAAqB,6EAAc;AACnC;AACA,wBAAwB,6EAAc;AACtC,sBAAsB,6EAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8EAAS;AACjB,OAAO;AACP;AACA;AACA,6BAA6B,8EAAa;AAC1C;AACA;AACA,UAAU,8EAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA;AACA,IAAI,8EAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAc;AACvC;AACA,OAAO;AACP;AACA;AACA,uBAAuB,4EAAc;AACrC;AACA;AACA;AACA,UAAU,8EAAM;AAChB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,IAAI,8EAAoB;AACxB;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B,yBAAyB,4EAAS;AAClC;AACA;AACA;AACA,sBAAsB,8EAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAc;AAC3B,KAAK;AACL;AACA,uCAAuC,4EAAc;AACrD;AACA,cAAc,4EAAc;AAC5B,wCAAwC,4EAAkB;AAC1D;AACA;AACA;AACA;AACA,IAAI,4EAAU;AACd;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B,yBAAyB,4EAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAQ;AAChB;AACA;AACA;AACA,QAAQ,4EAAQ;AAChB;AACA,KAAK;AACL,MAAM,4EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS,6CAA6C;AACrE;AACA;AACA,8BAA8B,4EAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6EAAO;AAC7B,kBAAkB,4EAAS;AAC3B,iCAAiC,4EAAM;AACvC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA,eAAe,4EAAc;AAC7B;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,4EAAc;AAC/B,mBAAmB,oEAAE;AACrB,OAAO;AACP;AACA,iBAAiB,4EAAc;AAC/B,mBAAmB,oEAAE;AACrB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAM;AAC3B;AACA;AACA,WAAW,mCAAmC;AAC9C,IAAI,4EAAU;AACd;AACA;AACA;AACA,iBAAiB,4EAAkB;AACnC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,kBAAkB,8EAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAO;AACf;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAoB;AAC7B,SAAS,oBAAoB;AAC7B,mBAAmB,4EAAM;AACzB,oBAAoB,4EAAM;AAC1B,qBAAqB,4EAAM;AAC3B;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAI;AACN;AACA,EAAE,4EAAI;AACN;AACA,EAAE,4EAAI;AACN,IAAI,4EAAI;AACR,IAAI,4EAAI;AACR,IAAI,4EAAI;AACR,GAAG;AACH;AACA;AACA,EAAE,4EAAI;AACN;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,UAAU;AACnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;AAClB,SAAS,+BAA+B,aAAa;AACrD;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO,UAAU;AACjB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,sCAAsC;AAC/C,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO,6EAAW;AAClB,OAAO,6EAAW;AAClB;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sCAAsC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,wBAAwB;AACnC,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8EAAa;AACrC;AACA;AACA;AACA,kBAAkB,4EAAM;AACxB;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,qBAAqB,4EAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAS;AACf;AACA;AACA,MAAM,8EAAS;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8EAAa;AACxC;AACA;AACA;AACA,QAAQ,8EAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,8EAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,2DAA2D;AACtE,qBAAqB,4EAAM;AAC3B;AACA;AACA,sBAAsB,8EAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8EAAa;AACrC;AACA;AACA;AACA;AACA,mBAAmB,4EAAM;AACzB;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,KAAK;AAChB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAqB;AAC3B;AACA;AACA;AACA;AACA,MAAM,8EAAoB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,6EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB,sEAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,sEAAI;AACtB,kBAAkB,sEAAI;AACtB,mBAAmB,sEAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6EAAa;AAC1B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,sEAAI;AACtB,iBAAiB,sEAAI;AACrB,oBAAoB,sEAAI;AACxB,cAAc,sEAAI;AAClB,mBAAmB,sEAAI;AACvB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,6EAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA,oCAAoC,6EAAc;AAClD;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,6EAA6E;AACtF;AACA;AACA,SAAS,qBAAqB;AAC9B,sBAAsB,6EAAa;AACnC,sBAAsB,6EAAa;AACnC,wBAAwB,6EAAa;AACrC;AACA,gBAAgB,6EAAO;AACvB;AACA;AACA,aAAa,YAAY,GAAG,YAAY;AACxC;AACA;AACA;AACA,cAAc,6EAAO;AACrB;AACA,OAAO,6EAAa;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,0CAA0C,6EAAW;AACrD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,QAAQ,6EAAY;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,6EAAc;AAClB,IAAI,6EAAc;AAClB;AACA,wBAAwB,6EAAa;AACrC;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA,UAAU,6EAAY;AACtB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ,eAAe;AACvB,gBAAgB,6DAA6D;AAC7E;AACA;AACA,QAAQ,6EAAY;AACpB;AACA,KAAK;AACL,kBAAkB,WAAW;AAC7B;AACA,GAAG;AACH,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA,+CAA+C,wBAAwB;AACvE,cAAc,6EAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,uBAAuB;AAClC,SAAS,SAAS;AAClB;AACA;AACA;AACA,sBAAsB,6EAAI;AAC1B,sBAAsB,6EAAI;AAC1B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAkB;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAY;AACvB;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,4EAAK;AACzD;AACA;AACA;AACA,4BAA4B,4EAAK;AACjC;AACA;AACA,gBAAgB,4EAAe,gDAAgD,4EAAK;AACpF,uBAAuB,4EAAK;AAC5B;AACA;AACA;AACA,gBAAgB,wCAAwC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,4EAAe;AAClC,cAAc,yCAAyC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA,kDAAkD,4EAAK;AACvD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAkB;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6EAAY;AACnD;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAK;AAC1B,qBAAqB,4EAAK,WAAW,4EAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4EAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B,WAAW,6EAAc,sCAAsC,qEAAQ;AACvE;AACA;AACA;AACA;AACA,UAAU,6EAAO;AACjB;AACA,OAAO,6EAAY;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA,mBAAmB,4EAAM;AACzB;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe,aAAa;AACrC,8BAA8B,QAAQ;AACtC;AACA,mBAAmB,4EAAM;AACzB,WAAW,0CAA0C;AACrD,WAAW,cAAc;AACzB,SAAS,6EAAa;AACtB,sBAAsB,4EAAS;AAC/B;AACA;AACA;AACA,IAAI,4EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA,qDAAqD,oEAAG;AACxD,GAAG;AACH;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4EAAQ;AAC5B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oEAAG;AAC/B;AACA,WAAW,8EAAe,2BAA2B,6EAAS;AAC9D;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oEAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,wBAAwB,4EAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mCAAmC;AACnD,WAAW,oCAAoC;AAC/C,WAAW,qCAAqC;AAChD,SAAS,uCAAuC;AAChD,QAAQ,wCAAwC;AAChD,SAAS,yCAAyC;AAClD,UAAU,uCAAuC;AACjD,YAAY,uCAAuC;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAa;AACnB;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA,OAAO,6EAAc;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6EAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,WAAW,OAAO,GAAG,6EAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,IAAI,6EAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAc;AACxB,UAAU,6EAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,YAAY,6EAAW;AACvB,UAAU,6EAAW;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAc;AACnC;AACA,uBAAuB,6EAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAQ;AAC/B;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAY;AACvB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,GAAG,6EAAY;AAC9B;AACA,MAAM,kCAAkC;AACxC,MAAM,kCAAkC;AACxC,GAAG;AACH;AACA,QAAQ,OAAO,GAAG,6EAAY;AAC9B;AACA,MAAM,kCAAkC;AACxC,MAAM,kCAAkC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B,SAAS;AACT;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEosB","file":"x","sourcesContent":["/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"]}}